<<<<<<< Updated upstream
{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/swiper.bundle-8bab85e6.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,aAAa;AACzC,yBAAyB,UAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,YAAY;AACZ,mCAAmC,EAAE;AACrC,sCAAsC,EAAE;AACxC;AACA,2BAA2B,EAAE;AAC7B;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,oCAAoC,EAAE;AACtC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,qBAAqB;AACrB,uCAAuC,EAAE;AACzC;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,mCAAmC,EAAE;AACrC,gCAAgC,EAAE;AAClC,yBAAyB,EAAE;AAC3B,2BAA2B,EAAE;AAC7B,KAAK;AACL;AACA;AACA,KAAK;AACL,mCAAmC,EAAE;AACrC,sCAAsC,EAAE;AACxC;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL,wBAAwB,EAAE;AAC1B,uBAAuB,EAAE;AACzB,cAAc;AACd,6BAA6B,EAAE;AAC/B,+BAA+B,EAAE;AACjC;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kCAAkC;AACrD;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,oBAAoB;AACrC,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,oBAAoB;AACrC,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,oBAAoB;AACrC,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8CAA8C,IAAI;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,SAAS,IAAI;AAC/B;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,mBAAmB;AACpC;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,yCAAyC,QAAQ;AACjD;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,mBAAmB;AACpC;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mBAAmB;AAClC;AACA;AACA;AACA;AACA,eAAe,mBAAmB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,wBAAwB;AACvC;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,eAAe,wBAAwB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,iBAAiB;AAClC;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,uBAAuB,qBAAqB;AAC5C;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA,6CAA6C,QAAQ;AACrD;AACA;AACA,KAAK;AACL,iBAAiB,qBAAqB;AACtC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB,iBAAiB;AAClC,oCAAoC;AACpC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,iBAAiB,iBAAiB;AAClC;;AAEA,mBAAmB,uBAAuB;AAC1C;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA,eAAe,kBAAkB;AACjC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,kDAAkD;AAClD,wDAAwD;AACxD;AACA,4BAA4B;AAC5B;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,wCAAwC;AACxC;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,eAAe;AACf,8CAA8C;AAC9C;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH,aAAa,WAAW;AACxB,CAAC,YAAY;;AAEb;AACA;AACA;AACA;AACA,GAAG;AACH,cAAc;AACd,aAAa;AACb;AACA;AACA,GAAG;AACH,kDAAkD;AAClD,wDAAwD;AACxD;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH,4BAA4B;AAC5B,0BAA0B;AAC1B,YAAY;AACZ,sCAAsC;AACtC,0CAA0C;AAC1C,CAAC,UAAU;;AAEX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,iEAAiE;AACjE;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA,uDAAuD,iBAAiB;AACxE;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;AACL;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,yBAAyB;AACzB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oCAAoC,4CAA4C,GAAG,YAAY;AAC/F;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,yCAAyC,yBAAyB;AAClE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,uBAAuB,gCAAgC;AACvD,mBAAmB,oCAAoC;;AAEvD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,oBAAoB,uCAAuC;AAC3D,oDAAoD,oBAAoB;AACxE;AACA;AACA;AACA;AACA,kDAAkD;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,qCAAqC,UAAU;AAC/C,SAAS;AACT,sCAAsC,UAAU;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,WAAW,yCAAyC,KAAK;AAC7E;AACA;AACA,+CAA+C,WAAW,yCAAyC,KAAK;AACxG,yBAAyB,YAAY,yCAAyC,KAAK;AACnF;;AAEA;AACA;AACA;AACA,+CAA+C,WAAW,yCAAyC,KAAK;AACxG,yBAAyB,YAAY,yCAAyC,KAAK;AACnF;AACA;AACA,qBAAqB,qBAAqB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,gBAAgB,aAAa,KAAK;AAC7D,uBAAuB,iBAAiB,aAAa,KAAK;AAC1D,KAAK,kBAAkB,kBAAkB,aAAa,KAAK;AAC3D;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,eAAe,4CAA4C;AAC3D;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA,aAAa,yBAAyB;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA,oDAAoD,UAAU;AAC9D;;AAEA;AACA;AACA;AACA,iBAAiB,mBAAmB;AACpC;AACA;AACA;;AAEA;AACA;AACA;;AAEA,SAAS,4BAA4B;;AAErC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO,+BAA+B;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA,wBAAwB,wBAAwB,GAAG,sBAAsB,GAAG,sBAAsB,GAAG,iCAAiC,GAAG,+BAA+B,GAAG,+BAA+B;;AAE1M;AACA;AACA,6CAA6C,kBAAkB,4BAA4B,YAAY;AACvG,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,kBAAkB,QAAQ,2BAA2B,6BAA6B,UAAU;AAClH;AACA,KAAK;AACL;AACA,sBAAsB,kBAAkB,GAAG,2BAA2B,4BAA4B,UAAU;AAC5G;AACA;AACA;AACA;AACA,0CAA0C,kBAAkB;AAC5D;AACA;AACA;AACA;AACA;AACA,0CAA0C,kBAAkB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,kBAAkB,QAAQ,2BAA2B,6BAA6B,0CAA0C;AAClJ;AACA,KAAK;AACL;AACA,sBAAsB,kBAAkB,GAAG,2BAA2B,4BAA4B,0CAA0C;AAC5I;AACA;AACA;AACA;AACA,sBAAsB,kBAAkB,QAAQ,2BAA2B,6BAA6B,0CAA0C;AAClJ;AACA,KAAK;AACL;AACA,sBAAsB,kBAAkB,GAAG,2BAA2B,4BAA4B,0CAA0C;AAC5I;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wCAAwC,kBAAkB;AAC1D;AACA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,kEAAkE,EAAE,MAAM,EAAE,MAAM,EAAE;AACpF,2CAA2C,EAAE,MAAM,EAAE;AACrD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS,qCAAqC;AAC9C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS,6BAA6B;AACtC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS,oBAAoB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS,qBAAqB;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,kBAAkB,4BAA4B,UAAU,UAAU,2BAA2B;AACrH;AACA;;AAEA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA,sBAAsB,kBAAkB,4BAA4B,UAAU,UAAU,2BAA2B;AACnH;AACA;;AAEA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS,qBAAqB;AAC9B;AACA,0BAA0B,kBAAkB,GAAG,2BAA2B;;AAE1E,uCAAuC,kBAAkB;;AAEzD;AACA;AACA;AACA,qBAAqB,oBAAoB;AACzC,oEAAoE,kBAAkB,GAAG,uBAAuB;AAChH;AACA;AACA,uCAAuC,kBAAkB;AACzD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,iBAAiB,yBAAyB;AAC1C;AACA;AACA,wCAAwC,QAAQ;AAChD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS,6BAA6B;AACtC,0BAA0B,kBAAkB,GAAG,2BAA2B,IAAI,kBAAkB,GAAG,uBAAuB;AAC1H;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS,qBAAqB;AAC9B;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS,kCAAkC;;AAE3C;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS,kCAAkC;AAC3C;AACA;AACA;AACA;AACA,4CAA4C,kBAAkB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B,YAAY;AAC1C;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA,iBAAiB,yBAAyB;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,SAAS,kCAAkC;;AAE3C;AACA;AACA;AACA;AACA,4CAA4C,kBAAkB;AAC9D;AACA;AACA;;AAEA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4CAA4C,oBAAoB;AAChE,sCAAsC,oBAAoB;AAC1D;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,SAAS,kBAAkB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wGAAwG,sBAAsB;AAC9H;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS,qCAAqC;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,uBAAuB;AACxC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,SAAS,aAAa;;AAEtB;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS,2CAA2C;;AAEpD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,4HAA4H,gCAAgC;AAC5J;AACA,iGAAiG,0BAA0B;AAC3H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,8HAA8H,gCAAgC;AAC9J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA,mBAAmB;;AAEnB;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,iBAAiB;AAC1C;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,SAAS,kBAAkB;;AAE3B;AACA;;AAEA,eAAe;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,gCAAgC;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB;;AAEvqCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE;AACjE;AACA,KAAK;;AAEL;AACA,wCAAwC;AACxC;;AAEA;AACA,mCAAmC;AACnC,2CAA2C;AAC3C,yCAAyC;;AAEzC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,yCAAyC,WAAW,kBAAkB;AACtE;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA,wCAAwC,2BAA2B;;AAEnE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,mCAAmC,mBAAmB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,QAAQ;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,mCAAmC,mBAAmB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,qCAAqC,EAAE,iBAAiB,OAAO,iBAAiB;AACtG,mBAAmB,qCAAqC,EAAE,aAAa;;AAEvE;AACA,6BAA6B,qCAAqC,MAAM,aAAa;AACrF;;AAEA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA,6BAA6B;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,qBAAqB,6BAA6B;AAClD;AACA;AACA;AACA;AACA,2CAA2C,gDAAgD;;AAE3F;AACA,kDAAkD,oBAAoB;AACtE,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;AAC5C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe;AACf;AACA,eAAe;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B;AAC9B;AACA;AACA,OAAO,OAAO;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;;AAEA,6CAA6C;AAC7C;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,+DAA+D;AAC9H;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,yBAAyB,GAAG,yBAAyB,QAAQ,yBAAyB,aAAa,yBAAyB,QAAQ,yBAAyB,aAAa,yBAAyB;AAChO;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,yBAAyB;AAC3D;AACA;AACA;AACA;AACA,6BAA6B,yBAAyB;AACtD;AACA,6BAA6B,yBAAyB;AACtD;AACA;AACA;AACA;AACA,6BAA6B,yBAAyB;AACtD;AACA,6BAA6B,yBAAyB;AACtD;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,kCAAkC,gBAAgB;AAClD,sCAAsC,yBAAyB;AAC/D;AACA;AACA;AACA,yBAAyB,yBAAyB;AAClD;AACA,yBAAyB,yBAAyB;AAClD;AACA;AACA,yBAAyB,yBAAyB;AAClD;AACA,yBAAyB,yBAAyB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,cAAc;AACjF;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,mBAAmB,4BAA4B,0CAA0C,OAAO,WAAW,OAAO;AAClH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB,qBAAqB;AAC1C;AACA;AACA,SAAS;AACT,gCAAgC,qBAAqB,UAAU,mBAAmB,MAAM,qBAAqB;AAC7G;AACA;AACA;AACA,+CAA+C,mBAAmB;AAClE;AACA;AACA;AACA;AACA,OAAO;AACP,yCAAyC,oBAAoB;AAC7D;AACA,0BAA0B,kBAAkB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,yCAAyC,4BAA4B;AACrE;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,sBAAsB,qBAAqB,EAAE,YAAY;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,mBAAmB;AAC7C;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B,mBAAmB;AAC9C;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,WAAW,yCAAyC;AACpD;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,yCAAyC,OAAO;AAChD,OAAO;AACP,wCAAwC,OAAO;AAC/C;AACA,kCAAkC,QAAQ;AAC1C,KAAK;AACL;AACA,8CAA8C,OAAO;AACrD,OAAO;AACP,wCAAwC,OAAO;AAC/C;AACA,mCAAmC,QAAQ;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA,WAAW,YAAY;AACvB,WAAW,eAAe;;AAE1B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,kCAAkC,SAAS;AAC3C,KAAK;AACL,mCAAmC,SAAS;AAC5C;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,WAAW,+BAA+B;AAC1C;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,WAAW,wBAAwB;AACnC,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,WAAW,wBAAwB;AACnC,WAAW,eAAe;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA,WAAW,YAAY;AACvB,WAAW,MAAM;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,iFAAiF,iCAAiC;AAClH,kFAAkF,gCAAgC;AAClH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,iFAAiF,iCAAiC;AAClH,kFAAkF,gCAAgC;AAClH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,WAAW,4BAA4B;AACvC;;AAEA;AACA;AACA;AACA;;AAEA,+BAA+B,kCAAkC;AACjE;AACA,iCAAiC,kCAAkC;AACnE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,sBAAsB;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,WAAW;AACtE,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2FAA2F,WAAW;AACtG;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,WAAW,2BAA2B;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kDAAkD,eAAe,MAAM,eAAe;AACtF,GAAG;AACH;AACA;AACA;AACA,WAAW,2BAA2B;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+EAA+E,eAAe,MAAM,eAAe;AACnH,GAAG;AACH;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,WAAW,iBAAiB;;AAE5B;AACA;AACA;AACA,yDAAyD,sBAAsB;AAC/E;AACA;;AAEA,iCAAiC,wBAAwB;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,kEAAkE,WAAW,MAAM,WAAW;AAC9F,2EAA2E,WAAW;AACtF,GAAG;AACH;AACA;;AAEA;AACA;AACA,WAAW,UAAU;;AAErB;AACA;AACA;AACA,yDAAyD,sBAAsB;AAC/E;AACA;;AAEA;AACA;AACA;AACA;AACA,oCAAoC,wBAAwB;AAC5D;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA,sIAAsI,gCAAgC;;AAEtK;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,sDAAsD,kCAAkC;AACxF,GAAG;AACH;AACA;AACA;AACA;;AAEA;;AAEA,sIAAsI,gCAAgC;;AAEtK;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,uDAAuD,kCAAkC;AACzF,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,0BAA0B;AAC1B,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEkB","file":"swiper-bundle-8bab85e6-js-es2015.js","sourcesContent":["/**\r\n * SSR Window 2.0.0\r\n * Better handling for window object in SSR environment\r\n * https://github.com/nolimits4web/ssr-window\r\n *\r\n * Copyright 2020, Vladimir Kharlampidi\r\n *\r\n * Licensed under MIT\r\n *\r\n * Released on: May 12, 2020\r\n */\r\n/* eslint-disable no-param-reassign */\r\nfunction isObject(obj) {\r\n    return (obj !== null &&\r\n        typeof obj === 'object' &&\r\n        'constructor' in obj &&\r\n        obj.constructor === Object);\r\n}\r\nfunction extend(target, src) {\r\n    if (target === void 0) { target = {}; }\r\n    if (src === void 0) { src = {}; }\r\n    Object.keys(src).forEach(function (key) {\r\n        if (typeof target[key] === 'undefined')\r\n            target[key] = src[key];\r\n        else if (isObject(src[key]) &&\r\n            isObject(target[key]) &&\r\n            Object.keys(src[key]).length > 0) {\r\n            extend(target[key], src[key]);\r\n        }\r\n    });\r\n}\r\n\r\nvar doc = typeof document !== 'undefined' ? document : {};\r\nvar ssrDocument = {\r\n    body: {},\r\n    addEventListener: function () { },\r\n    removeEventListener: function () { },\r\n    activeElement: {\r\n        blur: function () { },\r\n        nodeName: '',\r\n    },\r\n    querySelector: function () {\r\n        return null;\r\n    },\r\n    querySelectorAll: function () {\r\n        return [];\r\n    },\r\n    getElementById: function () {\r\n        return null;\r\n    },\r\n    createEvent: function () {\r\n        return {\r\n            initEvent: function () { },\r\n        };\r\n    },\r\n    createElement: function () {\r\n        return {\r\n            children: [],\r\n            childNodes: [],\r\n            style: {},\r\n            setAttribute: function () { },\r\n            getElementsByTagName: function () {\r\n                return [];\r\n            },\r\n        };\r\n    },\r\n    createElementNS: function () {\r\n        return {};\r\n    },\r\n    importNode: function () {\r\n        return null;\r\n    },\r\n    location: {\r\n        hash: '',\r\n        host: '',\r\n        hostname: '',\r\n        href: '',\r\n        origin: '',\r\n        pathname: '',\r\n        protocol: '',\r\n        search: '',\r\n    },\r\n};\r\nextend(doc, ssrDocument);\r\n\r\nvar win = typeof window !== 'undefined' ? window : {};\r\nvar ssrWindow = {\r\n    document: ssrDocument,\r\n    navigator: {\r\n        userAgent: '',\r\n    },\r\n    location: {\r\n        hash: '',\r\n        host: '',\r\n        hostname: '',\r\n        href: '',\r\n        origin: '',\r\n        pathname: '',\r\n        protocol: '',\r\n        search: '',\r\n    },\r\n    history: {\r\n        replaceState: function () { },\r\n        pushState: function () { },\r\n        go: function () { },\r\n        back: function () { },\r\n    },\r\n    CustomEvent: function CustomEvent() {\r\n        return this;\r\n    },\r\n    addEventListener: function () { },\r\n    removeEventListener: function () { },\r\n    getComputedStyle: function () {\r\n        return {\r\n            getPropertyValue: function () {\r\n                return '';\r\n            },\r\n        };\r\n    },\r\n    Image: function () { },\r\n    Date: function () { },\r\n    screen: {},\r\n    setTimeout: function () { },\r\n    clearTimeout: function () { },\r\n    matchMedia: function () {\r\n        return {};\r\n    },\r\n};\r\nextend(win, ssrWindow);\r\n\r\n/**\r\n * Dom7 2.1.5\r\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\r\n * http://framework7.io/docs/dom.html\r\n *\r\n * Copyright 2020, Vladimir Kharlampidi\r\n * The iDangero.us\r\n * http://www.idangero.us/\r\n *\r\n * Licensed under MIT\r\n *\r\n * Released on: May 15, 2020\r\n */\r\n\r\nclass Dom7 {\r\n  constructor(arr) {\r\n    const self = this;\r\n    // Create array-like object\r\n    for (let i = 0; i < arr.length; i += 1) {\r\n      self[i] = arr[i];\r\n    }\r\n    self.length = arr.length;\r\n    // Return collection with methods\r\n    return this;\r\n  }\r\n}\r\n\r\nfunction $(selector, context) {\r\n  const arr = [];\r\n  let i = 0;\r\n  if (selector && !context) {\r\n    if (selector instanceof Dom7) {\r\n      return selector;\r\n    }\r\n  }\r\n  if (selector) {\r\n      // String\r\n    if (typeof selector === 'string') {\r\n      let els;\r\n      let tempParent;\r\n      const html = selector.trim();\r\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\r\n        let toCreate = 'div';\r\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\r\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\r\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\r\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\r\n        if (html.indexOf('<option') === 0) toCreate = 'select';\r\n        tempParent = doc.createElement(toCreate);\r\n        tempParent.innerHTML = html;\r\n        for (i = 0; i < tempParent.childNodes.length; i += 1) {\r\n          arr.push(tempParent.childNodes[i]);\r\n        }\r\n      } else {\r\n        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\r\n          // Pure ID selector\r\n          els = [doc.getElementById(selector.trim().split('#')[1])];\r\n        } else {\r\n          // Other selectors\r\n          els = (context || doc).querySelectorAll(selector.trim());\r\n        }\r\n        for (i = 0; i < els.length; i += 1) {\r\n          if (els[i]) arr.push(els[i]);\r\n        }\r\n      }\r\n    } else if (selector.nodeType || selector === win || selector === doc) {\r\n      // Node/element\r\n      arr.push(selector);\r\n    } else if (selector.length > 0 && selector[0].nodeType) {\r\n      // Array of elements or instance of Dom\r\n      for (i = 0; i < selector.length; i += 1) {\r\n        arr.push(selector[i]);\r\n      }\r\n    }\r\n  }\r\n  return new Dom7(arr);\r\n}\r\n\r\n$.fn = Dom7.prototype;\r\n$.Class = Dom7;\r\n$.Dom7 = Dom7;\r\n\r\nfunction unique(arr) {\r\n  const uniqueArray = [];\r\n  for (let i = 0; i < arr.length; i += 1) {\r\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\r\n  }\r\n  return uniqueArray;\r\n}\r\n\r\n// Classes and attributes\r\nfunction addClass(className) {\r\n  if (typeof className === 'undefined') {\r\n    return this;\r\n  }\r\n  const classes = className.split(' ');\r\n  for (let i = 0; i < classes.length; i += 1) {\r\n    for (let j = 0; j < this.length; j += 1) {\r\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.add(classes[i]);\r\n    }\r\n  }\r\n  return this;\r\n}\r\nfunction removeClass(className) {\r\n  const classes = className.split(' ');\r\n  for (let i = 0; i < classes.length; i += 1) {\r\n    for (let j = 0; j < this.length; j += 1) {\r\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.remove(classes[i]);\r\n    }\r\n  }\r\n  return this;\r\n}\r\nfunction hasClass(className) {\r\n  if (!this[0]) return false;\r\n  return this[0].classList.contains(className);\r\n}\r\nfunction toggleClass(className) {\r\n  const classes = className.split(' ');\r\n  for (let i = 0; i < classes.length; i += 1) {\r\n    for (let j = 0; j < this.length; j += 1) {\r\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.toggle(classes[i]);\r\n    }\r\n  }\r\n  return this;\r\n}\r\nfunction attr(attrs, value) {\r\n  if (arguments.length === 1 && typeof attrs === 'string') {\r\n    // Get attr\r\n    if (this[0]) return this[0].getAttribute(attrs);\r\n    return undefined;\r\n  }\r\n\r\n  // Set attrs\r\n  for (let i = 0; i < this.length; i += 1) {\r\n    if (arguments.length === 2) {\r\n      // String\r\n      this[i].setAttribute(attrs, value);\r\n    } else {\r\n      // Object\r\n      // eslint-disable-next-line\r\n      for (const attrName in attrs) {\r\n        this[i][attrName] = attrs[attrName];\r\n        this[i].setAttribute(attrName, attrs[attrName]);\r\n      }\r\n    }\r\n  }\r\n  return this;\r\n}\r\n// eslint-disable-next-line\r\nfunction removeAttr(attr) {\r\n  for (let i = 0; i < this.length; i += 1) {\r\n    this[i].removeAttribute(attr);\r\n  }\r\n  return this;\r\n}\r\nfunction data(key, value) {\r\n  let el;\r\n  if (typeof value === 'undefined') {\r\n    el = this[0];\r\n    // Get value\r\n    if (el) {\r\n      if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\r\n        return el.dom7ElementDataStorage[key];\r\n      }\r\n\r\n      const dataKey = el.getAttribute(`data-${key}`);\r\n      if (dataKey) {\r\n        return dataKey;\r\n      }\r\n      return undefined;\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  // Set value\r\n  for (let i = 0; i < this.length; i += 1) {\r\n    el = this[i];\r\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\r\n    el.dom7ElementDataStorage[key] = value;\r\n  }\r\n  return this;\r\n}\r\n// Transforms\r\n// eslint-disable-next-line\r\nfunction transform(transform) {\r\n  for (let i = 0; i < this.length; i += 1) {\r\n    const elStyle = this[i].style;\r\n    elStyle.webkitTransform = transform;\r\n    elStyle.transform = transform;\r\n  }\r\n  return this;\r\n}\r\nfunction transition(duration) {\r\n  if (typeof duration !== 'string') {\r\n    duration = `${duration}ms`; // eslint-disable-line\r\n  }\r\n  for (let i = 0; i < this.length; i += 1) {\r\n    const elStyle = this[i].style;\r\n    elStyle.webkitTransitionDuration = duration;\r\n    elStyle.transitionDuration = duration;\r\n  }\r\n  return this;\r\n}\r\n// Events\r\nfunction on(...args) {\r\n  let [eventType, targetSelector, listener, capture] = args;\r\n  if (typeof args[1] === 'function') {\r\n    [eventType, listener, capture] = args;\r\n    targetSelector = undefined;\r\n  }\r\n  if (!capture) capture = false;\r\n\r\n  function handleLiveEvent(e) {\r\n    const target = e.target;\r\n    if (!target) return;\r\n    const eventData = e.target.dom7EventData || [];\r\n    if (eventData.indexOf(e) < 0) {\r\n      eventData.unshift(e);\r\n    }\r\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);\r\n    else {\r\n      const parents = $(target).parents(); // eslint-disable-line\r\n      for (let k = 0; k < parents.length; k += 1) {\r\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\r\n      }\r\n    }\r\n  }\r\n  function handleEvent(e) {\r\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\r\n    if (eventData.indexOf(e) < 0) {\r\n      eventData.unshift(e);\r\n    }\r\n    listener.apply(this, eventData);\r\n  }\r\n  const events = eventType.split(' ');\r\n  let j;\r\n  for (let i = 0; i < this.length; i += 1) {\r\n    const el = this[i];\r\n    if (!targetSelector) {\r\n      for (j = 0; j < events.length; j += 1) {\r\n        const event = events[j];\r\n        if (!el.dom7Listeners) el.dom7Listeners = {};\r\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\r\n        el.dom7Listeners[event].push({\r\n          listener,\r\n          proxyListener: handleEvent,\r\n        });\r\n        el.addEventListener(event, handleEvent, capture);\r\n      }\r\n    } else {\r\n      // Live events\r\n      for (j = 0; j < events.length; j += 1) {\r\n        const event = events[j];\r\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\r\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\r\n        el.dom7LiveListeners[event].push({\r\n          listener,\r\n          proxyListener: handleLiveEvent,\r\n        });\r\n        el.addEventListener(event, handleLiveEvent, capture);\r\n      }\r\n    }\r\n  }\r\n  return this;\r\n}\r\nfunction off(...args) {\r\n  let [eventType, targetSelector, listener, capture] = args;\r\n  if (typeof args[1] === 'function') {\r\n    [eventType, listener, capture] = args;\r\n    targetSelector = undefined;\r\n  }\r\n  if (!capture) capture = false;\r\n\r\n  const events = eventType.split(' ');\r\n  for (let i = 0; i < events.length; i += 1) {\r\n    const event = events[i];\r\n    for (let j = 0; j < this.length; j += 1) {\r\n      const el = this[j];\r\n      let handlers;\r\n      if (!targetSelector && el.dom7Listeners) {\r\n        handlers = el.dom7Listeners[event];\r\n      } else if (targetSelector && el.dom7LiveListeners) {\r\n        handlers = el.dom7LiveListeners[event];\r\n      }\r\n      if (handlers && handlers.length) {\r\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\r\n          const handler = handlers[k];\r\n          if (listener && handler.listener === listener) {\r\n            el.removeEventListener(event, handler.proxyListener, capture);\r\n            handlers.splice(k, 1);\r\n          } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\r\n            el.removeEventListener(event, handler.proxyListener, capture);\r\n            handlers.splice(k, 1);\r\n          } else if (!listener) {\r\n            el.removeEventListener(event, handler.proxyListener, capture);\r\n            handlers.splice(k, 1);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return this;\r\n}\r\nfunction trigger(...args) {\r\n  const events = args[0].split(' ');\r\n  const eventData = args[1];\r\n  for (let i = 0; i < events.length; i += 1) {\r\n    const event = events[i];\r\n    for (let j = 0; j < this.length; j += 1) {\r\n      const el = this[j];\r\n      let evt;\r\n      try {\r\n        evt = new win.CustomEvent(event, {\r\n          detail: eventData,\r\n          bubbles: true,\r\n          cancelable: true,\r\n        });\r\n      } catch (e) {\r\n        evt = doc.createEvent('Event');\r\n        evt.initEvent(event, true, true);\r\n        evt.detail = eventData;\r\n      }\r\n      // eslint-disable-next-line\r\n      el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\r\n      el.dispatchEvent(evt);\r\n      el.dom7EventData = [];\r\n      delete el.dom7EventData;\r\n    }\r\n  }\r\n  return this;\r\n}\r\nfunction transitionEnd(callback) {\r\n  const events = ['webkitTransitionEnd', 'transitionend'];\r\n  const dom = this;\r\n  let i;\r\n  function fireCallBack(e) {\r\n    /* jshint validthis:true */\r\n    if (e.target !== this) return;\r\n    callback.call(this, e);\r\n    for (i = 0; i < events.length; i += 1) {\r\n      dom.off(events[i], fireCallBack);\r\n    }\r\n  }\r\n  if (callback) {\r\n    for (i = 0; i < events.length; i += 1) {\r\n      dom.on(events[i], fireCallBack);\r\n    }\r\n  }\r\n  return this;\r\n}\r\nfunction outerWidth(includeMargins) {\r\n  if (this.length > 0) {\r\n    if (includeMargins) {\r\n      // eslint-disable-next-line\r\n      const styles = this.styles();\r\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\r\n    }\r\n    return this[0].offsetWidth;\r\n  }\r\n  return null;\r\n}\r\nfunction outerHeight(includeMargins) {\r\n  if (this.length > 0) {\r\n    if (includeMargins) {\r\n      // eslint-disable-next-line\r\n      const styles = this.styles();\r\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\r\n    }\r\n    return this[0].offsetHeight;\r\n  }\r\n  return null;\r\n}\r\nfunction offset() {\r\n  if (this.length > 0) {\r\n    const el = this[0];\r\n    const box = el.getBoundingClientRect();\r\n    const body = doc.body;\r\n    const clientTop = el.clientTop || body.clientTop || 0;\r\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\r\n    const scrollTop = el === win ? win.scrollY : el.scrollTop;\r\n    const scrollLeft = el === win ? win.scrollX : el.scrollLeft;\r\n    return {\r\n      top: (box.top + scrollTop) - clientTop,\r\n      left: (box.left + scrollLeft) - clientLeft,\r\n    };\r\n  }\r\n\r\n  return null;\r\n}\r\nfunction styles() {\r\n  if (this[0]) return win.getComputedStyle(this[0], null);\r\n  return {};\r\n}\r\nfunction css(props, value) {\r\n  let i;\r\n  if (arguments.length === 1) {\r\n    if (typeof props === 'string') {\r\n      if (this[0]) return win.getComputedStyle(this[0], null).getPropertyValue(props);\r\n    } else {\r\n      for (i = 0; i < this.length; i += 1) {\r\n        // eslint-disable-next-line\r\n        for (let prop in props) {\r\n          this[i].style[prop] = props[prop];\r\n        }\r\n      }\r\n      return this;\r\n    }\r\n  }\r\n  if (arguments.length === 2 && typeof props === 'string') {\r\n    for (i = 0; i < this.length; i += 1) {\r\n      this[i].style[props] = value;\r\n    }\r\n    return this;\r\n  }\r\n  return this;\r\n}\r\n// Iterate over the collection passing elements to `callback`\r\nfunction each(callback) {\r\n  // Don't bother continuing without a callback\r\n  if (!callback) return this;\r\n  // Iterate over the current collection\r\n  for (let i = 0; i < this.length; i += 1) {\r\n    // If the callback returns false\r\n    if (callback.call(this[i], i, this[i]) === false) {\r\n      // End the loop early\r\n      return this;\r\n    }\r\n  }\r\n  // Return `this` to allow chained DOM operations\r\n  return this;\r\n}\r\n// eslint-disable-next-line\r\nfunction html(html) {\r\n  if (typeof html === 'undefined') {\r\n    return this[0] ? this[0].innerHTML : undefined;\r\n  }\r\n\r\n  for (let i = 0; i < this.length; i += 1) {\r\n    this[i].innerHTML = html;\r\n  }\r\n  return this;\r\n}\r\n// eslint-disable-next-line\r\nfunction text(text) {\r\n  if (typeof text === 'undefined') {\r\n    if (this[0]) {\r\n      return this[0].textContent.trim();\r\n    }\r\n    return null;\r\n  }\r\n\r\n  for (let i = 0; i < this.length; i += 1) {\r\n    this[i].textContent = text;\r\n  }\r\n  return this;\r\n}\r\nfunction is(selector) {\r\n  const el = this[0];\r\n  let compareWith;\r\n  let i;\r\n  if (!el || typeof selector === 'undefined') return false;\r\n  if (typeof selector === 'string') {\r\n    if (el.matches) return el.matches(selector);\r\n    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\r\n    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\r\n\r\n    compareWith = $(selector);\r\n    for (i = 0; i < compareWith.length; i += 1) {\r\n      if (compareWith[i] === el) return true;\r\n    }\r\n    return false;\r\n  } else if (selector === doc) return el === doc;\r\n  else if (selector === win) return el === win;\r\n\r\n  if (selector.nodeType || selector instanceof Dom7) {\r\n    compareWith = selector.nodeType ? [selector] : selector;\r\n    for (i = 0; i < compareWith.length; i += 1) {\r\n      if (compareWith[i] === el) return true;\r\n    }\r\n    return false;\r\n  }\r\n  return false;\r\n}\r\nfunction index() {\r\n  let child = this[0];\r\n  let i;\r\n  if (child) {\r\n    i = 0;\r\n    // eslint-disable-next-line\r\n    while ((child = child.previousSibling) !== null) {\r\n      if (child.nodeType === 1) i += 1;\r\n    }\r\n    return i;\r\n  }\r\n  return undefined;\r\n}\r\n// eslint-disable-next-line\r\nfunction eq(index) {\r\n  if (typeof index === 'undefined') return this;\r\n  const length = this.length;\r\n  let returnIndex;\r\n  if (index > length - 1) {\r\n    return new Dom7([]);\r\n  }\r\n  if (index < 0) {\r\n    returnIndex = length + index;\r\n    if (returnIndex < 0) return new Dom7([]);\r\n    return new Dom7([this[returnIndex]]);\r\n  }\r\n  return new Dom7([this[index]]);\r\n}\r\nfunction append(...args) {\r\n  let newChild;\r\n\r\n  for (let k = 0; k < args.length; k += 1) {\r\n    newChild = args[k];\r\n    for (let i = 0; i < this.length; i += 1) {\r\n      if (typeof newChild === 'string') {\r\n        const tempDiv = doc.createElement('div');\r\n        tempDiv.innerHTML = newChild;\r\n        while (tempDiv.firstChild) {\r\n          this[i].appendChild(tempDiv.firstChild);\r\n        }\r\n      } else if (newChild instanceof Dom7) {\r\n        for (let j = 0; j < newChild.length; j += 1) {\r\n          this[i].appendChild(newChild[j]);\r\n        }\r\n      } else {\r\n        this[i].appendChild(newChild);\r\n      }\r\n    }\r\n  }\r\n\r\n  return this;\r\n}\r\nfunction prepend(newChild) {\r\n  let i;\r\n  let j;\r\n  for (i = 0; i < this.length; i += 1) {\r\n    if (typeof newChild === 'string') {\r\n      const tempDiv = doc.createElement('div');\r\n      tempDiv.innerHTML = newChild;\r\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\r\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\r\n      }\r\n    } else if (newChild instanceof Dom7) {\r\n      for (j = 0; j < newChild.length; j += 1) {\r\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\r\n      }\r\n    } else {\r\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\r\n    }\r\n  }\r\n  return this;\r\n}\r\nfunction next(selector) {\r\n  if (this.length > 0) {\r\n    if (selector) {\r\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\r\n        return new Dom7([this[0].nextElementSibling]);\r\n      }\r\n      return new Dom7([]);\r\n    }\r\n\r\n    if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\r\n    return new Dom7([]);\r\n  }\r\n  return new Dom7([]);\r\n}\r\nfunction nextAll(selector) {\r\n  const nextEls = [];\r\n  let el = this[0];\r\n  if (!el) return new Dom7([]);\r\n  while (el.nextElementSibling) {\r\n    const next = el.nextElementSibling; // eslint-disable-line\r\n    if (selector) {\r\n      if ($(next).is(selector)) nextEls.push(next);\r\n    } else nextEls.push(next);\r\n    el = next;\r\n  }\r\n  return new Dom7(nextEls);\r\n}\r\nfunction prev(selector) {\r\n  if (this.length > 0) {\r\n    const el = this[0];\r\n    if (selector) {\r\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\r\n        return new Dom7([el.previousElementSibling]);\r\n      }\r\n      return new Dom7([]);\r\n    }\r\n\r\n    if (el.previousElementSibling) return new Dom7([el.previousElementSibling]);\r\n    return new Dom7([]);\r\n  }\r\n  return new Dom7([]);\r\n}\r\nfunction prevAll(selector) {\r\n  const prevEls = [];\r\n  let el = this[0];\r\n  if (!el) return new Dom7([]);\r\n  while (el.previousElementSibling) {\r\n    const prev = el.previousElementSibling; // eslint-disable-line\r\n    if (selector) {\r\n      if ($(prev).is(selector)) prevEls.push(prev);\r\n    } else prevEls.push(prev);\r\n    el = prev;\r\n  }\r\n  return new Dom7(prevEls);\r\n}\r\nfunction parent(selector) {\r\n  const parents = []; // eslint-disable-line\r\n  for (let i = 0; i < this.length; i += 1) {\r\n    if (this[i].parentNode !== null) {\r\n      if (selector) {\r\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\r\n      } else {\r\n        parents.push(this[i].parentNode);\r\n      }\r\n    }\r\n  }\r\n  return $(unique(parents));\r\n}\r\nfunction parents(selector) {\r\n  const parents = []; // eslint-disable-line\r\n  for (let i = 0; i < this.length; i += 1) {\r\n    let parent = this[i].parentNode; // eslint-disable-line\r\n    while (parent) {\r\n      if (selector) {\r\n        if ($(parent).is(selector)) parents.push(parent);\r\n      } else {\r\n        parents.push(parent);\r\n      }\r\n      parent = parent.parentNode;\r\n    }\r\n  }\r\n  return $(unique(parents));\r\n}\r\nfunction closest(selector) {\r\n  let closest = this; // eslint-disable-line\r\n  if (typeof selector === 'undefined') {\r\n    return new Dom7([]);\r\n  }\r\n  if (!closest.is(selector)) {\r\n    closest = closest.parents(selector).eq(0);\r\n  }\r\n  return closest;\r\n}\r\nfunction find(selector) {\r\n  const foundElements = [];\r\n  for (let i = 0; i < this.length; i += 1) {\r\n    const found = this[i].querySelectorAll(selector);\r\n    for (let j = 0; j < found.length; j += 1) {\r\n      foundElements.push(found[j]);\r\n    }\r\n  }\r\n  return new Dom7(foundElements);\r\n}\r\nfunction children(selector) {\r\n  const children = []; // eslint-disable-line\r\n  for (let i = 0; i < this.length; i += 1) {\r\n    const childNodes = this[i].childNodes;\r\n\r\n    for (let j = 0; j < childNodes.length; j += 1) {\r\n      if (!selector) {\r\n        if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\r\n      } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\r\n        children.push(childNodes[j]);\r\n      }\r\n    }\r\n  }\r\n  return new Dom7(unique(children));\r\n}\r\nfunction remove() {\r\n  for (let i = 0; i < this.length; i += 1) {\r\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\r\n  }\r\n  return this;\r\n}\r\nfunction add(...args) {\r\n  const dom = this;\r\n  let i;\r\n  let j;\r\n  for (i = 0; i < args.length; i += 1) {\r\n    const toAdd = $(args[i]);\r\n    for (j = 0; j < toAdd.length; j += 1) {\r\n      dom[dom.length] = toAdd[j];\r\n      dom.length += 1;\r\n    }\r\n  }\r\n  return dom;\r\n}\r\n\r\n/**\r\n * SSR Window 1.0.1\r\n * Better handling for window object in SSR environment\r\n * https://github.com/nolimits4web/ssr-window\r\n *\r\n * Copyright 2018, Vladimir Kharlampidi\r\n *\r\n * Licensed under MIT\r\n *\r\n * Released on: July 18, 2018\r\n */\r\nvar doc$1 = (typeof document === 'undefined') ? {\r\n  body: {},\r\n  addEventListener: function addEventListener() {},\r\n  removeEventListener: function removeEventListener() {},\r\n  activeElement: {\r\n    blur: function blur() {},\r\n    nodeName: '',\r\n  },\r\n  querySelector: function querySelector() {\r\n    return null;\r\n  },\r\n  querySelectorAll: function querySelectorAll() {\r\n    return [];\r\n  },\r\n  getElementById: function getElementById() {\r\n    return null;\r\n  },\r\n  createEvent: function createEvent() {\r\n    return {\r\n      initEvent: function initEvent() {},\r\n    };\r\n  },\r\n  createElement: function createElement() {\r\n    return {\r\n      children: [],\r\n      childNodes: [],\r\n      style: {},\r\n      setAttribute: function setAttribute() {},\r\n      getElementsByTagName: function getElementsByTagName() {\r\n        return [];\r\n      },\r\n    };\r\n  },\r\n  location: { hash: '' },\r\n} : document; // eslint-disable-line\r\n\r\nvar win$1 = (typeof window === 'undefined') ? {\r\n  document: doc$1,\r\n  navigator: {\r\n    userAgent: '',\r\n  },\r\n  location: {},\r\n  history: {},\r\n  CustomEvent: function CustomEvent() {\r\n    return this;\r\n  },\r\n  addEventListener: function addEventListener() {},\r\n  removeEventListener: function removeEventListener() {},\r\n  getComputedStyle: function getComputedStyle() {\r\n    return {\r\n      getPropertyValue: function getPropertyValue() {\r\n        return '';\r\n      },\r\n    };\r\n  },\r\n  Image: function Image() {},\r\n  Date: function Date() {},\r\n  screen: {},\r\n  setTimeout: function setTimeout() {},\r\n  clearTimeout: function clearTimeout() {},\r\n} : window; // eslint-disable-line\r\n\r\n/**\r\n * Swiper 4.5.1\r\n * Most modern mobile touch slider and framework with hardware accelerated transitions\r\n * http://www.idangero.us/swiper/\r\n *\r\n * Copyright 2014-2019 Vladimir Kharlampidi\r\n *\r\n * Released under the MIT License\r\n *\r\n * Released on: September 13, 2019\r\n */\r\n\r\nconst Methods = {\r\n  addClass,\r\n  removeClass,\r\n  hasClass,\r\n  toggleClass,\r\n  attr,\r\n  removeAttr,\r\n  data,\r\n  transform,\r\n  transition: transition,\r\n  on,\r\n  off,\r\n  trigger,\r\n  transitionEnd: transitionEnd,\r\n  outerWidth,\r\n  outerHeight,\r\n  offset,\r\n  css,\r\n  each,\r\n  html,\r\n  text,\r\n  is,\r\n  index,\r\n  eq,\r\n  append,\r\n  prepend,\r\n  next,\r\n  nextAll,\r\n  prev,\r\n  prevAll,\r\n  parent,\r\n  parents,\r\n  closest,\r\n  find,\r\n  children,\r\n  remove,\r\n  add,\r\n  styles,\r\n};\r\n\r\nObject.keys(Methods).forEach((methodName) => {\r\n  $.fn[methodName] = $.fn[methodName] || Methods[methodName];\r\n});\r\n\r\nconst Utils = {\r\n  deleteProps(obj) {\r\n    const object = obj;\r\n    Object.keys(object).forEach((key) => {\r\n      try {\r\n        object[key] = null;\r\n      } catch (e) {\r\n        // no getter for object\r\n      }\r\n      try {\r\n        delete object[key];\r\n      } catch (e) {\r\n        // something got wrong\r\n      }\r\n    });\r\n  },\r\n  nextTick(callback, delay = 0) {\r\n    return setTimeout(callback, delay);\r\n  },\r\n  now() {\r\n    return Date.now();\r\n  },\r\n  getTranslate(el, axis = 'x') {\r\n    let matrix;\r\n    let curTransform;\r\n    let transformMatrix;\r\n\r\n    const curStyle = win$1.getComputedStyle(el, null);\r\n\r\n    if (win$1.WebKitCSSMatrix) {\r\n      curTransform = curStyle.transform || curStyle.webkitTransform;\r\n      if (curTransform.split(',').length > 6) {\r\n        curTransform = curTransform.split(', ').map((a) => a.replace(',', '.')).join(', ');\r\n      }\r\n      // Some old versions of Webkit choke when 'none' is passed; pass\r\n      // empty string instead in this case\r\n      transformMatrix = new win$1.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\r\n    } else {\r\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\r\n      matrix = transformMatrix.toString().split(',');\r\n    }\r\n\r\n    if (axis === 'x') {\r\n      // Latest Chrome and webkits Fix\r\n      if (win$1.WebKitCSSMatrix) curTransform = transformMatrix.m41;\r\n      // Crazy IE10 Matrix\r\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\r\n      // Normal Browsers\r\n      else curTransform = parseFloat(matrix[4]);\r\n    }\r\n    if (axis === 'y') {\r\n      // Latest Chrome and webkits Fix\r\n      if (win$1.WebKitCSSMatrix) curTransform = transformMatrix.m42;\r\n      // Crazy IE10 Matrix\r\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\r\n      // Normal Browsers\r\n      else curTransform = parseFloat(matrix[5]);\r\n    }\r\n    return curTransform || 0;\r\n  },\r\n  parseUrlQuery(url) {\r\n    const query = {};\r\n    let urlToParse = url || win$1.location.href;\r\n    let i;\r\n    let params;\r\n    let param;\r\n    let length;\r\n    if (typeof urlToParse === 'string' && urlToParse.length) {\r\n      urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\r\n      params = urlToParse.split('&').filter((paramsPart) => paramsPart !== '');\r\n      length = params.length;\r\n\r\n      for (i = 0; i < length; i += 1) {\r\n        param = params[i].replace(/#\\S+/g, '').split('=');\r\n        query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\r\n      }\r\n    }\r\n    return query;\r\n  },\r\n  isObject(o) {\r\n    return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\r\n  },\r\n  extend(...args) {\r\n    const to = Object(args[0]);\r\n    for (let i = 1; i < args.length; i += 1) {\r\n      const nextSource = args[i];\r\n      if (nextSource !== undefined && nextSource !== null) {\r\n        const keysArray = Object.keys(Object(nextSource));\r\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\r\n          const nextKey = keysArray[nextIndex];\r\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\r\n          if (desc !== undefined && desc.enumerable) {\r\n            if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\r\n              Utils.extend(to[nextKey], nextSource[nextKey]);\r\n            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\r\n              to[nextKey] = {};\r\n              Utils.extend(to[nextKey], nextSource[nextKey]);\r\n            } else {\r\n              to[nextKey] = nextSource[nextKey];\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return to;\r\n  },\r\n};\r\n\r\nconst Support = (function Support() {\r\n  const testDiv = doc$1.createElement('div');\r\n  return {\r\n    touch: (win$1.Modernizr && win$1.Modernizr.touch === true) || (function checkTouch() {\r\n      return !!((win$1.navigator.maxTouchPoints > 0) || ('ontouchstart' in win$1) || (win$1.DocumentTouch && doc$1 instanceof win$1.DocumentTouch));\r\n    }()),\r\n\r\n    pointerEvents: !!(win$1.navigator.pointerEnabled || win$1.PointerEvent || ('maxTouchPoints' in win$1.navigator && win$1.navigator.maxTouchPoints > 0)),\r\n    prefixedPointerEvents: !!win$1.navigator.msPointerEnabled,\r\n\r\n    transition: (function checkTransition() {\r\n      const style = testDiv.style;\r\n      return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\r\n    }()),\r\n    transforms3d: (win$1.Modernizr && win$1.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\r\n      const style = testDiv.style;\r\n      return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\r\n    }()),\r\n\r\n    flexbox: (function checkFlexbox() {\r\n      const style = testDiv.style;\r\n      const styles = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\r\n      for (let i = 0; i < styles.length; i += 1) {\r\n        if (styles[i] in style) return true;\r\n      }\r\n      return false;\r\n    }()),\r\n\r\n    observer: (function checkObserver() {\r\n      return ('MutationObserver' in win$1 || 'WebkitMutationObserver' in win$1);\r\n    }()),\r\n\r\n    passiveListener: (function checkPassiveListener() {\r\n      let supportsPassive = false;\r\n      try {\r\n        const opts = Object.defineProperty({}, 'passive', {\r\n          // eslint-disable-next-line\r\n          get() {\r\n            supportsPassive = true;\r\n          },\r\n        });\r\n        win$1.addEventListener('testPassiveListener', null, opts);\r\n      } catch (e) {\r\n        // No support\r\n      }\r\n      return supportsPassive;\r\n    }()),\r\n\r\n    gestures: (function checkGestures() {\r\n      return 'ongesturestart' in win$1;\r\n    }()),\r\n  };\r\n}());\r\n\r\nconst Browser = (function Browser() {\r\n  function isSafari() {\r\n    const ua = win$1.navigator.userAgent.toLowerCase();\r\n    return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\r\n  }\r\n  return {\r\n    isIE: !!win$1.navigator.userAgent.match(/Trident/g) || !!win$1.navigator.userAgent.match(/MSIE/g),\r\n    isEdge: !!win$1.navigator.userAgent.match(/Edge/g),\r\n    isSafari: isSafari(),\r\n    isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(win$1.navigator.userAgent),\r\n  };\r\n}());\r\n\r\nclass SwiperClass {\r\n  constructor(params = {}) {\r\n    const self = this;\r\n    self.params = params;\r\n\r\n    // Events\r\n    self.eventsListeners = {};\r\n\r\n    if (self.params && self.params.on) {\r\n      Object.keys(self.params.on).forEach((eventName) => {\r\n        self.on(eventName, self.params.on[eventName]);\r\n      });\r\n    }\r\n  }\r\n\r\n  on(events, handler, priority) {\r\n    const self = this;\r\n    if (typeof handler !== 'function') return self;\r\n    const method = priority ? 'unshift' : 'push';\r\n    events.split(' ').forEach((event) => {\r\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\r\n      self.eventsListeners[event][method](handler);\r\n    });\r\n    return self;\r\n  }\r\n\r\n  once(events, handler, priority) {\r\n    const self = this;\r\n    if (typeof handler !== 'function') return self;\r\n    function onceHandler(...args) {\r\n      handler.apply(self, args);\r\n      self.off(events, onceHandler);\r\n      if (onceHandler.f7proxy) {\r\n        delete onceHandler.f7proxy;\r\n      }\r\n    }\r\n    onceHandler.f7proxy = handler;\r\n    return self.on(events, onceHandler, priority);\r\n  }\r\n\r\n  off(events, handler) {\r\n    const self = this;\r\n    if (!self.eventsListeners) return self;\r\n    events.split(' ').forEach((event) => {\r\n      if (typeof handler === 'undefined') {\r\n        self.eventsListeners[event] = [];\r\n      } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\r\n        self.eventsListeners[event].forEach((eventHandler, index) => {\r\n          if (eventHandler === handler || (eventHandler.f7proxy && eventHandler.f7proxy === handler)) {\r\n            self.eventsListeners[event].splice(index, 1);\r\n          }\r\n        });\r\n      }\r\n    });\r\n    return self;\r\n  }\r\n\r\n  emit(...args) {\r\n    const self = this;\r\n    if (!self.eventsListeners) return self;\r\n    let events;\r\n    let data;\r\n    let context;\r\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\r\n      events = args[0];\r\n      data = args.slice(1, args.length);\r\n      context = self;\r\n    } else {\r\n      events = args[0].events;\r\n      data = args[0].data;\r\n      context = args[0].context || self;\r\n    }\r\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\r\n    eventsArray.forEach((event) => {\r\n      if (self.eventsListeners && self.eventsListeners[event]) {\r\n        const handlers = [];\r\n        self.eventsListeners[event].forEach((eventHandler) => {\r\n          handlers.push(eventHandler);\r\n        });\r\n        handlers.forEach((eventHandler) => {\r\n          eventHandler.apply(context, data);\r\n        });\r\n      }\r\n    });\r\n    return self;\r\n  }\r\n\r\n  useModulesParams(instanceParams) {\r\n    const instance = this;\r\n    if (!instance.modules) return;\r\n    Object.keys(instance.modules).forEach((moduleName) => {\r\n      const module = instance.modules[moduleName];\r\n      // Extend params\r\n      if (module.params) {\r\n        Utils.extend(instanceParams, module.params);\r\n      }\r\n    });\r\n  }\r\n\r\n  useModules(modulesParams = {}) {\r\n    const instance = this;\r\n    if (!instance.modules) return;\r\n    Object.keys(instance.modules).forEach((moduleName) => {\r\n      const module = instance.modules[moduleName];\r\n      const moduleParams = modulesParams[moduleName] || {};\r\n      // Extend instance methods and props\r\n      if (module.instance) {\r\n        Object.keys(module.instance).forEach((modulePropName) => {\r\n          const moduleProp = module.instance[modulePropName];\r\n          if (typeof moduleProp === 'function') {\r\n            instance[modulePropName] = moduleProp.bind(instance);\r\n          } else {\r\n            instance[modulePropName] = moduleProp;\r\n          }\r\n        });\r\n      }\r\n      // Add event listeners\r\n      if (module.on && instance.on) {\r\n        Object.keys(module.on).forEach((moduleEventName) => {\r\n          instance.on(moduleEventName, module.on[moduleEventName]);\r\n        });\r\n      }\r\n\r\n      // Module create callback\r\n      if (module.create) {\r\n        module.create.bind(instance)(moduleParams);\r\n      }\r\n    });\r\n  }\r\n\r\n  static set components(components) {\r\n    const Class = this;\r\n    if (!Class.use) return;\r\n    Class.use(components);\r\n  }\r\n\r\n  static installModule(module, ...params) {\r\n    const Class = this;\r\n    if (!Class.prototype.modules) Class.prototype.modules = {};\r\n    const name = module.name || (`${Object.keys(Class.prototype.modules).length}_${Utils.now()}`);\r\n    Class.prototype.modules[name] = module;\r\n    // Prototype\r\n    if (module.proto) {\r\n      Object.keys(module.proto).forEach((key) => {\r\n        Class.prototype[key] = module.proto[key];\r\n      });\r\n    }\r\n    // Class\r\n    if (module.static) {\r\n      Object.keys(module.static).forEach((key) => {\r\n        Class[key] = module.static[key];\r\n      });\r\n    }\r\n    // Callback\r\n    if (module.install) {\r\n      module.install.apply(Class, params);\r\n    }\r\n    return Class;\r\n  }\r\n\r\n  static use(module, ...params) {\r\n    const Class = this;\r\n    if (Array.isArray(module)) {\r\n      module.forEach((m) => Class.installModule(m));\r\n      return Class;\r\n    }\r\n    return Class.installModule(module, ...params);\r\n  }\r\n}\r\n\r\nfunction updateSize () {\r\n  const swiper = this;\r\n  let width;\r\n  let height;\r\n  const $el = swiper.$el;\r\n  if (typeof swiper.params.width !== 'undefined') {\r\n    width = swiper.params.width;\r\n  } else {\r\n    width = $el[0].clientWidth;\r\n  }\r\n  if (typeof swiper.params.height !== 'undefined') {\r\n    height = swiper.params.height;\r\n  } else {\r\n    height = $el[0].clientHeight;\r\n  }\r\n  if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\r\n    return;\r\n  }\r\n\r\n  // Subtract paddings\r\n  width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\r\n  height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\r\n\r\n  Utils.extend(swiper, {\r\n    width,\r\n    height,\r\n    size: swiper.isHorizontal() ? width : height,\r\n  });\r\n}\r\n\r\nfunction updateSlides () {\r\n  const swiper = this;\r\n  const params = swiper.params;\r\n\r\n  const {\r\n    $wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL,\r\n  } = swiper;\r\n  const isVirtual = swiper.virtual && params.virtual.enabled;\r\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\r\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\r\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\r\n  let snapGrid = [];\r\n  const slidesGrid = [];\r\n  const slidesSizesGrid = [];\r\n\r\n  let offsetBefore = params.slidesOffsetBefore;\r\n  if (typeof offsetBefore === 'function') {\r\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\r\n  }\r\n\r\n  let offsetAfter = params.slidesOffsetAfter;\r\n  if (typeof offsetAfter === 'function') {\r\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\r\n  }\r\n\r\n  const previousSnapGridLength = swiper.snapGrid.length;\r\n  const previousSlidesGridLength = swiper.snapGrid.length;\r\n\r\n  let spaceBetween = params.spaceBetween;\r\n  let slidePosition = -offsetBefore;\r\n  let prevSlideSize = 0;\r\n  let index = 0;\r\n  if (typeof swiperSize === 'undefined') {\r\n    return;\r\n  }\r\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\r\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\r\n  }\r\n\r\n  swiper.virtualSize = -spaceBetween;\r\n\r\n  // reset margins\r\n  if (rtl) slides.css({ marginLeft: '', marginTop: '' });\r\n  else slides.css({ marginRight: '', marginBottom: '' });\r\n\r\n  let slidesNumberEvenToRows;\r\n  if (params.slidesPerColumn > 1) {\r\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\r\n      slidesNumberEvenToRows = slidesLength;\r\n    } else {\r\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\r\n    }\r\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\r\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\r\n    }\r\n  }\r\n\r\n  // Calc slides\r\n  let slideSize;\r\n  const slidesPerColumn = params.slidesPerColumn;\r\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\r\n  const numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\r\n  for (let i = 0; i < slidesLength; i += 1) {\r\n    slideSize = 0;\r\n    const slide = slides.eq(i);\r\n    if (params.slidesPerColumn > 1) {\r\n      // Set slides order\r\n      let newSlideOrderIndex;\r\n      let column;\r\n      let row;\r\n      if (\r\n        (params.slidesPerColumnFill === 'column')\r\n        || (params.slidesPerColumnFill === 'row' && params.slidesPerGroup > 1)\r\n      ) {\r\n        if (params.slidesPerColumnFill === 'column') {\r\n          column = Math.floor(i / slidesPerColumn);\r\n          row = i - (column * slidesPerColumn);\r\n          if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\r\n            row += 1;\r\n            if (row >= slidesPerColumn) {\r\n              row = 0;\r\n              column += 1;\r\n            }\r\n          }\r\n        } else {\r\n          const groupIndex = Math.floor(i / params.slidesPerGroup);\r\n          row = Math.floor(i / params.slidesPerView) - groupIndex * params.slidesPerColumn;\r\n          column = i - row * params.slidesPerView - groupIndex * params.slidesPerView;\r\n        }\r\n        newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\r\n        slide\r\n          .css({\r\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\r\n            '-moz-box-ordinal-group': newSlideOrderIndex,\r\n            '-ms-flex-order': newSlideOrderIndex,\r\n            '-webkit-order': newSlideOrderIndex,\r\n            order: newSlideOrderIndex,\r\n          });\r\n      } else {\r\n        row = Math.floor(i / slidesPerRow);\r\n        column = i - (row * slidesPerRow);\r\n      }\r\n      slide\r\n        .css(\r\n          `margin-${swiper.isHorizontal() ? 'top' : 'left'}`,\r\n          (row !== 0 && params.spaceBetween) && (`${params.spaceBetween}px`)\r\n        )\r\n        .attr('data-swiper-column', column)\r\n        .attr('data-swiper-row', row);\r\n    }\r\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\r\n\r\n    if (params.slidesPerView === 'auto') {\r\n      const slideStyles = win$1.getComputedStyle(slide[0], null);\r\n      const currentTransform = slide[0].style.transform;\r\n      const currentWebKitTransform = slide[0].style.webkitTransform;\r\n      if (currentTransform) {\r\n        slide[0].style.transform = 'none';\r\n      }\r\n      if (currentWebKitTransform) {\r\n        slide[0].style.webkitTransform = 'none';\r\n      }\r\n      if (params.roundLengths) {\r\n        slideSize = swiper.isHorizontal()\r\n          ? slide.outerWidth(true)\r\n          : slide.outerHeight(true);\r\n      } else {\r\n        // eslint-disable-next-line\r\n        if (swiper.isHorizontal()) {\r\n          const width = parseFloat(slideStyles.getPropertyValue('width'));\r\n          const paddingLeft = parseFloat(slideStyles.getPropertyValue('padding-left'));\r\n          const paddingRight = parseFloat(slideStyles.getPropertyValue('padding-right'));\r\n          const marginLeft = parseFloat(slideStyles.getPropertyValue('margin-left'));\r\n          const marginRight = parseFloat(slideStyles.getPropertyValue('margin-right'));\r\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\r\n          if (boxSizing && boxSizing === 'border-box' && !Browser.isIE) {\r\n            slideSize = width + marginLeft + marginRight;\r\n          } else {\r\n            slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight;\r\n          }\r\n        } else {\r\n          const height = parseFloat(slideStyles.getPropertyValue('height'));\r\n          const paddingTop = parseFloat(slideStyles.getPropertyValue('padding-top'));\r\n          const paddingBottom = parseFloat(slideStyles.getPropertyValue('padding-bottom'));\r\n          const marginTop = parseFloat(slideStyles.getPropertyValue('margin-top'));\r\n          const marginBottom = parseFloat(slideStyles.getPropertyValue('margin-bottom'));\r\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\r\n          if (boxSizing && boxSizing === 'border-box' && !Browser.isIE) {\r\n            slideSize = height + marginTop + marginBottom;\r\n          } else {\r\n            slideSize = height + paddingTop + paddingBottom + marginTop + marginBottom;\r\n          }\r\n        }\r\n      }\r\n      if (currentTransform) {\r\n        slide[0].style.transform = currentTransform;\r\n      }\r\n      if (currentWebKitTransform) {\r\n        slide[0].style.webkitTransform = currentWebKitTransform;\r\n      }\r\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\r\n    } else {\r\n      slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\r\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\r\n\r\n      if (slides[i]) {\r\n        if (swiper.isHorizontal()) {\r\n          slides[i].style.width = `${slideSize}px`;\r\n        } else {\r\n          slides[i].style.height = `${slideSize}px`;\r\n        }\r\n      }\r\n    }\r\n    if (slides[i]) {\r\n      slides[i].swiperSlideSize = slideSize;\r\n    }\r\n    slidesSizesGrid.push(slideSize);\r\n\r\n\r\n    if (params.centeredSlides) {\r\n      slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\r\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\r\n      if (i === 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\r\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\r\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\r\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\r\n      slidesGrid.push(slidePosition);\r\n    } else {\r\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\r\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\r\n      slidesGrid.push(slidePosition);\r\n      slidePosition = slidePosition + slideSize + spaceBetween;\r\n    }\r\n\r\n    swiper.virtualSize += slideSize + spaceBetween;\r\n\r\n    prevSlideSize = slideSize;\r\n\r\n    index += 1;\r\n  }\r\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\r\n  let newSlidesGrid;\r\n\r\n  if (\r\n    rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\r\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\r\n  }\r\n  if (!Support.flexbox || params.setWrapperSize) {\r\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\r\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\r\n  }\r\n\r\n  if (params.slidesPerColumn > 1) {\r\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\r\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\r\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\r\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\r\n    if (params.centeredSlides) {\r\n      newSlidesGrid = [];\r\n      for (let i = 0; i < snapGrid.length; i += 1) {\r\n        let slidesGridItem = snapGrid[i];\r\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\r\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\r\n      }\r\n      snapGrid = newSlidesGrid;\r\n    }\r\n  }\r\n\r\n  // Remove last grid elements depending on width\r\n  if (!params.centeredSlides) {\r\n    newSlidesGrid = [];\r\n    for (let i = 0; i < snapGrid.length; i += 1) {\r\n      let slidesGridItem = snapGrid[i];\r\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\r\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\r\n        newSlidesGrid.push(slidesGridItem);\r\n      }\r\n    }\r\n    snapGrid = newSlidesGrid;\r\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\r\n      snapGrid.push(swiper.virtualSize - swiperSize);\r\n    }\r\n  }\r\n  if (snapGrid.length === 0) snapGrid = [0];\r\n\r\n  if (params.spaceBetween !== 0) {\r\n    if (swiper.isHorizontal()) {\r\n      if (rtl) slides.css({ marginLeft: `${spaceBetween}px` });\r\n      else slides.css({ marginRight: `${spaceBetween}px` });\r\n    } else slides.css({ marginBottom: `${spaceBetween}px` });\r\n  }\r\n\r\n  if (params.centerInsufficientSlides) {\r\n    let allSlidesSize = 0;\r\n    slidesSizesGrid.forEach((slideSizeValue) => {\r\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\r\n    });\r\n    allSlidesSize -= params.spaceBetween;\r\n    if (allSlidesSize < swiperSize) {\r\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\r\n      snapGrid.forEach((snap, snapIndex) => {\r\n        snapGrid[snapIndex] = snap - allSlidesOffset;\r\n      });\r\n      slidesGrid.forEach((snap, snapIndex) => {\r\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\r\n      });\r\n    }\r\n  }\r\n\r\n  Utils.extend(swiper, {\r\n    slides,\r\n    snapGrid,\r\n    slidesGrid,\r\n    slidesSizesGrid,\r\n  });\r\n\r\n  if (slidesLength !== previousSlidesLength) {\r\n    swiper.emit('slidesLengthChange');\r\n  }\r\n  if (snapGrid.length !== previousSnapGridLength) {\r\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\r\n    swiper.emit('snapGridLengthChange');\r\n  }\r\n  if (slidesGrid.length !== previousSlidesGridLength) {\r\n    swiper.emit('slidesGridLengthChange');\r\n  }\r\n\r\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\r\n    swiper.updateSlidesOffset();\r\n  }\r\n}\r\n\r\nfunction updateAutoHeight (speed) {\r\n  const swiper = this;\r\n  const activeSlides = [];\r\n  let newHeight = 0;\r\n  let i;\r\n  if (typeof speed === 'number') {\r\n    swiper.setTransition(speed);\r\n  } else if (speed === true) {\r\n    swiper.setTransition(swiper.params.speed);\r\n  }\r\n  // Find slides currently in view\r\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\r\n    for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\r\n      const index = swiper.activeIndex + i;\r\n      if (index > swiper.slides.length) break;\r\n      activeSlides.push(swiper.slides.eq(index)[0]);\r\n    }\r\n  } else {\r\n    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\r\n  }\r\n\r\n  // Find new height from highest slide in view\r\n  for (i = 0; i < activeSlides.length; i += 1) {\r\n    if (typeof activeSlides[i] !== 'undefined') {\r\n      const height = activeSlides[i].offsetHeight;\r\n      newHeight = height > newHeight ? height : newHeight;\r\n    }\r\n  }\r\n\r\n  // Update Height\r\n  if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\r\n}\r\n\r\nfunction updateSlidesOffset () {\r\n  const swiper = this;\r\n  const slides = swiper.slides;\r\n  for (let i = 0; i < slides.length; i += 1) {\r\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\r\n  }\r\n}\r\n\r\nfunction updateSlidesProgress (translate = (this && this.translate) || 0) {\r\n  const swiper = this;\r\n  const params = swiper.params;\r\n\r\n  const { slides, rtlTranslate: rtl } = swiper;\r\n\r\n  if (slides.length === 0) return;\r\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\r\n\r\n  let offsetCenter = -translate;\r\n  if (rtl) offsetCenter = translate;\r\n\r\n  // Visible Slides\r\n  slides.removeClass(params.slideVisibleClass);\r\n\r\n  swiper.visibleSlidesIndexes = [];\r\n  swiper.visibleSlides = [];\r\n\r\n  for (let i = 0; i < slides.length; i += 1) {\r\n    const slide = slides[i];\r\n    const slideProgress = (\r\n      (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\r\n    ) / (slide.swiperSlideSize + params.spaceBetween);\r\n    if (params.watchSlidesVisibility) {\r\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\r\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\r\n      const isVisible = (slideBefore >= 0 && slideBefore < swiper.size - 1)\r\n                || (slideAfter > 1 && slideAfter <= swiper.size)\r\n                || (slideBefore <= 0 && slideAfter >= swiper.size);\r\n      if (isVisible) {\r\n        swiper.visibleSlides.push(slide);\r\n        swiper.visibleSlidesIndexes.push(i);\r\n        slides.eq(i).addClass(params.slideVisibleClass);\r\n      }\r\n    }\r\n    slide.progress = rtl ? -slideProgress : slideProgress;\r\n  }\r\n  swiper.visibleSlides = $(swiper.visibleSlides);\r\n}\r\n\r\nfunction updateProgress (translate = (this && this.translate) || 0) {\r\n  const swiper = this;\r\n  const params = swiper.params;\r\n\r\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\r\n  let { progress, isBeginning, isEnd } = swiper;\r\n  const wasBeginning = isBeginning;\r\n  const wasEnd = isEnd;\r\n  if (translatesDiff === 0) {\r\n    progress = 0;\r\n    isBeginning = true;\r\n    isEnd = true;\r\n  } else {\r\n    progress = (translate - swiper.minTranslate()) / (translatesDiff);\r\n    isBeginning = progress <= 0;\r\n    isEnd = progress >= 1;\r\n  }\r\n  Utils.extend(swiper, {\r\n    progress,\r\n    isBeginning,\r\n    isEnd,\r\n  });\r\n\r\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) swiper.updateSlidesProgress(translate);\r\n\r\n  if (isBeginning && !wasBeginning) {\r\n    swiper.emit('reachBeginning toEdge');\r\n  }\r\n  if (isEnd && !wasEnd) {\r\n    swiper.emit('reachEnd toEdge');\r\n  }\r\n  if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\r\n    swiper.emit('fromEdge');\r\n  }\r\n\r\n  swiper.emit('progress', progress);\r\n}\r\n\r\nfunction updateSlidesClasses () {\r\n  const swiper = this;\r\n\r\n  const {\r\n    slides, params, $wrapperEl, activeIndex, realIndex,\r\n  } = swiper;\r\n  const isVirtual = swiper.virtual && params.virtual.enabled;\r\n\r\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\r\n\r\n  let activeSlide;\r\n  if (isVirtual) {\r\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\r\n  } else {\r\n    activeSlide = slides.eq(activeIndex);\r\n  }\r\n\r\n  // Active classes\r\n  activeSlide.addClass(params.slideActiveClass);\r\n\r\n  if (params.loop) {\r\n    // Duplicate to all looped slides\r\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\r\n      $wrapperEl\r\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`)\r\n        .addClass(params.slideDuplicateActiveClass);\r\n    } else {\r\n      $wrapperEl\r\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`)\r\n        .addClass(params.slideDuplicateActiveClass);\r\n    }\r\n  }\r\n  // Next Slide\r\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\r\n  if (params.loop && nextSlide.length === 0) {\r\n    nextSlide = slides.eq(0);\r\n    nextSlide.addClass(params.slideNextClass);\r\n  }\r\n  // Prev Slide\r\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\r\n  if (params.loop && prevSlide.length === 0) {\r\n    prevSlide = slides.eq(-1);\r\n    prevSlide.addClass(params.slidePrevClass);\r\n  }\r\n  if (params.loop) {\r\n    // Duplicate to all looped slides\r\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\r\n      $wrapperEl\r\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\r\n        .addClass(params.slideDuplicateNextClass);\r\n    } else {\r\n      $wrapperEl\r\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\r\n        .addClass(params.slideDuplicateNextClass);\r\n    }\r\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\r\n      $wrapperEl\r\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\r\n        .addClass(params.slideDuplicatePrevClass);\r\n    } else {\r\n      $wrapperEl\r\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\r\n        .addClass(params.slideDuplicatePrevClass);\r\n    }\r\n  }\r\n}\r\n\r\nfunction updateActiveIndex (newActiveIndex) {\r\n  const swiper = this;\r\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\r\n  const {\r\n    slidesGrid, snapGrid, params, activeIndex: previousIndex, realIndex: previousRealIndex, snapIndex: previousSnapIndex,\r\n  } = swiper;\r\n  let activeIndex = newActiveIndex;\r\n  let snapIndex;\r\n  if (typeof activeIndex === 'undefined') {\r\n    for (let i = 0; i < slidesGrid.length; i += 1) {\r\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\r\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\r\n          activeIndex = i;\r\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\r\n          activeIndex = i + 1;\r\n        }\r\n      } else if (translate >= slidesGrid[i]) {\r\n        activeIndex = i;\r\n      }\r\n    }\r\n    // Normalize slideIndex\r\n    if (params.normalizeSlideIndex) {\r\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\r\n    }\r\n  }\r\n  if (snapGrid.indexOf(translate) >= 0) {\r\n    snapIndex = snapGrid.indexOf(translate);\r\n  } else {\r\n    snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\r\n  }\r\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\r\n  if (activeIndex === previousIndex) {\r\n    if (snapIndex !== previousSnapIndex) {\r\n      swiper.snapIndex = snapIndex;\r\n      swiper.emit('snapIndexChange');\r\n    }\r\n    return;\r\n  }\r\n\r\n  // Get real index\r\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\r\n\r\n  Utils.extend(swiper, {\r\n    snapIndex,\r\n    realIndex,\r\n    previousIndex,\r\n    activeIndex,\r\n  });\r\n  swiper.emit('activeIndexChange');\r\n  swiper.emit('snapIndexChange');\r\n  if (previousRealIndex !== realIndex) {\r\n    swiper.emit('realIndexChange');\r\n  }\r\n  if (swiper.initialized || swiper.runCallbacksOnInit) {\r\n    swiper.emit('slideChange');\r\n  }\r\n}\r\n\r\nfunction updateClickedSlide (e) {\r\n  const swiper = this;\r\n  const params = swiper.params;\r\n  const slide = $(e.target).closest(`.${params.slideClass}`)[0];\r\n  let slideFound = false;\r\n  if (slide) {\r\n    for (let i = 0; i < swiper.slides.length; i += 1) {\r\n      if (swiper.slides[i] === slide) slideFound = true;\r\n    }\r\n  }\r\n\r\n  if (slide && slideFound) {\r\n    swiper.clickedSlide = slide;\r\n    if (swiper.virtual && swiper.params.virtual.enabled) {\r\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\r\n    } else {\r\n      swiper.clickedIndex = $(slide).index();\r\n    }\r\n  } else {\r\n    swiper.clickedSlide = undefined;\r\n    swiper.clickedIndex = undefined;\r\n    return;\r\n  }\r\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\r\n    swiper.slideToClickedSlide();\r\n  }\r\n}\r\n\r\nvar update = {\r\n  updateSize,\r\n  updateSlides,\r\n  updateAutoHeight,\r\n  updateSlidesOffset,\r\n  updateSlidesProgress,\r\n  updateProgress,\r\n  updateSlidesClasses,\r\n  updateActiveIndex,\r\n  updateClickedSlide,\r\n};\r\n\r\nfunction getTranslate (axis = this.isHorizontal() ? 'x' : 'y') {\r\n  const swiper = this;\r\n\r\n  const {\r\n    params, rtlTranslate: rtl, translate, $wrapperEl,\r\n  } = swiper;\r\n\r\n  if (params.virtualTranslate) {\r\n    return rtl ? -translate : translate;\r\n  }\r\n\r\n  let currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\r\n  if (rtl) currentTranslate = -currentTranslate;\r\n\r\n  return currentTranslate || 0;\r\n}\r\n\r\nfunction setTranslate (translate, byController) {\r\n  const swiper = this;\r\n  const {\r\n    rtlTranslate: rtl, params, $wrapperEl, progress,\r\n  } = swiper;\r\n  let x = 0;\r\n  let y = 0;\r\n  const z = 0;\r\n\r\n  if (swiper.isHorizontal()) {\r\n    x = rtl ? -translate : translate;\r\n  } else {\r\n    y = translate;\r\n  }\r\n\r\n  if (params.roundLengths) {\r\n    x = Math.floor(x);\r\n    y = Math.floor(y);\r\n  }\r\n\r\n  if (!params.virtualTranslate) {\r\n    if (Support.transforms3d) $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\r\n    else $wrapperEl.transform(`translate(${x}px, ${y}px)`);\r\n  }\r\n  swiper.previousTranslate = swiper.translate;\r\n  swiper.translate = swiper.isHorizontal() ? x : y;\r\n\r\n  // Check if we need to update progress\r\n  let newProgress;\r\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\r\n  if (translatesDiff === 0) {\r\n    newProgress = 0;\r\n  } else {\r\n    newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\r\n  }\r\n  if (newProgress !== progress) {\r\n    swiper.updateProgress(translate);\r\n  }\r\n\r\n  swiper.emit('setTranslate', swiper.translate, byController);\r\n}\r\n\r\nfunction minTranslate () {\r\n  return (-this.snapGrid[0]);\r\n}\r\n\r\nfunction maxTranslate () {\r\n  return (-this.snapGrid[this.snapGrid.length - 1]);\r\n}\r\n\r\nvar translate = {\r\n  getTranslate,\r\n  setTranslate,\r\n  minTranslate,\r\n  maxTranslate,\r\n};\r\n\r\nfunction setTransition (duration, byController) {\r\n  const swiper = this;\r\n\r\n  swiper.$wrapperEl.transition(duration);\r\n\r\n  swiper.emit('setTransition', duration, byController);\r\n}\r\n\r\nfunction transitionStart (runCallbacks = true, direction) {\r\n  const swiper = this;\r\n  const { activeIndex, params, previousIndex } = swiper;\r\n  if (params.autoHeight) {\r\n    swiper.updateAutoHeight();\r\n  }\r\n\r\n  let dir = direction;\r\n  if (!dir) {\r\n    if (activeIndex > previousIndex) dir = 'next';\r\n    else if (activeIndex < previousIndex) dir = 'prev';\r\n    else dir = 'reset';\r\n  }\r\n\r\n  swiper.emit('transitionStart');\r\n\r\n  if (runCallbacks && activeIndex !== previousIndex) {\r\n    if (dir === 'reset') {\r\n      swiper.emit('slideResetTransitionStart');\r\n      return;\r\n    }\r\n    swiper.emit('slideChangeTransitionStart');\r\n    if (dir === 'next') {\r\n      swiper.emit('slideNextTransitionStart');\r\n    } else {\r\n      swiper.emit('slidePrevTransitionStart');\r\n    }\r\n  }\r\n}\r\n\r\nfunction transitionEnd$1 (runCallbacks = true, direction) {\r\n  const swiper = this;\r\n  const { activeIndex, previousIndex } = swiper;\r\n  swiper.animating = false;\r\n  swiper.setTransition(0);\r\n\r\n  let dir = direction;\r\n  if (!dir) {\r\n    if (activeIndex > previousIndex) dir = 'next';\r\n    else if (activeIndex < previousIndex) dir = 'prev';\r\n    else dir = 'reset';\r\n  }\r\n\r\n  swiper.emit('transitionEnd');\r\n\r\n  if (runCallbacks && activeIndex !== previousIndex) {\r\n    if (dir === 'reset') {\r\n      swiper.emit('slideResetTransitionEnd');\r\n      return;\r\n    }\r\n    swiper.emit('slideChangeTransitionEnd');\r\n    if (dir === 'next') {\r\n      swiper.emit('slideNextTransitionEnd');\r\n    } else {\r\n      swiper.emit('slidePrevTransitionEnd');\r\n    }\r\n  }\r\n}\r\n\r\nvar transition$1 = {\r\n  setTransition,\r\n  transitionStart,\r\n  transitionEnd: transitionEnd$1,\r\n};\r\n\r\nfunction slideTo (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\r\n  const swiper = this;\r\n  let slideIndex = index;\r\n  if (slideIndex < 0) slideIndex = 0;\r\n\r\n  const {\r\n    params, snapGrid, slidesGrid, previousIndex, activeIndex, rtlTranslate: rtl,\r\n  } = swiper;\r\n  if (swiper.animating && params.preventInteractionOnTransition) {\r\n    return false;\r\n  }\r\n\r\n  let snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\r\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\r\n\r\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\r\n    swiper.emit('beforeSlideChangeStart');\r\n  }\r\n\r\n  const translate = -snapGrid[snapIndex];\r\n\r\n  // Update progress\r\n  swiper.updateProgress(translate);\r\n\r\n  // Normalize slideIndex\r\n  if (params.normalizeSlideIndex) {\r\n    for (let i = 0; i < slidesGrid.length; i += 1) {\r\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\r\n        slideIndex = i;\r\n      }\r\n    }\r\n  }\r\n  // Directions locks\r\n  if (swiper.initialized && slideIndex !== activeIndex) {\r\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\r\n      return false;\r\n    }\r\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\r\n      if ((activeIndex || 0) !== slideIndex) return false;\r\n    }\r\n  }\r\n\r\n  let direction;\r\n  if (slideIndex > activeIndex) direction = 'next';\r\n  else if (slideIndex < activeIndex) direction = 'prev';\r\n  else direction = 'reset';\r\n\r\n\r\n  // Update Index\r\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\r\n    swiper.updateActiveIndex(slideIndex);\r\n    // Update Height\r\n    if (params.autoHeight) {\r\n      swiper.updateAutoHeight();\r\n    }\r\n    swiper.updateSlidesClasses();\r\n    if (params.effect !== 'slide') {\r\n      swiper.setTranslate(translate);\r\n    }\r\n    if (direction !== 'reset') {\r\n      swiper.transitionStart(runCallbacks, direction);\r\n      swiper.transitionEnd(runCallbacks, direction);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  if (speed === 0 || !Support.transition) {\r\n    swiper.setTransition(0);\r\n    swiper.setTranslate(translate);\r\n    swiper.updateActiveIndex(slideIndex);\r\n    swiper.updateSlidesClasses();\r\n    swiper.emit('beforeTransitionStart', speed, internal);\r\n    swiper.transitionStart(runCallbacks, direction);\r\n    swiper.transitionEnd(runCallbacks, direction);\r\n  } else {\r\n    swiper.setTransition(speed);\r\n    swiper.setTranslate(translate);\r\n    swiper.updateActiveIndex(slideIndex);\r\n    swiper.updateSlidesClasses();\r\n    swiper.emit('beforeTransitionStart', speed, internal);\r\n    swiper.transitionStart(runCallbacks, direction);\r\n    if (!swiper.animating) {\r\n      swiper.animating = true;\r\n      if (!swiper.onSlideToWrapperTransitionEnd) {\r\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\r\n          if (!swiper || swiper.destroyed) return;\r\n          if (e.target !== this) return;\r\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\r\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\r\n          swiper.onSlideToWrapperTransitionEnd = null;\r\n          delete swiper.onSlideToWrapperTransitionEnd;\r\n          swiper.transitionEnd(runCallbacks, direction);\r\n        };\r\n      }\r\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\r\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction slideToLoop (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\r\n  const swiper = this;\r\n  let newIndex = index;\r\n  if (swiper.params.loop) {\r\n    newIndex += swiper.loopedSlides;\r\n  }\r\n\r\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\r\n}\r\n\r\n/* eslint no-unused-vars: \"off\" */\r\nfunction slideNext (speed = this.params.speed, runCallbacks = true, internal) {\r\n  const swiper = this;\r\n  const { params, animating } = swiper;\r\n  if (params.loop) {\r\n    if (animating) return false;\r\n    swiper.loopFix();\r\n    // eslint-disable-next-line\r\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\r\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\r\n  }\r\n  return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\r\n}\r\n\r\n/* eslint no-unused-vars: \"off\" */\r\nfunction slidePrev (speed = this.params.speed, runCallbacks = true, internal) {\r\n  const swiper = this;\r\n  const {\r\n    params, animating, snapGrid, slidesGrid, rtlTranslate,\r\n  } = swiper;\r\n\r\n  if (params.loop) {\r\n    if (animating) return false;\r\n    swiper.loopFix();\r\n    // eslint-disable-next-line\r\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\r\n  }\r\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\r\n  function normalize(val) {\r\n    if (val < 0) return -Math.floor(Math.abs(val));\r\n    return Math.floor(val);\r\n  }\r\n  const normalizedTranslate = normalize(translate);\r\n  const normalizedSnapGrid = snapGrid.map((val) => normalize(val));\r\n  const normalizedSlidesGrid = slidesGrid.map((val) => normalize(val));\r\n\r\n  const currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\r\n  const prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\r\n  let prevIndex;\r\n  if (typeof prevSnap !== 'undefined') {\r\n    prevIndex = slidesGrid.indexOf(prevSnap);\r\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\r\n  }\r\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\r\n}\r\n\r\n/* eslint no-unused-vars: \"off\" */\r\nfunction slideReset (speed = this.params.speed, runCallbacks = true, internal) {\r\n  const swiper = this;\r\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\r\n}\r\n\r\n/* eslint no-unused-vars: \"off\" */\r\nfunction slideToClosest (speed = this.params.speed, runCallbacks = true, internal) {\r\n  const swiper = this;\r\n  let index = swiper.activeIndex;\r\n  const snapIndex = Math.floor(index / swiper.params.slidesPerGroup);\r\n\r\n  if (snapIndex < swiper.snapGrid.length - 1) {\r\n    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\r\n\r\n    const currentSnap = swiper.snapGrid[snapIndex];\r\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\r\n\r\n    if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {\r\n      index = swiper.params.slidesPerGroup;\r\n    }\r\n  }\r\n\r\n  return swiper.slideTo(index, speed, runCallbacks, internal);\r\n}\r\n\r\nfunction slideToClickedSlide () {\r\n  const swiper = this;\r\n  const { params, $wrapperEl } = swiper;\r\n\r\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\r\n  let slideToIndex = swiper.clickedIndex;\r\n  let realIndex;\r\n  if (params.loop) {\r\n    if (swiper.animating) return;\r\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\r\n    if (params.centeredSlides) {\r\n      if (\r\n        (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\r\n        || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\r\n      ) {\r\n        swiper.loopFix();\r\n        slideToIndex = $wrapperEl\r\n          .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\r\n          .eq(0)\r\n          .index();\r\n\r\n        Utils.nextTick(() => {\r\n          swiper.slideTo(slideToIndex);\r\n        });\r\n      } else {\r\n        swiper.slideTo(slideToIndex);\r\n      }\r\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\r\n      swiper.loopFix();\r\n      slideToIndex = $wrapperEl\r\n        .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\r\n        .eq(0)\r\n        .index();\r\n\r\n      Utils.nextTick(() => {\r\n        swiper.slideTo(slideToIndex);\r\n      });\r\n    } else {\r\n      swiper.slideTo(slideToIndex);\r\n    }\r\n  } else {\r\n    swiper.slideTo(slideToIndex);\r\n  }\r\n}\r\n\r\nvar slide = {\r\n  slideTo,\r\n  slideToLoop,\r\n  slideNext,\r\n  slidePrev,\r\n  slideReset,\r\n  slideToClosest,\r\n  slideToClickedSlide,\r\n};\r\n\r\nfunction loopCreate () {\r\n  const swiper = this;\r\n  const { params, $wrapperEl } = swiper;\r\n  // Remove duplicated slides\r\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\r\n\r\n  let slides = $wrapperEl.children(`.${params.slideClass}`);\r\n\r\n  if (params.loopFillGroupWithBlank) {\r\n    const blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\r\n    if (blankSlidesNum !== params.slidesPerGroup) {\r\n      for (let i = 0; i < blankSlidesNum; i += 1) {\r\n        const blankNode = $(doc$1.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\r\n        $wrapperEl.append(blankNode);\r\n      }\r\n      slides = $wrapperEl.children(`.${params.slideClass}`);\r\n    }\r\n  }\r\n\r\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\r\n\r\n  swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\r\n  swiper.loopedSlides += params.loopAdditionalSlides;\r\n  if (swiper.loopedSlides > slides.length) {\r\n    swiper.loopedSlides = slides.length;\r\n  }\r\n\r\n  const prependSlides = [];\r\n  const appendSlides = [];\r\n  slides.each((index, el) => {\r\n    const slide = $(el);\r\n    if (index < swiper.loopedSlides) appendSlides.push(el);\r\n    if (index < slides.length && index >= slides.length - swiper.loopedSlides) prependSlides.push(el);\r\n    slide.attr('data-swiper-slide-index', index);\r\n  });\r\n  for (let i = 0; i < appendSlides.length; i += 1) {\r\n    $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\r\n  }\r\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\r\n    $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\r\n  }\r\n}\r\n\r\nfunction loopFix () {\r\n  const swiper = this;\r\n  const {\r\n    params, activeIndex, slides, loopedSlides, allowSlidePrev, allowSlideNext, snapGrid, rtlTranslate: rtl,\r\n  } = swiper;\r\n  let newIndex;\r\n  swiper.allowSlidePrev = true;\r\n  swiper.allowSlideNext = true;\r\n\r\n  const snapTranslate = -snapGrid[activeIndex];\r\n  const diff = snapTranslate - swiper.getTranslate();\r\n\r\n\r\n  // Fix For Negative Oversliding\r\n  if (activeIndex < loopedSlides) {\r\n    newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\r\n    newIndex += loopedSlides;\r\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\r\n    if (slideChanged && diff !== 0) {\r\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\r\n    }\r\n  } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\r\n    // Fix For Positive Oversliding\r\n    newIndex = -slides.length + activeIndex + loopedSlides;\r\n    newIndex += loopedSlides;\r\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\r\n    if (slideChanged && diff !== 0) {\r\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\r\n    }\r\n  }\r\n  swiper.allowSlidePrev = allowSlidePrev;\r\n  swiper.allowSlideNext = allowSlideNext;\r\n}\r\n\r\nfunction loopDestroy () {\r\n  const swiper = this;\r\n  const { $wrapperEl, params, slides } = swiper;\r\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass},.${params.slideClass}.${params.slideBlankClass}`).remove();\r\n  slides.removeAttr('data-swiper-slide-index');\r\n}\r\n\r\nvar loop = {\r\n  loopCreate,\r\n  loopFix,\r\n  loopDestroy,\r\n};\r\n\r\nfunction setGrabCursor (moving) {\r\n  const swiper = this;\r\n  if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked)) return;\r\n  const el = swiper.el;\r\n  el.style.cursor = 'move';\r\n  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\r\n  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\r\n  el.style.cursor = moving ? 'grabbing' : 'grab';\r\n}\r\n\r\nfunction unsetGrabCursor () {\r\n  const swiper = this;\r\n  if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked)) return;\r\n  swiper.el.style.cursor = '';\r\n}\r\n\r\nvar grabCursor = {\r\n  setGrabCursor,\r\n  unsetGrabCursor,\r\n};\r\n\r\nfunction appendSlide (slides) {\r\n  const swiper = this;\r\n  const { $wrapperEl, params } = swiper;\r\n  if (params.loop) {\r\n    swiper.loopDestroy();\r\n  }\r\n  if (typeof slides === 'object' && 'length' in slides) {\r\n    for (let i = 0; i < slides.length; i += 1) {\r\n      if (slides[i]) $wrapperEl.append(slides[i]);\r\n    }\r\n  } else {\r\n    $wrapperEl.append(slides);\r\n  }\r\n  if (params.loop) {\r\n    swiper.loopCreate();\r\n  }\r\n  if (!(params.observer && Support.observer)) {\r\n    swiper.update();\r\n  }\r\n}\r\n\r\nfunction prependSlide (slides) {\r\n  const swiper = this;\r\n  const { params, $wrapperEl, activeIndex } = swiper;\r\n\r\n  if (params.loop) {\r\n    swiper.loopDestroy();\r\n  }\r\n  let newActiveIndex = activeIndex + 1;\r\n  if (typeof slides === 'object' && 'length' in slides) {\r\n    for (let i = 0; i < slides.length; i += 1) {\r\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\r\n    }\r\n    newActiveIndex = activeIndex + slides.length;\r\n  } else {\r\n    $wrapperEl.prepend(slides);\r\n  }\r\n  if (params.loop) {\r\n    swiper.loopCreate();\r\n  }\r\n  if (!(params.observer && Support.observer)) {\r\n    swiper.update();\r\n  }\r\n  swiper.slideTo(newActiveIndex, 0, false);\r\n}\r\n\r\nfunction addSlide (index, slides) {\r\n  const swiper = this;\r\n  const { $wrapperEl, params, activeIndex } = swiper;\r\n  let activeIndexBuffer = activeIndex;\r\n  if (params.loop) {\r\n    activeIndexBuffer -= swiper.loopedSlides;\r\n    swiper.loopDestroy();\r\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\r\n  }\r\n  const baseLength = swiper.slides.length;\r\n  if (index <= 0) {\r\n    swiper.prependSlide(slides);\r\n    return;\r\n  }\r\n  if (index >= baseLength) {\r\n    swiper.appendSlide(slides);\r\n    return;\r\n  }\r\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\r\n\r\n  const slidesBuffer = [];\r\n  for (let i = baseLength - 1; i >= index; i -= 1) {\r\n    const currentSlide = swiper.slides.eq(i);\r\n    currentSlide.remove();\r\n    slidesBuffer.unshift(currentSlide);\r\n  }\r\n\r\n  if (typeof slides === 'object' && 'length' in slides) {\r\n    for (let i = 0; i < slides.length; i += 1) {\r\n      if (slides[i]) $wrapperEl.append(slides[i]);\r\n    }\r\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\r\n  } else {\r\n    $wrapperEl.append(slides);\r\n  }\r\n\r\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\r\n    $wrapperEl.append(slidesBuffer[i]);\r\n  }\r\n\r\n  if (params.loop) {\r\n    swiper.loopCreate();\r\n  }\r\n  if (!(params.observer && Support.observer)) {\r\n    swiper.update();\r\n  }\r\n  if (params.loop) {\r\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\r\n  } else {\r\n    swiper.slideTo(newActiveIndex, 0, false);\r\n  }\r\n}\r\n\r\nfunction removeSlide (slidesIndexes) {\r\n  const swiper = this;\r\n  const { params, $wrapperEl, activeIndex } = swiper;\r\n\r\n  let activeIndexBuffer = activeIndex;\r\n  if (params.loop) {\r\n    activeIndexBuffer -= swiper.loopedSlides;\r\n    swiper.loopDestroy();\r\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\r\n  }\r\n  let newActiveIndex = activeIndexBuffer;\r\n  let indexToRemove;\r\n\r\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\r\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\r\n      indexToRemove = slidesIndexes[i];\r\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\r\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\r\n    }\r\n    newActiveIndex = Math.max(newActiveIndex, 0);\r\n  } else {\r\n    indexToRemove = slidesIndexes;\r\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\r\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\r\n    newActiveIndex = Math.max(newActiveIndex, 0);\r\n  }\r\n\r\n  if (params.loop) {\r\n    swiper.loopCreate();\r\n  }\r\n\r\n  if (!(params.observer && Support.observer)) {\r\n    swiper.update();\r\n  }\r\n  if (params.loop) {\r\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\r\n  } else {\r\n    swiper.slideTo(newActiveIndex, 0, false);\r\n  }\r\n}\r\n\r\nfunction removeAllSlides () {\r\n  const swiper = this;\r\n\r\n  const slidesIndexes = [];\r\n  for (let i = 0; i < swiper.slides.length; i += 1) {\r\n    slidesIndexes.push(i);\r\n  }\r\n  swiper.removeSlide(slidesIndexes);\r\n}\r\n\r\nvar manipulation = {\r\n  appendSlide,\r\n  prependSlide,\r\n  addSlide,\r\n  removeSlide,\r\n  removeAllSlides,\r\n};\r\n\r\nconst Device = (function Device() {\r\n  const ua = win$1.navigator.userAgent;\r\n\r\n  const device = {\r\n    ios: false,\r\n    android: false,\r\n    androidChrome: false,\r\n    desktop: false,\r\n    windows: false,\r\n    iphone: false,\r\n    ipod: false,\r\n    ipad: false,\r\n    cordova: win$1.cordova || win$1.phonegap,\r\n    phonegap: win$1.cordova || win$1.phonegap,\r\n  };\r\n\r\n  const windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\r\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\r\n  const ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\r\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\r\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\r\n\r\n\r\n  // Windows\r\n  if (windows) {\r\n    device.os = 'windows';\r\n    device.osVersion = windows[2];\r\n    device.windows = true;\r\n  }\r\n  // Android\r\n  if (android && !windows) {\r\n    device.os = 'android';\r\n    device.osVersion = android[2];\r\n    device.android = true;\r\n    device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\r\n  }\r\n  if (ipad || iphone || ipod) {\r\n    device.os = 'ios';\r\n    device.ios = true;\r\n  }\r\n  // iOS\r\n  if (iphone && !ipod) {\r\n    device.osVersion = iphone[2].replace(/_/g, '.');\r\n    device.iphone = true;\r\n  }\r\n  if (ipad) {\r\n    device.osVersion = ipad[2].replace(/_/g, '.');\r\n    device.ipad = true;\r\n  }\r\n  if (ipod) {\r\n    device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\r\n    device.iphone = true;\r\n  }\r\n  // iOS 8+ changed UA\r\n  if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\r\n    if (device.osVersion.split('.')[0] === '10') {\r\n      device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\r\n    }\r\n  }\r\n\r\n  // Desktop\r\n  device.desktop = !(device.os || device.android || device.webView);\r\n\r\n  // Webview\r\n  device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\r\n\r\n  // Minimal UI\r\n  if (device.os && device.os === 'ios') {\r\n    const osVersionArr = device.osVersion.split('.');\r\n    const metaViewport = doc$1.querySelector('meta[name=\"viewport\"]');\r\n    device.minimalUi = !device.webView\r\n      && (ipod || iphone)\r\n      && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7)\r\n      && metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\r\n  }\r\n\r\n  // Pixel Ratio\r\n  device.pixelRatio = win$1.devicePixelRatio || 1;\r\n\r\n  // Export object\r\n  return device;\r\n}());\r\n\r\nfunction onTouchStart (event) {\r\n  const swiper = this;\r\n  const data = swiper.touchEventsData;\r\n  const { params, touches } = swiper;\r\n  if (swiper.animating && params.preventInteractionOnTransition) {\r\n    return;\r\n  }\r\n  let e = event;\r\n  if (e.originalEvent) e = e.originalEvent;\r\n  data.isTouchEvent = e.type === 'touchstart';\r\n  if (!data.isTouchEvent && 'which' in e && e.which === 3) return;\r\n  if (!data.isTouchEvent && 'button' in e && e.button > 0) return;\r\n  if (data.isTouched && data.isMoved) return;\r\n  if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`)[0]) {\r\n    swiper.allowClick = true;\r\n    return;\r\n  }\r\n  if (params.swipeHandler) {\r\n    if (!$(e).closest(params.swipeHandler)[0]) return;\r\n  }\r\n\r\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\r\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\r\n  const startX = touches.currentX;\r\n  const startY = touches.currentY;\r\n\r\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\r\n\r\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\r\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\r\n  if (\r\n    edgeSwipeDetection\r\n    && ((startX <= edgeSwipeThreshold)\r\n    || (startX >= win$1.screen.width - edgeSwipeThreshold))\r\n  ) {\r\n    return;\r\n  }\r\n\r\n  Utils.extend(data, {\r\n    isTouched: true,\r\n    isMoved: false,\r\n    allowTouchCallbacks: true,\r\n    isScrolling: undefined,\r\n    startMoving: undefined,\r\n  });\r\n\r\n  touches.startX = startX;\r\n  touches.startY = startY;\r\n  data.touchStartTime = Utils.now();\r\n  swiper.allowClick = true;\r\n  swiper.updateSize();\r\n  swiper.swipeDirection = undefined;\r\n  if (params.threshold > 0) data.allowThresholdMove = false;\r\n  if (e.type !== 'touchstart') {\r\n    let preventDefault = true;\r\n    if ($(e.target).is(data.formElements)) preventDefault = false;\r\n    if (\r\n      doc$1.activeElement\r\n      && $(doc$1.activeElement).is(data.formElements)\r\n      && doc$1.activeElement !== e.target\r\n    ) {\r\n      doc$1.activeElement.blur();\r\n    }\r\n\r\n    const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\r\n    if (params.touchStartForcePreventDefault || shouldPreventDefault) {\r\n      e.preventDefault();\r\n    }\r\n  }\r\n  swiper.emit('touchStart', e);\r\n}\r\n\r\nfunction onTouchMove (event) {\r\n  const swiper = this;\r\n  const data = swiper.touchEventsData;\r\n  const { params, touches, rtlTranslate: rtl } = swiper;\r\n  let e = event;\r\n  if (e.originalEvent) e = e.originalEvent;\r\n  if (!data.isTouched) {\r\n    if (data.startMoving && data.isScrolling) {\r\n      swiper.emit('touchMoveOpposite', e);\r\n    }\r\n    return;\r\n  }\r\n  if (data.isTouchEvent && e.type === 'mousemove') return;\r\n  const pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\r\n  const pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\r\n  if (e.preventedByNestedSwiper) {\r\n    touches.startX = pageX;\r\n    touches.startY = pageY;\r\n    return;\r\n  }\r\n  if (!swiper.allowTouchMove) {\r\n    // isMoved = true;\r\n    swiper.allowClick = false;\r\n    if (data.isTouched) {\r\n      Utils.extend(touches, {\r\n        startX: pageX,\r\n        startY: pageY,\r\n        currentX: pageX,\r\n        currentY: pageY,\r\n      });\r\n      data.touchStartTime = Utils.now();\r\n    }\r\n    return;\r\n  }\r\n  if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\r\n    if (swiper.isVertical()) {\r\n      // Vertical\r\n      if (\r\n        (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\r\n        || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\r\n      ) {\r\n        data.isTouched = false;\r\n        data.isMoved = false;\r\n        return;\r\n      }\r\n    } else if (\r\n      (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\r\n      || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\r\n    ) {\r\n      return;\r\n    }\r\n  }\r\n  if (data.isTouchEvent && doc$1.activeElement) {\r\n    if (e.target === doc$1.activeElement && $(e.target).is(data.formElements)) {\r\n      data.isMoved = true;\r\n      swiper.allowClick = false;\r\n      return;\r\n    }\r\n  }\r\n  if (data.allowTouchCallbacks) {\r\n    swiper.emit('touchMove', e);\r\n  }\r\n  if (e.targetTouches && e.targetTouches.length > 1) return;\r\n\r\n  touches.currentX = pageX;\r\n  touches.currentY = pageY;\r\n\r\n  const diffX = touches.currentX - touches.startX;\r\n  const diffY = touches.currentY - touches.startY;\r\n  if (swiper.params.threshold && Math.sqrt((diffX ** 2) + (diffY ** 2)) < swiper.params.threshold) return;\r\n\r\n  if (typeof data.isScrolling === 'undefined') {\r\n    let touchAngle;\r\n    if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\r\n      data.isScrolling = false;\r\n    } else {\r\n      // eslint-disable-next-line\r\n      if ((diffX * diffX) + (diffY * diffY) >= 25) {\r\n        touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\r\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\r\n      }\r\n    }\r\n  }\r\n  if (data.isScrolling) {\r\n    swiper.emit('touchMoveOpposite', e);\r\n  }\r\n  if (typeof data.startMoving === 'undefined') {\r\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\r\n      data.startMoving = true;\r\n    }\r\n  }\r\n  if (data.isScrolling) {\r\n    data.isTouched = false;\r\n    return;\r\n  }\r\n  if (!data.startMoving) {\r\n    return;\r\n  }\r\n  swiper.allowClick = false;\r\n  e.preventDefault();\r\n  if (params.touchMoveStopPropagation && !params.nested) {\r\n    e.stopPropagation();\r\n  }\r\n\r\n  if (!data.isMoved) {\r\n    if (params.loop) {\r\n      swiper.loopFix();\r\n    }\r\n    data.startTranslate = swiper.getTranslate();\r\n    swiper.setTransition(0);\r\n    if (swiper.animating) {\r\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\r\n    }\r\n    data.allowMomentumBounce = false;\r\n    // Grab Cursor\r\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\r\n      swiper.setGrabCursor(true);\r\n    }\r\n    swiper.emit('sliderFirstMove', e);\r\n  }\r\n  swiper.emit('sliderMove', e);\r\n  data.isMoved = true;\r\n\r\n  let diff = swiper.isHorizontal() ? diffX : diffY;\r\n  touches.diff = diff;\r\n\r\n  diff *= params.touchRatio;\r\n  if (rtl) diff = -diff;\r\n\r\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\r\n  data.currentTranslate = diff + data.startTranslate;\r\n\r\n  let disableParentSwiper = true;\r\n  let resistanceRatio = params.resistanceRatio;\r\n  if (params.touchReleaseOnEdges) {\r\n    resistanceRatio = 0;\r\n  }\r\n  if ((diff > 0 && data.currentTranslate > swiper.minTranslate())) {\r\n    disableParentSwiper = false;\r\n    if (params.resistance) data.currentTranslate = (swiper.minTranslate() - 1) + ((-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio);\r\n  } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\r\n    disableParentSwiper = false;\r\n    if (params.resistance) data.currentTranslate = (swiper.maxTranslate() + 1) - ((swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio);\r\n  }\r\n\r\n  if (disableParentSwiper) {\r\n    e.preventedByNestedSwiper = true;\r\n  }\r\n\r\n  // Directions locks\r\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\r\n    data.currentTranslate = data.startTranslate;\r\n  }\r\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\r\n    data.currentTranslate = data.startTranslate;\r\n  }\r\n\r\n\r\n  // Threshold\r\n  if (params.threshold > 0) {\r\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\r\n      if (!data.allowThresholdMove) {\r\n        data.allowThresholdMove = true;\r\n        touches.startX = touches.currentX;\r\n        touches.startY = touches.currentY;\r\n        data.currentTranslate = data.startTranslate;\r\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\r\n        return;\r\n      }\r\n    } else {\r\n      data.currentTranslate = data.startTranslate;\r\n      return;\r\n    }\r\n  }\r\n\r\n  if (!params.followFinger) return;\r\n\r\n  // Update active index in free mode\r\n  if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\r\n    swiper.updateActiveIndex();\r\n    swiper.updateSlidesClasses();\r\n  }\r\n  if (params.freeMode) {\r\n    // Velocity\r\n    if (data.velocities.length === 0) {\r\n      data.velocities.push({\r\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\r\n        time: data.touchStartTime,\r\n      });\r\n    }\r\n    data.velocities.push({\r\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\r\n      time: Utils.now(),\r\n    });\r\n  }\r\n  // Update progress\r\n  swiper.updateProgress(data.currentTranslate);\r\n  // Update translate\r\n  swiper.setTranslate(data.currentTranslate);\r\n}\r\n\r\nfunction onTouchEnd (event) {\r\n  const swiper = this;\r\n  const data = swiper.touchEventsData;\r\n\r\n  const {\r\n    params, touches, rtlTranslate: rtl, $wrapperEl, slidesGrid, snapGrid,\r\n  } = swiper;\r\n  let e = event;\r\n  if (e.originalEvent) e = e.originalEvent;\r\n  if (data.allowTouchCallbacks) {\r\n    swiper.emit('touchEnd', e);\r\n  }\r\n  data.allowTouchCallbacks = false;\r\n  if (!data.isTouched) {\r\n    if (data.isMoved && params.grabCursor) {\r\n      swiper.setGrabCursor(false);\r\n    }\r\n    data.isMoved = false;\r\n    data.startMoving = false;\r\n    return;\r\n  }\r\n  // Return Grab Cursor\r\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\r\n    swiper.setGrabCursor(false);\r\n  }\r\n\r\n  // Time diff\r\n  const touchEndTime = Utils.now();\r\n  const timeDiff = touchEndTime - data.touchStartTime;\r\n\r\n  // Tap, doubleTap, Click\r\n  if (swiper.allowClick) {\r\n    swiper.updateClickedSlide(e);\r\n    swiper.emit('tap', e);\r\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) > 300) {\r\n      if (data.clickTimeout) clearTimeout(data.clickTimeout);\r\n      data.clickTimeout = Utils.nextTick(() => {\r\n        if (!swiper || swiper.destroyed) return;\r\n        swiper.emit('click', e);\r\n      }, 300);\r\n    }\r\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) < 300) {\r\n      if (data.clickTimeout) clearTimeout(data.clickTimeout);\r\n      swiper.emit('doubleTap', e);\r\n    }\r\n  }\r\n\r\n  data.lastClickTime = Utils.now();\r\n  Utils.nextTick(() => {\r\n    if (!swiper.destroyed) swiper.allowClick = true;\r\n  });\r\n\r\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\r\n    data.isTouched = false;\r\n    data.isMoved = false;\r\n    data.startMoving = false;\r\n    return;\r\n  }\r\n  data.isTouched = false;\r\n  data.isMoved = false;\r\n  data.startMoving = false;\r\n\r\n  let currentPos;\r\n  if (params.followFinger) {\r\n    currentPos = rtl ? swiper.translate : -swiper.translate;\r\n  } else {\r\n    currentPos = -data.currentTranslate;\r\n  }\r\n\r\n  if (params.freeMode) {\r\n    if (currentPos < -swiper.minTranslate()) {\r\n      swiper.slideTo(swiper.activeIndex);\r\n      return;\r\n    }\r\n    if (currentPos > -swiper.maxTranslate()) {\r\n      if (swiper.slides.length < snapGrid.length) {\r\n        swiper.slideTo(snapGrid.length - 1);\r\n      } else {\r\n        swiper.slideTo(swiper.slides.length - 1);\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (params.freeModeMomentum) {\r\n      if (data.velocities.length > 1) {\r\n        const lastMoveEvent = data.velocities.pop();\r\n        const velocityEvent = data.velocities.pop();\r\n\r\n        const distance = lastMoveEvent.position - velocityEvent.position;\r\n        const time = lastMoveEvent.time - velocityEvent.time;\r\n        swiper.velocity = distance / time;\r\n        swiper.velocity /= 2;\r\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\r\n          swiper.velocity = 0;\r\n        }\r\n        // this implies that the user stopped moving a finger then released.\r\n        // There would be no events with distance zero, so the last event is stale.\r\n        if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\r\n          swiper.velocity = 0;\r\n        }\r\n      } else {\r\n        swiper.velocity = 0;\r\n      }\r\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\r\n\r\n      data.velocities.length = 0;\r\n      let momentumDuration = 1000 * params.freeModeMomentumRatio;\r\n      const momentumDistance = swiper.velocity * momentumDuration;\r\n\r\n      let newPosition = swiper.translate + momentumDistance;\r\n      if (rtl) newPosition = -newPosition;\r\n\r\n      let doBounce = false;\r\n      let afterBouncePosition;\r\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\r\n      let needsLoopFix;\r\n      if (newPosition < swiper.maxTranslate()) {\r\n        if (params.freeModeMomentumBounce) {\r\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\r\n            newPosition = swiper.maxTranslate() - bounceAmount;\r\n          }\r\n          afterBouncePosition = swiper.maxTranslate();\r\n          doBounce = true;\r\n          data.allowMomentumBounce = true;\r\n        } else {\r\n          newPosition = swiper.maxTranslate();\r\n        }\r\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\r\n      } else if (newPosition > swiper.minTranslate()) {\r\n        if (params.freeModeMomentumBounce) {\r\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\r\n            newPosition = swiper.minTranslate() + bounceAmount;\r\n          }\r\n          afterBouncePosition = swiper.minTranslate();\r\n          doBounce = true;\r\n          data.allowMomentumBounce = true;\r\n        } else {\r\n          newPosition = swiper.minTranslate();\r\n        }\r\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\r\n      } else if (params.freeModeSticky) {\r\n        let nextSlide;\r\n        for (let j = 0; j < snapGrid.length; j += 1) {\r\n          if (snapGrid[j] > -newPosition) {\r\n            nextSlide = j;\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\r\n          newPosition = snapGrid[nextSlide];\r\n        } else {\r\n          newPosition = snapGrid[nextSlide - 1];\r\n        }\r\n        newPosition = -newPosition;\r\n      }\r\n      if (needsLoopFix) {\r\n        swiper.once('transitionEnd', () => {\r\n          swiper.loopFix();\r\n        });\r\n      }\r\n      // Fix duration\r\n      if (swiper.velocity !== 0) {\r\n        if (rtl) {\r\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\r\n        } else {\r\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\r\n        }\r\n      } else if (params.freeModeSticky) {\r\n        swiper.slideToClosest();\r\n        return;\r\n      }\r\n\r\n      if (params.freeModeMomentumBounce && doBounce) {\r\n        swiper.updateProgress(afterBouncePosition);\r\n        swiper.setTransition(momentumDuration);\r\n        swiper.setTranslate(newPosition);\r\n        swiper.transitionStart(true, swiper.swipeDirection);\r\n        swiper.animating = true;\r\n        $wrapperEl.transitionEnd(() => {\r\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\r\n          swiper.emit('momentumBounce');\r\n\r\n          swiper.setTransition(params.speed);\r\n          swiper.setTranslate(afterBouncePosition);\r\n          $wrapperEl.transitionEnd(() => {\r\n            if (!swiper || swiper.destroyed) return;\r\n            swiper.transitionEnd();\r\n          });\r\n        });\r\n      } else if (swiper.velocity) {\r\n        swiper.updateProgress(newPosition);\r\n        swiper.setTransition(momentumDuration);\r\n        swiper.setTranslate(newPosition);\r\n        swiper.transitionStart(true, swiper.swipeDirection);\r\n        if (!swiper.animating) {\r\n          swiper.animating = true;\r\n          $wrapperEl.transitionEnd(() => {\r\n            if (!swiper || swiper.destroyed) return;\r\n            swiper.transitionEnd();\r\n          });\r\n        }\r\n      } else {\r\n        swiper.updateProgress(newPosition);\r\n      }\r\n\r\n      swiper.updateActiveIndex();\r\n      swiper.updateSlidesClasses();\r\n    } else if (params.freeModeSticky) {\r\n      swiper.slideToClosest();\r\n      return;\r\n    }\r\n\r\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\r\n      swiper.updateProgress();\r\n      swiper.updateActiveIndex();\r\n      swiper.updateSlidesClasses();\r\n    }\r\n    return;\r\n  }\r\n\r\n  // Find current slide\r\n  let stopIndex = 0;\r\n  let groupSize = swiper.slidesSizesGrid[0];\r\n  for (let i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\r\n    if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\r\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\r\n        stopIndex = i;\r\n        groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\r\n      }\r\n    } else if (currentPos >= slidesGrid[i]) {\r\n      stopIndex = i;\r\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\r\n    }\r\n  }\r\n\r\n  // Find current slide size\r\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\r\n\r\n  if (timeDiff > params.longSwipesMs) {\r\n    // Long touches\r\n    if (!params.longSwipes) {\r\n      swiper.slideTo(swiper.activeIndex);\r\n      return;\r\n    }\r\n    if (swiper.swipeDirection === 'next') {\r\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + params.slidesPerGroup);\r\n      else swiper.slideTo(stopIndex);\r\n    }\r\n    if (swiper.swipeDirection === 'prev') {\r\n      if (ratio > (1 - params.longSwipesRatio)) swiper.slideTo(stopIndex + params.slidesPerGroup);\r\n      else swiper.slideTo(stopIndex);\r\n    }\r\n  } else {\r\n    // Short swipes\r\n    if (!params.shortSwipes) {\r\n      swiper.slideTo(swiper.activeIndex);\r\n      return;\r\n    }\r\n    if (swiper.swipeDirection === 'next') {\r\n      swiper.slideTo(stopIndex + params.slidesPerGroup);\r\n    }\r\n    if (swiper.swipeDirection === 'prev') {\r\n      swiper.slideTo(stopIndex);\r\n    }\r\n  }\r\n}\r\n\r\nfunction onResize () {\r\n  const swiper = this;\r\n\r\n  const { params, el } = swiper;\r\n\r\n  if (el && el.offsetWidth === 0) return;\r\n\r\n  // Breakpoints\r\n  if (params.breakpoints) {\r\n    swiper.setBreakpoint();\r\n  }\r\n\r\n  // Save locks\r\n  const { allowSlideNext, allowSlidePrev, snapGrid } = swiper;\r\n\r\n  // Disable locks on resize\r\n  swiper.allowSlideNext = true;\r\n  swiper.allowSlidePrev = true;\r\n\r\n  swiper.updateSize();\r\n  swiper.updateSlides();\r\n\r\n  if (params.freeMode) {\r\n    const newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\r\n    swiper.setTranslate(newTranslate);\r\n    swiper.updateActiveIndex();\r\n    swiper.updateSlidesClasses();\r\n\r\n    if (params.autoHeight) {\r\n      swiper.updateAutoHeight();\r\n    }\r\n  } else {\r\n    swiper.updateSlidesClasses();\r\n    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\r\n      swiper.slideTo(swiper.slides.length - 1, 0, false, true);\r\n    } else {\r\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\r\n    }\r\n  }\r\n  if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\r\n    swiper.autoplay.run();\r\n  }\r\n  // Return locks after resize\r\n  swiper.allowSlidePrev = allowSlidePrev;\r\n  swiper.allowSlideNext = allowSlideNext;\r\n\r\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\r\n    swiper.checkOverflow();\r\n  }\r\n}\r\n\r\nfunction onClick (e) {\r\n  const swiper = this;\r\n  if (!swiper.allowClick) {\r\n    if (swiper.params.preventClicks) e.preventDefault();\r\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\r\n      e.stopPropagation();\r\n      e.stopImmediatePropagation();\r\n    }\r\n  }\r\n}\r\n\r\nfunction attachEvents() {\r\n  const swiper = this;\r\n  const {\r\n    params, touchEvents, el, wrapperEl,\r\n  } = swiper;\r\n\r\n  {\r\n    swiper.onTouchStart = onTouchStart.bind(swiper);\r\n    swiper.onTouchMove = onTouchMove.bind(swiper);\r\n    swiper.onTouchEnd = onTouchEnd.bind(swiper);\r\n  }\r\n\r\n  swiper.onClick = onClick.bind(swiper);\r\n\r\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\r\n  const capture = !!params.nested;\r\n\r\n  // Touch Events\r\n  {\r\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\r\n      target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\r\n      doc$1.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\r\n      doc$1.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\r\n    } else {\r\n      if (Support.touch) {\r\n        const passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\r\n        target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\r\n        target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture } : capture);\r\n        target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\r\n      }\r\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\r\n        target.addEventListener('mousedown', swiper.onTouchStart, false);\r\n        doc$1.addEventListener('mousemove', swiper.onTouchMove, capture);\r\n        doc$1.addEventListener('mouseup', swiper.onTouchEnd, false);\r\n      }\r\n    }\r\n    // Prevent Links Clicks\r\n    if (params.preventClicks || params.preventClicksPropagation) {\r\n      target.addEventListener('click', swiper.onClick, true);\r\n    }\r\n  }\r\n\r\n  // Resize handler\r\n  swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\r\n}\r\n\r\nfunction detachEvents() {\r\n  const swiper = this;\r\n\r\n  const {\r\n    params, touchEvents, el, wrapperEl,\r\n  } = swiper;\r\n\r\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\r\n  const capture = !!params.nested;\r\n\r\n  // Touch Events\r\n  {\r\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\r\n      target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\r\n      doc$1.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\r\n      doc$1.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\r\n    } else {\r\n      if (Support.touch) {\r\n        const passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\r\n        target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\r\n        target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\r\n        target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\r\n      }\r\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\r\n        target.removeEventListener('mousedown', swiper.onTouchStart, false);\r\n        doc$1.removeEventListener('mousemove', swiper.onTouchMove, capture);\r\n        doc$1.removeEventListener('mouseup', swiper.onTouchEnd, false);\r\n      }\r\n    }\r\n    // Prevent Links Clicks\r\n    if (params.preventClicks || params.preventClicksPropagation) {\r\n      target.removeEventListener('click', swiper.onClick, true);\r\n    }\r\n  }\r\n\r\n  // Resize handler\r\n  swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\r\n}\r\n\r\nvar events = {\r\n  attachEvents,\r\n  detachEvents,\r\n};\r\n\r\nfunction setBreakpoint () {\r\n  const swiper = this;\r\n  const {\r\n    activeIndex, initialized, loopedSlides = 0, params,\r\n  } = swiper;\r\n  const breakpoints = params.breakpoints;\r\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\r\n\r\n  // Set breakpoint for window width and update parameters\r\n  const breakpoint = swiper.getBreakpoint(breakpoints);\r\n\r\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\r\n    const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\r\n    if (breakpointOnlyParams) {\r\n      ['slidesPerView', 'spaceBetween', 'slidesPerGroup'].forEach((param) => {\r\n        const paramValue = breakpointOnlyParams[param];\r\n        if (typeof paramValue === 'undefined') return;\r\n        if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\r\n          breakpointOnlyParams[param] = 'auto';\r\n        } else if (param === 'slidesPerView') {\r\n          breakpointOnlyParams[param] = parseFloat(paramValue);\r\n        } else {\r\n          breakpointOnlyParams[param] = parseInt(paramValue, 10);\r\n        }\r\n      });\r\n    }\r\n\r\n    const breakpointParams = breakpointOnlyParams || swiper.originalParams;\r\n    const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\r\n    const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\r\n\r\n    if (directionChanged && initialized) {\r\n      swiper.changeDirection();\r\n    }\r\n\r\n    Utils.extend(swiper.params, breakpointParams);\r\n\r\n    Utils.extend(swiper, {\r\n      allowTouchMove: swiper.params.allowTouchMove,\r\n      allowSlideNext: swiper.params.allowSlideNext,\r\n      allowSlidePrev: swiper.params.allowSlidePrev,\r\n    });\r\n\r\n    swiper.currentBreakpoint = breakpoint;\r\n\r\n    if (needsReLoop && initialized) {\r\n      swiper.loopDestroy();\r\n      swiper.loopCreate();\r\n      swiper.updateSlides();\r\n      swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\r\n    }\r\n\r\n    swiper.emit('breakpoint', breakpointParams);\r\n  }\r\n}\r\n\r\nfunction getBreakpoint (breakpoints) {\r\n  const swiper = this;\r\n  // Get breakpoint for window width\r\n  if (!breakpoints) return undefined;\r\n  let breakpoint = false;\r\n  const points = [];\r\n  Object.keys(breakpoints).forEach((point) => {\r\n    points.push(point);\r\n  });\r\n  points.sort((a, b) => parseInt(a, 10) - parseInt(b, 10));\r\n  for (let i = 0; i < points.length; i += 1) {\r\n    const point = points[i];\r\n    if (swiper.params.breakpointsInverse) {\r\n      if (point <= win$1.innerWidth) {\r\n        breakpoint = point;\r\n      }\r\n    } else if (point >= win$1.innerWidth && !breakpoint) {\r\n      breakpoint = point;\r\n    }\r\n  }\r\n  return breakpoint || 'max';\r\n}\r\n\r\nvar breakpoints = { setBreakpoint, getBreakpoint };\r\n\r\nfunction addClasses () {\r\n  const swiper = this;\r\n  const {\r\n    classNames, params, rtl, $el,\r\n  } = swiper;\r\n  const suffixes = [];\r\n\r\n  suffixes.push('initialized');\r\n  suffixes.push(params.direction);\r\n\r\n  if (params.freeMode) {\r\n    suffixes.push('free-mode');\r\n  }\r\n  if (!Support.flexbox) {\r\n    suffixes.push('no-flexbox');\r\n  }\r\n  if (params.autoHeight) {\r\n    suffixes.push('autoheight');\r\n  }\r\n  if (rtl) {\r\n    suffixes.push('rtl');\r\n  }\r\n  if (params.slidesPerColumn > 1) {\r\n    suffixes.push('multirow');\r\n  }\r\n  if (Device.android) {\r\n    suffixes.push('android');\r\n  }\r\n  if (Device.ios) {\r\n    suffixes.push('ios');\r\n  }\r\n  // WP8 Touch Events Fix\r\n  if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\r\n    suffixes.push(`wp8-${params.direction}`);\r\n  }\r\n\r\n  suffixes.forEach((suffix) => {\r\n    classNames.push(params.containerModifierClass + suffix);\r\n  });\r\n\r\n  $el.addClass(classNames.join(' '));\r\n}\r\n\r\nfunction removeClasses () {\r\n  const swiper = this;\r\n  const { $el, classNames } = swiper;\r\n\r\n  $el.removeClass(classNames.join(' '));\r\n}\r\n\r\nvar classes = { addClasses, removeClasses };\r\n\r\nfunction loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\r\n  let image;\r\n  function onReady() {\r\n    if (callback) callback();\r\n  }\r\n  if (!imageEl.complete || !checkForComplete) {\r\n    if (src) {\r\n      image = new win$1.Image();\r\n      image.onload = onReady;\r\n      image.onerror = onReady;\r\n      if (sizes) {\r\n        image.sizes = sizes;\r\n      }\r\n      if (srcset) {\r\n        image.srcset = srcset;\r\n      }\r\n      if (src) {\r\n        image.src = src;\r\n      }\r\n    } else {\r\n      onReady();\r\n    }\r\n  } else {\r\n    // image already loaded...\r\n    onReady();\r\n  }\r\n}\r\n\r\nfunction preloadImages () {\r\n  const swiper = this;\r\n  swiper.imagesToLoad = swiper.$el.find('img');\r\n  function onReady() {\r\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\r\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\r\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\r\n      if (swiper.params.updateOnImagesReady) swiper.update();\r\n      swiper.emit('imagesReady');\r\n    }\r\n  }\r\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\r\n    const imageEl = swiper.imagesToLoad[i];\r\n    swiper.loadImage(\r\n      imageEl,\r\n      imageEl.currentSrc || imageEl.getAttribute('src'),\r\n      imageEl.srcset || imageEl.getAttribute('srcset'),\r\n      imageEl.sizes || imageEl.getAttribute('sizes'),\r\n      true,\r\n      onReady\r\n    );\r\n  }\r\n}\r\n\r\nvar images = {\r\n  loadImage,\r\n  preloadImages,\r\n};\r\n\r\nfunction checkOverflow() {\r\n  const swiper = this;\r\n  const wasLocked = swiper.isLocked;\r\n\r\n  swiper.isLocked = swiper.snapGrid.length === 1;\r\n  swiper.allowSlideNext = !swiper.isLocked;\r\n  swiper.allowSlidePrev = !swiper.isLocked;\r\n\r\n  // events\r\n  if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\r\n\r\n  if (wasLocked && wasLocked !== swiper.isLocked) {\r\n    swiper.isEnd = false;\r\n    swiper.navigation.update();\r\n  }\r\n}\r\n\r\nvar checkOverflow$1 = { checkOverflow };\r\n\r\nvar defaults = {\r\n  init: true,\r\n  direction: 'horizontal',\r\n  touchEventsTarget: 'container',\r\n  initialSlide: 0,\r\n  speed: 300,\r\n  //\r\n  preventInteractionOnTransition: false,\r\n\r\n  // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\r\n  edgeSwipeDetection: false,\r\n  edgeSwipeThreshold: 20,\r\n\r\n  // Free mode\r\n  freeMode: false,\r\n  freeModeMomentum: true,\r\n  freeModeMomentumRatio: 1,\r\n  freeModeMomentumBounce: true,\r\n  freeModeMomentumBounceRatio: 1,\r\n  freeModeMomentumVelocityRatio: 1,\r\n  freeModeSticky: false,\r\n  freeModeMinimumVelocity: 0.02,\r\n\r\n  // Autoheight\r\n  autoHeight: false,\r\n\r\n  // Set wrapper width\r\n  setWrapperSize: false,\r\n\r\n  // Virtual Translate\r\n  virtualTranslate: false,\r\n\r\n  // Effects\r\n  effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\r\n\r\n  // Breakpoints\r\n  breakpoints: undefined,\r\n  breakpointsInverse: false,\r\n\r\n  // Slides grid\r\n  spaceBetween: 0,\r\n  slidesPerView: 1,\r\n  slidesPerColumn: 1,\r\n  slidesPerColumnFill: 'column',\r\n  slidesPerGroup: 1,\r\n  centeredSlides: false,\r\n  slidesOffsetBefore: 0, // in px\r\n  slidesOffsetAfter: 0, // in px\r\n  normalizeSlideIndex: true,\r\n  centerInsufficientSlides: false,\r\n\r\n  // Disable swiper and hide navigation when container not overflow\r\n  watchOverflow: false,\r\n\r\n  // Round length\r\n  roundLengths: false,\r\n\r\n  // Touches\r\n  touchRatio: 1,\r\n  touchAngle: 45,\r\n  simulateTouch: true,\r\n  shortSwipes: true,\r\n  longSwipes: true,\r\n  longSwipesRatio: 0.5,\r\n  longSwipesMs: 300,\r\n  followFinger: true,\r\n  allowTouchMove: true,\r\n  threshold: 0,\r\n  touchMoveStopPropagation: true,\r\n  touchStartPreventDefault: true,\r\n  touchStartForcePreventDefault: false,\r\n  touchReleaseOnEdges: false,\r\n\r\n  // Unique Navigation Elements\r\n  uniqueNavElements: true,\r\n\r\n  // Resistance\r\n  resistance: true,\r\n  resistanceRatio: 0.85,\r\n\r\n  // Progress\r\n  watchSlidesProgress: false,\r\n  watchSlidesVisibility: false,\r\n\r\n  // Cursor\r\n  grabCursor: false,\r\n\r\n  // Clicks\r\n  preventClicks: true,\r\n  preventClicksPropagation: true,\r\n  slideToClickedSlide: false,\r\n\r\n  // Images\r\n  preloadImages: true,\r\n  updateOnImagesReady: true,\r\n\r\n  // loop\r\n  loop: false,\r\n  loopAdditionalSlides: 0,\r\n  loopedSlides: null,\r\n  loopFillGroupWithBlank: false,\r\n\r\n  // Swiping/no swiping\r\n  allowSlidePrev: true,\r\n  allowSlideNext: true,\r\n  swipeHandler: null, // '.swipe-handler',\r\n  noSwiping: true,\r\n  noSwipingClass: 'swiper-no-swiping',\r\n  noSwipingSelector: null,\r\n\r\n  // Passive Listeners\r\n  passiveListeners: true,\r\n\r\n  // NS\r\n  containerModifierClass: 'swiper-container-', // NEW\r\n  slideClass: 'swiper-slide',\r\n  slideBlankClass: 'swiper-slide-invisible-blank',\r\n  slideActiveClass: 'swiper-slide-active',\r\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\r\n  slideVisibleClass: 'swiper-slide-visible',\r\n  slideDuplicateClass: 'swiper-slide-duplicate',\r\n  slideNextClass: 'swiper-slide-next',\r\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\r\n  slidePrevClass: 'swiper-slide-prev',\r\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\r\n  wrapperClass: 'swiper-wrapper',\r\n\r\n  // Callbacks\r\n  runCallbacksOnInit: true,\r\n};\r\n\r\n/* eslint no-param-reassign: \"off\" */\r\n\r\nconst prototypes = {\r\n  update,\r\n  translate,\r\n  transition: transition$1,\r\n  slide,\r\n  loop,\r\n  grabCursor,\r\n  manipulation,\r\n  events,\r\n  breakpoints,\r\n  checkOverflow: checkOverflow$1,\r\n  classes,\r\n  images,\r\n};\r\n\r\nconst extendedDefaults = {};\r\n\r\nclass Swiper extends SwiperClass {\r\n  constructor(...args) {\r\n    let el;\r\n    let params;\r\n    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\r\n      params = args[0];\r\n    } else {\r\n      [el, params] = args;\r\n    }\r\n    if (!params) params = {};\r\n\r\n    params = Utils.extend({}, params);\r\n    if (el && !params.el) params.el = el;\r\n\r\n    super(params);\r\n\r\n    Object.keys(prototypes).forEach((prototypeGroup) => {\r\n      Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\r\n        if (!Swiper.prototype[protoMethod]) {\r\n          Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\r\n        }\r\n      });\r\n    });\r\n\r\n    // Swiper Instance\r\n    const swiper = this;\r\n    if (typeof swiper.modules === 'undefined') {\r\n      swiper.modules = {};\r\n    }\r\n    Object.keys(swiper.modules).forEach((moduleName) => {\r\n      const module = swiper.modules[moduleName];\r\n      if (module.params) {\r\n        const moduleParamName = Object.keys(module.params)[0];\r\n        const moduleParams = module.params[moduleParamName];\r\n        if (typeof moduleParams !== 'object' || moduleParams === null) return;\r\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\r\n        if (params[moduleParamName] === true) {\r\n          params[moduleParamName] = { enabled: true };\r\n        }\r\n        if (\r\n          typeof params[moduleParamName] === 'object'\r\n          && !('enabled' in params[moduleParamName])\r\n        ) {\r\n          params[moduleParamName].enabled = true;\r\n        }\r\n        if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\r\n      }\r\n    });\r\n\r\n    // Extend defaults with modules params\r\n    const swiperParams = Utils.extend({}, defaults);\r\n    swiper.useModulesParams(swiperParams);\r\n\r\n    // Extend defaults with passed params\r\n    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\r\n    swiper.originalParams = Utils.extend({}, swiper.params);\r\n    swiper.passedParams = Utils.extend({}, params);\r\n\r\n    // Save Dom lib\r\n    swiper.$ = $;\r\n\r\n    // Find el\r\n    const $el = $(swiper.params.el);\r\n    el = $el[0];\r\n\r\n    if (!el) {\r\n      return undefined;\r\n    }\r\n\r\n    if ($el.length > 1) {\r\n      const swipers = [];\r\n      $el.each((index, containerEl) => {\r\n        const newParams = Utils.extend({}, params, { el: containerEl });\r\n        swipers.push(new Swiper(newParams));\r\n      });\r\n      return swipers;\r\n    }\r\n\r\n    el.swiper = swiper;\r\n    $el.data('swiper', swiper);\r\n\r\n    // Find Wrapper\r\n    const $wrapperEl = $el.children(`.${swiper.params.wrapperClass}`);\r\n\r\n    // Extend Swiper\r\n    Utils.extend(swiper, {\r\n      $el,\r\n      el,\r\n      $wrapperEl,\r\n      wrapperEl: $wrapperEl[0],\r\n\r\n      // Classes\r\n      classNames: [],\r\n\r\n      // Slides\r\n      slides: $(),\r\n      slidesGrid: [],\r\n      snapGrid: [],\r\n      slidesSizesGrid: [],\r\n\r\n      // isDirection\r\n      isHorizontal() {\r\n        return swiper.params.direction === 'horizontal';\r\n      },\r\n      isVertical() {\r\n        return swiper.params.direction === 'vertical';\r\n      },\r\n      // RTL\r\n      rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\r\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\r\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\r\n\r\n      // Indexes\r\n      activeIndex: 0,\r\n      realIndex: 0,\r\n\r\n      //\r\n      isBeginning: true,\r\n      isEnd: false,\r\n\r\n      // Props\r\n      translate: 0,\r\n      previousTranslate: 0,\r\n      progress: 0,\r\n      velocity: 0,\r\n      animating: false,\r\n\r\n      // Locks\r\n      allowSlideNext: swiper.params.allowSlideNext,\r\n      allowSlidePrev: swiper.params.allowSlidePrev,\r\n\r\n      // Touch Events\r\n      touchEvents: (function touchEvents() {\r\n        const touch = ['touchstart', 'touchmove', 'touchend'];\r\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\r\n        if (Support.pointerEvents) {\r\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\r\n        } else if (Support.prefixedPointerEvents) {\r\n          desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\r\n        }\r\n        swiper.touchEventsTouch = {\r\n          start: touch[0],\r\n          move: touch[1],\r\n          end: touch[2],\r\n        };\r\n        swiper.touchEventsDesktop = {\r\n          start: desktop[0],\r\n          move: desktop[1],\r\n          end: desktop[2],\r\n        };\r\n        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\r\n      }()),\r\n      touchEventsData: {\r\n        isTouched: undefined,\r\n        isMoved: undefined,\r\n        allowTouchCallbacks: undefined,\r\n        touchStartTime: undefined,\r\n        isScrolling: undefined,\r\n        currentTranslate: undefined,\r\n        startTranslate: undefined,\r\n        allowThresholdMove: undefined,\r\n        // Form elements to match\r\n        formElements: 'input, select, option, textarea, button, video',\r\n        // Last click time\r\n        lastClickTime: Utils.now(),\r\n        clickTimeout: undefined,\r\n        // Velocities\r\n        velocities: [],\r\n        allowMomentumBounce: undefined,\r\n        isTouchEvent: undefined,\r\n        startMoving: undefined,\r\n      },\r\n\r\n      // Clicks\r\n      allowClick: true,\r\n\r\n      // Touches\r\n      allowTouchMove: swiper.params.allowTouchMove,\r\n\r\n      touches: {\r\n        startX: 0,\r\n        startY: 0,\r\n        currentX: 0,\r\n        currentY: 0,\r\n        diff: 0,\r\n      },\r\n\r\n      // Images\r\n      imagesToLoad: [],\r\n      imagesLoaded: 0,\r\n\r\n    });\r\n\r\n    // Install Modules\r\n    swiper.useModules();\r\n\r\n    // Init\r\n    if (swiper.params.init) {\r\n      swiper.init();\r\n    }\r\n\r\n    // Return app instance\r\n    return swiper;\r\n  }\r\n\r\n  slidesPerViewDynamic() {\r\n    const swiper = this;\r\n    const {\r\n      params, slides, slidesGrid, size: swiperSize, activeIndex,\r\n    } = swiper;\r\n    let spv = 1;\r\n    if (params.centeredSlides) {\r\n      let slideSize = slides[activeIndex].swiperSlideSize;\r\n      let breakLoop;\r\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\r\n        if (slides[i] && !breakLoop) {\r\n          slideSize += slides[i].swiperSlideSize;\r\n          spv += 1;\r\n          if (slideSize > swiperSize) breakLoop = true;\r\n        }\r\n      }\r\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\r\n        if (slides[i] && !breakLoop) {\r\n          slideSize += slides[i].swiperSlideSize;\r\n          spv += 1;\r\n          if (slideSize > swiperSize) breakLoop = true;\r\n        }\r\n      }\r\n    } else {\r\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\r\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\r\n          spv += 1;\r\n        }\r\n      }\r\n    }\r\n    return spv;\r\n  }\r\n\r\n  update() {\r\n    const swiper = this;\r\n    if (!swiper || swiper.destroyed) return;\r\n    const { snapGrid, params } = swiper;\r\n    // Breakpoints\r\n    if (params.breakpoints) {\r\n      swiper.setBreakpoint();\r\n    }\r\n    swiper.updateSize();\r\n    swiper.updateSlides();\r\n    swiper.updateProgress();\r\n    swiper.updateSlidesClasses();\r\n\r\n    function setTranslate() {\r\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\r\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\r\n      swiper.setTranslate(newTranslate);\r\n      swiper.updateActiveIndex();\r\n      swiper.updateSlidesClasses();\r\n    }\r\n    let translated;\r\n    if (swiper.params.freeMode) {\r\n      setTranslate();\r\n      if (swiper.params.autoHeight) {\r\n        swiper.updateAutoHeight();\r\n      }\r\n    } else {\r\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\r\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\r\n      } else {\r\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\r\n      }\r\n      if (!translated) {\r\n        setTranslate();\r\n      }\r\n    }\r\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\r\n      swiper.checkOverflow();\r\n    }\r\n    swiper.emit('update');\r\n  }\r\n\r\n  changeDirection(newDirection, needUpdate = true) {\r\n    const swiper = this;\r\n    const currentDirection = swiper.params.direction;\r\n    if (!newDirection) {\r\n      // eslint-disable-next-line\r\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\r\n    }\r\n    if ((newDirection === currentDirection) || (newDirection !== 'horizontal' && newDirection !== 'vertical')) {\r\n      return swiper;\r\n    }\r\n\r\n    swiper.$el\r\n      .removeClass(`${swiper.params.containerModifierClass}${currentDirection} wp8-${currentDirection}`)\r\n      .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\r\n\r\n    if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\r\n      swiper.$el.addClass(`${swiper.params.containerModifierClass}wp8-${newDirection}`);\r\n    }\r\n\r\n    swiper.params.direction = newDirection;\r\n\r\n    swiper.slides.each((slideIndex, slideEl) => {\r\n      if (newDirection === 'vertical') {\r\n        slideEl.style.width = '';\r\n      } else {\r\n        slideEl.style.height = '';\r\n      }\r\n    });\r\n\r\n    swiper.emit('changeDirection');\r\n    if (needUpdate) swiper.update();\r\n\r\n    return swiper;\r\n  }\r\n\r\n  init() {\r\n    const swiper = this;\r\n    if (swiper.initialized) return;\r\n\r\n    swiper.emit('beforeInit');\r\n\r\n    // Set breakpoint\r\n    if (swiper.params.breakpoints) {\r\n      swiper.setBreakpoint();\r\n    }\r\n\r\n    // Add Classes\r\n    swiper.addClasses();\r\n\r\n    // Create loop\r\n    if (swiper.params.loop) {\r\n      swiper.loopCreate();\r\n    }\r\n\r\n    // Update size\r\n    swiper.updateSize();\r\n\r\n    // Update slides\r\n    swiper.updateSlides();\r\n\r\n    if (swiper.params.watchOverflow) {\r\n      swiper.checkOverflow();\r\n    }\r\n\r\n    // Set Grab Cursor\r\n    if (swiper.params.grabCursor) {\r\n      swiper.setGrabCursor();\r\n    }\r\n\r\n    if (swiper.params.preloadImages) {\r\n      swiper.preloadImages();\r\n    }\r\n\r\n    // Slide To Initial Slide\r\n    if (swiper.params.loop) {\r\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\r\n    } else {\r\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\r\n    }\r\n\r\n    // Attach events\r\n    swiper.attachEvents();\r\n\r\n    // Init Flag\r\n    swiper.initialized = true;\r\n\r\n    // Emit\r\n    swiper.emit('init');\r\n  }\r\n\r\n  destroy(deleteInstance = true, cleanStyles = true) {\r\n    const swiper = this;\r\n    const {\r\n      params, $el, $wrapperEl, slides,\r\n    } = swiper;\r\n\r\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\r\n      return null;\r\n    }\r\n\r\n    swiper.emit('beforeDestroy');\r\n\r\n    // Init Flag\r\n    swiper.initialized = false;\r\n\r\n    // Detach events\r\n    swiper.detachEvents();\r\n\r\n    // Destroy loop\r\n    if (params.loop) {\r\n      swiper.loopDestroy();\r\n    }\r\n\r\n    // Cleanup styles\r\n    if (cleanStyles) {\r\n      swiper.removeClasses();\r\n      $el.removeAttr('style');\r\n      $wrapperEl.removeAttr('style');\r\n      if (slides && slides.length) {\r\n        slides\r\n          .removeClass([\r\n            params.slideVisibleClass,\r\n            params.slideActiveClass,\r\n            params.slideNextClass,\r\n            params.slidePrevClass,\r\n          ].join(' '))\r\n          .removeAttr('style')\r\n          .removeAttr('data-swiper-slide-index')\r\n          .removeAttr('data-swiper-column')\r\n          .removeAttr('data-swiper-row');\r\n      }\r\n    }\r\n\r\n    swiper.emit('destroy');\r\n\r\n    // Detach emitter events\r\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\r\n      swiper.off(eventName);\r\n    });\r\n\r\n    if (deleteInstance !== false) {\r\n      swiper.$el[0].swiper = null;\r\n      swiper.$el.data('swiper', null);\r\n      Utils.deleteProps(swiper);\r\n    }\r\n    swiper.destroyed = true;\r\n\r\n    return null;\r\n  }\r\n\r\n  static extendDefaults(newDefaults) {\r\n    Utils.extend(extendedDefaults, newDefaults);\r\n  }\r\n\r\n  static get extendedDefaults() {\r\n    return extendedDefaults;\r\n  }\r\n\r\n  static get defaults() {\r\n    return defaults;\r\n  }\r\n\r\n  static get Class() {\r\n    return SwiperClass;\r\n  }\r\n\r\n  static get $() {\r\n    return $;\r\n  }\r\n}\r\n\r\nvar Device$1 = {\r\n  name: 'device',\r\n  proto: {\r\n    device: Device,\r\n  },\r\n  static: {\r\n    device: Device,\r\n  },\r\n};\r\n\r\nvar Support$1 = {\r\n  name: 'support',\r\n  proto: {\r\n    support: Support,\r\n  },\r\n  static: {\r\n    support: Support,\r\n  },\r\n};\r\n\r\nvar Browser$1 = {\r\n  name: 'browser',\r\n  proto: {\r\n    browser: Browser,\r\n  },\r\n  static: {\r\n    browser: Browser,\r\n  },\r\n};\r\n\r\nvar Resize = {\r\n  name: 'resize',\r\n  create() {\r\n    const swiper = this;\r\n    Utils.extend(swiper, {\r\n      resize: {\r\n        resizeHandler() {\r\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\r\n          swiper.emit('beforeResize');\r\n          swiper.emit('resize');\r\n        },\r\n        orientationChangeHandler() {\r\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\r\n          swiper.emit('orientationchange');\r\n        },\r\n      },\r\n    });\r\n  },\r\n  on: {\r\n    init() {\r\n      const swiper = this;\r\n      // Emit resize\r\n      win$1.addEventListener('resize', swiper.resize.resizeHandler);\r\n\r\n      // Emit orientationchange\r\n      win$1.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\r\n    },\r\n    destroy() {\r\n      const swiper = this;\r\n      win$1.removeEventListener('resize', swiper.resize.resizeHandler);\r\n      win$1.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\r\n    },\r\n  },\r\n};\r\n\r\nconst Observer = {\r\n  func: win$1.MutationObserver || win$1.WebkitMutationObserver,\r\n  attach(target, options = {}) {\r\n    const swiper = this;\r\n\r\n    const ObserverFunc = Observer.func;\r\n    const observer = new ObserverFunc((mutations) => {\r\n      // The observerUpdate event should only be triggered\r\n      // once despite the number of mutations.  Additional\r\n      // triggers are redundant and are very costly\r\n      if (mutations.length === 1) {\r\n        swiper.emit('observerUpdate', mutations[0]);\r\n        return;\r\n      }\r\n      const observerUpdate = function observerUpdate() {\r\n        swiper.emit('observerUpdate', mutations[0]);\r\n      };\r\n\r\n      if (win$1.requestAnimationFrame) {\r\n        win$1.requestAnimationFrame(observerUpdate);\r\n      } else {\r\n        win$1.setTimeout(observerUpdate, 0);\r\n      }\r\n    });\r\n\r\n    observer.observe(target, {\r\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\r\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\r\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\r\n    });\r\n\r\n    swiper.observer.observers.push(observer);\r\n  },\r\n  init() {\r\n    const swiper = this;\r\n    if (!Support.observer || !swiper.params.observer) return;\r\n    if (swiper.params.observeParents) {\r\n      const containerParents = swiper.$el.parents();\r\n      for (let i = 0; i < containerParents.length; i += 1) {\r\n        swiper.observer.attach(containerParents[i]);\r\n      }\r\n    }\r\n    // Observe container\r\n    swiper.observer.attach(swiper.$el[0], { childList: swiper.params.observeSlideChildren });\r\n\r\n    // Observe wrapper\r\n    swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\r\n  },\r\n  destroy() {\r\n    const swiper = this;\r\n    swiper.observer.observers.forEach((observer) => {\r\n      observer.disconnect();\r\n    });\r\n    swiper.observer.observers = [];\r\n  },\r\n};\r\n\r\nvar Observer$1 = {\r\n  name: 'observer',\r\n  params: {\r\n    observer: false,\r\n    observeParents: false,\r\n    observeSlideChildren: false,\r\n  },\r\n  create() {\r\n    const swiper = this;\r\n    Utils.extend(swiper, {\r\n      observer: {\r\n        init: Observer.init.bind(swiper),\r\n        attach: Observer.attach.bind(swiper),\r\n        destroy: Observer.destroy.bind(swiper),\r\n        observers: [],\r\n      },\r\n    });\r\n  },\r\n  on: {\r\n    init() {\r\n      const swiper = this;\r\n      swiper.observer.init();\r\n    },\r\n    destroy() {\r\n      const swiper = this;\r\n      swiper.observer.destroy();\r\n    },\r\n  },\r\n};\r\n\r\nfunction isEventSupported() {\r\n  const eventName = 'onwheel';\r\n  let isSupported = eventName in doc$1;\r\n\r\n  if (!isSupported) {\r\n    const element = doc$1.createElement('div');\r\n    element.setAttribute(eventName, 'return;');\r\n    isSupported = typeof element[eventName] === 'function';\r\n  }\r\n\r\n  if (!isSupported\r\n    && doc$1.implementation\r\n    && doc$1.implementation.hasFeature\r\n    // always returns true in newer browsers as per the standard.\r\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\r\n    && doc$1.implementation.hasFeature('', '') !== true\r\n  ) {\r\n    // This is the only way to test support for the `wheel` event in IE9+.\r\n    isSupported = doc$1.implementation.hasFeature('Events.wheel', '3.0');\r\n  }\r\n\r\n  return isSupported;\r\n}\r\nconst Mousewheel = {\r\n  lastScrollTime: Utils.now(),\r\n  event: (function getEvent() {\r\n    if (win$1.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\r\n    return isEventSupported() ? 'wheel' : 'mousewheel';\r\n  }()),\r\n  normalize(e) {\r\n    // Reasonable defaults\r\n    const PIXEL_STEP = 10;\r\n    const LINE_HEIGHT = 40;\r\n    const PAGE_HEIGHT = 800;\r\n\r\n    let sX = 0;\r\n    let sY = 0; // spinX, spinY\r\n    let pX = 0;\r\n    let pY = 0; // pixelX, pixelY\r\n\r\n    // Legacy\r\n    if ('detail' in e) {\r\n      sY = e.detail;\r\n    }\r\n    if ('wheelDelta' in e) {\r\n      sY = -e.wheelDelta / 120;\r\n    }\r\n    if ('wheelDeltaY' in e) {\r\n      sY = -e.wheelDeltaY / 120;\r\n    }\r\n    if ('wheelDeltaX' in e) {\r\n      sX = -e.wheelDeltaX / 120;\r\n    }\r\n\r\n    // side scrolling on FF with DOMMouseScroll\r\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\r\n      sX = sY;\r\n      sY = 0;\r\n    }\r\n\r\n    pX = sX * PIXEL_STEP;\r\n    pY = sY * PIXEL_STEP;\r\n\r\n    if ('deltaY' in e) {\r\n      pY = e.deltaY;\r\n    }\r\n    if ('deltaX' in e) {\r\n      pX = e.deltaX;\r\n    }\r\n\r\n    if ((pX || pY) && e.deltaMode) {\r\n      if (e.deltaMode === 1) { // delta in LINE units\r\n        pX *= LINE_HEIGHT;\r\n        pY *= LINE_HEIGHT;\r\n      } else { // delta in PAGE units\r\n        pX *= PAGE_HEIGHT;\r\n        pY *= PAGE_HEIGHT;\r\n      }\r\n    }\r\n\r\n    // Fall-back if spin cannot be determined\r\n    if (pX && !sX) {\r\n      sX = (pX < 1) ? -1 : 1;\r\n    }\r\n    if (pY && !sY) {\r\n      sY = (pY < 1) ? -1 : 1;\r\n    }\r\n\r\n    return {\r\n      spinX: sX,\r\n      spinY: sY,\r\n      pixelX: pX,\r\n      pixelY: pY,\r\n    };\r\n  },\r\n  handleMouseEnter() {\r\n    const swiper = this;\r\n    swiper.mouseEntered = true;\r\n  },\r\n  handleMouseLeave() {\r\n    const swiper = this;\r\n    swiper.mouseEntered = false;\r\n  },\r\n  handle(event) {\r\n    let e = event;\r\n    const swiper = this;\r\n    const params = swiper.params.mousewheel;\r\n\r\n    if (!swiper.mouseEntered && !params.releaseOnEdges) return true;\r\n\r\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\r\n    let delta = 0;\r\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\r\n\r\n    const data = Mousewheel.normalize(e);\r\n\r\n    if (params.forceToAxis) {\r\n      if (swiper.isHorizontal()) {\r\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = data.pixelX * rtlFactor;\r\n        else return true;\r\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = data.pixelY;\r\n      else return true;\r\n    } else {\r\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\r\n    }\r\n\r\n    if (delta === 0) return true;\r\n\r\n    if (params.invert) delta = -delta;\r\n\r\n    if (!swiper.params.freeMode) {\r\n      if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\r\n        if (delta < 0) {\r\n          if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\r\n            swiper.slideNext();\r\n            swiper.emit('scroll', e);\r\n          } else if (params.releaseOnEdges) return true;\r\n        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\r\n          swiper.slidePrev();\r\n          swiper.emit('scroll', e);\r\n        } else if (params.releaseOnEdges) return true;\r\n      }\r\n      swiper.mousewheel.lastScrollTime = (new win$1.Date()).getTime();\r\n    } else {\r\n      // Freemode or scrollContainer:\r\n      if (swiper.params.loop) {\r\n        swiper.loopFix();\r\n      }\r\n      let position = swiper.getTranslate() + (delta * params.sensitivity);\r\n      const wasBeginning = swiper.isBeginning;\r\n      const wasEnd = swiper.isEnd;\r\n\r\n      if (position >= swiper.minTranslate()) position = swiper.minTranslate();\r\n      if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\r\n\r\n      swiper.setTransition(0);\r\n      swiper.setTranslate(position);\r\n      swiper.updateProgress();\r\n      swiper.updateActiveIndex();\r\n      swiper.updateSlidesClasses();\r\n\r\n      if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\r\n        swiper.updateSlidesClasses();\r\n      }\r\n\r\n      if (swiper.params.freeModeSticky) {\r\n        clearTimeout(swiper.mousewheel.timeout);\r\n        swiper.mousewheel.timeout = Utils.nextTick(() => {\r\n          swiper.slideToClosest();\r\n        }, 300);\r\n      }\r\n      // Emit event\r\n      swiper.emit('scroll', e);\r\n\r\n      // Stop autoplay\r\n      if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\r\n      // Return page scroll on edge positions\r\n      if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\r\n    }\r\n\r\n    if (e.preventDefault) e.preventDefault();\r\n    else e.returnValue = false;\r\n    return false;\r\n  },\r\n  enable() {\r\n    const swiper = this;\r\n    if (!Mousewheel.event) return false;\r\n    if (swiper.mousewheel.enabled) return false;\r\n    let target = swiper.$el;\r\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\r\n      target = $(swiper.params.mousewheel.eventsTarged);\r\n    }\r\n    target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\r\n    target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\r\n    target.on(Mousewheel.event, swiper.mousewheel.handle);\r\n    swiper.mousewheel.enabled = true;\r\n    return true;\r\n  },\r\n  disable() {\r\n    const swiper = this;\r\n    if (!Mousewheel.event) return false;\r\n    if (!swiper.mousewheel.enabled) return false;\r\n    let target = swiper.$el;\r\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\r\n      target = $(swiper.params.mousewheel.eventsTarged);\r\n    }\r\n    target.off(Mousewheel.event, swiper.mousewheel.handle);\r\n    swiper.mousewheel.enabled = false;\r\n    return true;\r\n  },\r\n};\r\n\r\nconst Pagination = {\r\n  update() {\r\n    // Render || Update Pagination bullets/items\r\n    const swiper = this;\r\n    const rtl = swiper.rtl;\r\n    const params = swiper.params.pagination;\r\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\r\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\r\n    const $el = swiper.pagination.$el;\r\n    // Current/Total\r\n    let current;\r\n    const total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\r\n    if (swiper.params.loop) {\r\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\r\n      if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\r\n        current -= (slidesLength - (swiper.loopedSlides * 2));\r\n      }\r\n      if (current > total - 1) current -= total;\r\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\r\n    } else if (typeof swiper.snapIndex !== 'undefined') {\r\n      current = swiper.snapIndex;\r\n    } else {\r\n      current = swiper.activeIndex || 0;\r\n    }\r\n    // Types\r\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\r\n      const bullets = swiper.pagination.bullets;\r\n      let firstIndex;\r\n      let lastIndex;\r\n      let midIndex;\r\n      if (params.dynamicBullets) {\r\n        swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\r\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)}px`);\r\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\r\n          swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\r\n          if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\r\n            swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\r\n          } else if (swiper.pagination.dynamicBulletIndex < 0) {\r\n            swiper.pagination.dynamicBulletIndex = 0;\r\n          }\r\n        }\r\n        firstIndex = current - swiper.pagination.dynamicBulletIndex;\r\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\r\n        midIndex = (lastIndex + firstIndex) / 2;\r\n      }\r\n      bullets.removeClass(`${params.bulletActiveClass} ${params.bulletActiveClass}-next ${params.bulletActiveClass}-next-next ${params.bulletActiveClass}-prev ${params.bulletActiveClass}-prev-prev ${params.bulletActiveClass}-main`);\r\n      if ($el.length > 1) {\r\n        bullets.each((index, bullet) => {\r\n          const $bullet = $(bullet);\r\n          const bulletIndex = $bullet.index();\r\n          if (bulletIndex === current) {\r\n            $bullet.addClass(params.bulletActiveClass);\r\n          }\r\n          if (params.dynamicBullets) {\r\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\r\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\r\n            }\r\n            if (bulletIndex === firstIndex) {\r\n              $bullet\r\n                .prev()\r\n                .addClass(`${params.bulletActiveClass}-prev`)\r\n                .prev()\r\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\r\n            }\r\n            if (bulletIndex === lastIndex) {\r\n              $bullet\r\n                .next()\r\n                .addClass(`${params.bulletActiveClass}-next`)\r\n                .next()\r\n                .addClass(`${params.bulletActiveClass}-next-next`);\r\n            }\r\n          }\r\n        });\r\n      } else {\r\n        const $bullet = bullets.eq(current);\r\n        $bullet.addClass(params.bulletActiveClass);\r\n        if (params.dynamicBullets) {\r\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\r\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\r\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\r\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\r\n          }\r\n          $firstDisplayedBullet\r\n            .prev()\r\n            .addClass(`${params.bulletActiveClass}-prev`)\r\n            .prev()\r\n            .addClass(`${params.bulletActiveClass}-prev-prev`);\r\n          $lastDisplayedBullet\r\n            .next()\r\n            .addClass(`${params.bulletActiveClass}-next`)\r\n            .next()\r\n            .addClass(`${params.bulletActiveClass}-next-next`);\r\n        }\r\n      }\r\n      if (params.dynamicBullets) {\r\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\r\n        const bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\r\n        const offsetProp = rtl ? 'right' : 'left';\r\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\r\n      }\r\n    }\r\n    if (params.type === 'fraction') {\r\n      $el.find(`.${params.currentClass}`).text(params.formatFractionCurrent(current + 1));\r\n      $el.find(`.${params.totalClass}`).text(params.formatFractionTotal(total));\r\n    }\r\n    if (params.type === 'progressbar') {\r\n      let progressbarDirection;\r\n      if (params.progressbarOpposite) {\r\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\r\n      } else {\r\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\r\n      }\r\n      const scale = (current + 1) / total;\r\n      let scaleX = 1;\r\n      let scaleY = 1;\r\n      if (progressbarDirection === 'horizontal') {\r\n        scaleX = scale;\r\n      } else {\r\n        scaleY = scale;\r\n      }\r\n      $el.find(`.${params.progressbarFillClass}`).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\r\n    }\r\n    if (params.type === 'custom' && params.renderCustom) {\r\n      $el.html(params.renderCustom(swiper, current + 1, total));\r\n      swiper.emit('paginationRender', swiper, $el[0]);\r\n    } else {\r\n      swiper.emit('paginationUpdate', swiper, $el[0]);\r\n    }\r\n    $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\r\n  },\r\n  render() {\r\n    // Render Container\r\n    const swiper = this;\r\n    const params = swiper.params.pagination;\r\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\r\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\r\n\r\n    const $el = swiper.pagination.$el;\r\n    let paginationHTML = '';\r\n    if (params.type === 'bullets') {\r\n      const numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\r\n      for (let i = 0; i < numberOfBullets; i += 1) {\r\n        if (params.renderBullet) {\r\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\r\n        } else {\r\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\r\n        }\r\n      }\r\n      $el.html(paginationHTML);\r\n      swiper.pagination.bullets = $el.find(`.${params.bulletClass}`);\r\n    }\r\n    if (params.type === 'fraction') {\r\n      if (params.renderFraction) {\r\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\r\n      } else {\r\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>`\r\n        + ' / '\r\n        + `<span class=\"${params.totalClass}\"></span>`;\r\n      }\r\n      $el.html(paginationHTML);\r\n    }\r\n    if (params.type === 'progressbar') {\r\n      if (params.renderProgressbar) {\r\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\r\n      } else {\r\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\r\n      }\r\n      $el.html(paginationHTML);\r\n    }\r\n    if (params.type !== 'custom') {\r\n      swiper.emit('paginationRender', swiper.pagination.$el[0]);\r\n    }\r\n  },\r\n  init() {\r\n    const swiper = this;\r\n    const params = swiper.params.pagination;\r\n    if (!params.el) return;\r\n\r\n    let $el = $(params.el);\r\n    if ($el.length === 0) return;\r\n\r\n    if (\r\n      swiper.params.uniqueNavElements\r\n      && typeof params.el === 'string'\r\n      && $el.length > 1\r\n      && swiper.$el.find(params.el).length === 1\r\n    ) {\r\n      $el = swiper.$el.find(params.el);\r\n    }\r\n\r\n    if (params.type === 'bullets' && params.clickable) {\r\n      $el.addClass(params.clickableClass);\r\n    }\r\n\r\n    $el.addClass(params.modifierClass + params.type);\r\n\r\n    if (params.type === 'bullets' && params.dynamicBullets) {\r\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\r\n      swiper.pagination.dynamicBulletIndex = 0;\r\n      if (params.dynamicMainBullets < 1) {\r\n        params.dynamicMainBullets = 1;\r\n      }\r\n    }\r\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\r\n      $el.addClass(params.progressbarOppositeClass);\r\n    }\r\n\r\n    if (params.clickable) {\r\n      $el.on('click', `.${params.bulletClass}`, function onClick(e) {\r\n        e.preventDefault();\r\n        let index = $(this).index() * swiper.params.slidesPerGroup;\r\n        if (swiper.params.loop) index += swiper.loopedSlides;\r\n        swiper.slideTo(index);\r\n      });\r\n    }\r\n\r\n    Utils.extend(swiper.pagination, {\r\n      $el,\r\n      el: $el[0],\r\n    });\r\n  },\r\n  destroy() {\r\n    const swiper = this;\r\n    const params = swiper.params.pagination;\r\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\r\n    const $el = swiper.pagination.$el;\r\n\r\n    $el.removeClass(params.hiddenClass);\r\n    $el.removeClass(params.modifierClass + params.type);\r\n    if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\r\n    if (params.clickable) {\r\n      $el.off('click', `.${params.bulletClass}`);\r\n    }\r\n  },\r\n};\r\n\r\nvar pagination = {\r\n  name: 'pagination',\r\n  params: {\r\n    pagination: {\r\n      el: null,\r\n      bulletElement: 'span',\r\n      clickable: false,\r\n      hideOnClick: false,\r\n      renderBullet: null,\r\n      renderProgressbar: null,\r\n      renderFraction: null,\r\n      renderCustom: null,\r\n      progressbarOpposite: false,\r\n      type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\r\n      dynamicBullets: false,\r\n      dynamicMainBullets: 1,\r\n      formatFractionCurrent: (number) => number,\r\n      formatFractionTotal: (number) => number,\r\n      bulletClass: 'swiper-pagination-bullet',\r\n      bulletActiveClass: 'swiper-pagination-bullet-active',\r\n      modifierClass: 'swiper-pagination-', // NEW\r\n      currentClass: 'swiper-pagination-current',\r\n      totalClass: 'swiper-pagination-total',\r\n      hiddenClass: 'swiper-pagination-hidden',\r\n      progressbarFillClass: 'swiper-pagination-progressbar-fill',\r\n      progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\r\n      clickableClass: 'swiper-pagination-clickable', // NEW\r\n      lockClass: 'swiper-pagination-lock',\r\n    },\r\n  },\r\n  create() {\r\n    const swiper = this;\r\n    Utils.extend(swiper, {\r\n      pagination: {\r\n        init: Pagination.init.bind(swiper),\r\n        render: Pagination.render.bind(swiper),\r\n        update: Pagination.update.bind(swiper),\r\n        destroy: Pagination.destroy.bind(swiper),\r\n        dynamicBulletIndex: 0,\r\n      },\r\n    });\r\n  },\r\n  on: {\r\n    init() {\r\n      const swiper = this;\r\n      swiper.pagination.init();\r\n      swiper.pagination.render();\r\n      swiper.pagination.update();\r\n    },\r\n    activeIndexChange() {\r\n      const swiper = this;\r\n      if (swiper.params.loop) {\r\n        swiper.pagination.update();\r\n      } else if (typeof swiper.snapIndex === 'undefined') {\r\n        swiper.pagination.update();\r\n      }\r\n    },\r\n    snapIndexChange() {\r\n      const swiper = this;\r\n      if (!swiper.params.loop) {\r\n        swiper.pagination.update();\r\n      }\r\n    },\r\n    slidesLengthChange() {\r\n      const swiper = this;\r\n      if (swiper.params.loop) {\r\n        swiper.pagination.render();\r\n        swiper.pagination.update();\r\n      }\r\n    },\r\n    snapGridLengthChange() {\r\n      const swiper = this;\r\n      if (!swiper.params.loop) {\r\n        swiper.pagination.render();\r\n        swiper.pagination.update();\r\n      }\r\n    },\r\n    destroy() {\r\n      const swiper = this;\r\n      swiper.pagination.destroy();\r\n    },\r\n    click(e) {\r\n      const swiper = this;\r\n      if (\r\n        swiper.params.pagination.el\r\n        && swiper.params.pagination.hideOnClick\r\n        && swiper.pagination.$el.length > 0\r\n        && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\r\n      ) {\r\n        const isHidden = swiper.pagination.$el.hasClass(swiper.params.pagination.hiddenClass);\r\n        if (isHidden === true) {\r\n          swiper.emit('paginationShow', swiper);\r\n        } else {\r\n          swiper.emit('paginationHide', swiper);\r\n        }\r\n        swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\r\n      }\r\n    },\r\n  },\r\n};\r\n\r\nconst Scrollbar = {\r\n  setTranslate() {\r\n    const swiper = this;\r\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\r\n    const { scrollbar, rtlTranslate: rtl, progress } = swiper;\r\n    const {\r\n      dragSize, trackSize, $dragEl, $el,\r\n    } = scrollbar;\r\n    const params = swiper.params.scrollbar;\r\n\r\n    let newSize = dragSize;\r\n    let newPos = (trackSize - dragSize) * progress;\r\n    if (rtl) {\r\n      newPos = -newPos;\r\n      if (newPos > 0) {\r\n        newSize = dragSize - newPos;\r\n        newPos = 0;\r\n      } else if (-newPos + dragSize > trackSize) {\r\n        newSize = trackSize + newPos;\r\n      }\r\n    } else if (newPos < 0) {\r\n      newSize = dragSize + newPos;\r\n      newPos = 0;\r\n    } else if (newPos + dragSize > trackSize) {\r\n      newSize = trackSize - newPos;\r\n    }\r\n    if (swiper.isHorizontal()) {\r\n      if (Support.transforms3d) {\r\n        $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\r\n      } else {\r\n        $dragEl.transform(`translateX(${newPos}px)`);\r\n      }\r\n      $dragEl[0].style.width = `${newSize}px`;\r\n    } else {\r\n      if (Support.transforms3d) {\r\n        $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\r\n      } else {\r\n        $dragEl.transform(`translateY(${newPos}px)`);\r\n      }\r\n      $dragEl[0].style.height = `${newSize}px`;\r\n    }\r\n    if (params.hide) {\r\n      clearTimeout(swiper.scrollbar.timeout);\r\n      $el[0].style.opacity = 1;\r\n      swiper.scrollbar.timeout = setTimeout(() => {\r\n        $el[0].style.opacity = 0;\r\n        $el.transition(400);\r\n      }, 1000);\r\n    }\r\n  },\r\n  setTransition(duration) {\r\n    const swiper = this;\r\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\r\n    swiper.scrollbar.$dragEl.transition(duration);\r\n  },\r\n  updateSize() {\r\n    const swiper = this;\r\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\r\n\r\n    const { scrollbar } = swiper;\r\n    const { $dragEl, $el } = scrollbar;\r\n\r\n    $dragEl[0].style.width = '';\r\n    $dragEl[0].style.height = '';\r\n    const trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\r\n\r\n    const divider = swiper.size / swiper.virtualSize;\r\n    const moveDivider = divider * (trackSize / swiper.size);\r\n    let dragSize;\r\n    if (swiper.params.scrollbar.dragSize === 'auto') {\r\n      dragSize = trackSize * divider;\r\n    } else {\r\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\r\n    }\r\n\r\n    if (swiper.isHorizontal()) {\r\n      $dragEl[0].style.width = `${dragSize}px`;\r\n    } else {\r\n      $dragEl[0].style.height = `${dragSize}px`;\r\n    }\r\n\r\n    if (divider >= 1) {\r\n      $el[0].style.display = 'none';\r\n    } else {\r\n      $el[0].style.display = '';\r\n    }\r\n    if (swiper.params.scrollbar.hide) {\r\n      $el[0].style.opacity = 0;\r\n    }\r\n    Utils.extend(scrollbar, {\r\n      trackSize,\r\n      divider,\r\n      moveDivider,\r\n      dragSize,\r\n    });\r\n    scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\r\n  },\r\n  getPointerPosition(e) {\r\n    const swiper = this;\r\n    if (swiper.isHorizontal()) {\r\n      return ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\r\n    }\r\n    return ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\r\n  },\r\n  setDragPosition(e) {\r\n    const swiper = this;\r\n    const { scrollbar, rtlTranslate: rtl } = swiper;\r\n    const {\r\n      $el,\r\n      dragSize,\r\n      trackSize,\r\n      dragStartPos,\r\n    } = scrollbar;\r\n\r\n    let positionRatio;\r\n    positionRatio = ((scrollbar.getPointerPosition(e)) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top']\r\n      - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\r\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\r\n    if (rtl) {\r\n      positionRatio = 1 - positionRatio;\r\n    }\r\n\r\n    const position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\r\n\r\n    swiper.updateProgress(position);\r\n    swiper.setTranslate(position);\r\n    swiper.updateActiveIndex();\r\n    swiper.updateSlidesClasses();\r\n  },\r\n  onDragStart(e) {\r\n    const swiper = this;\r\n    const params = swiper.params.scrollbar;\r\n    const { scrollbar, $wrapperEl } = swiper;\r\n    const { $el, $dragEl } = scrollbar;\r\n    swiper.scrollbar.isTouched = true;\r\n    swiper.scrollbar.dragStartPos = (e.target === $dragEl[0] || e.target === $dragEl)\r\n      ? scrollbar.getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    $wrapperEl.transition(100);\r\n    $dragEl.transition(100);\r\n    scrollbar.setDragPosition(e);\r\n\r\n    clearTimeout(swiper.scrollbar.dragTimeout);\r\n\r\n    $el.transition(0);\r\n    if (params.hide) {\r\n      $el.css('opacity', 1);\r\n    }\r\n    swiper.emit('scrollbarDragStart', e);\r\n  },\r\n  onDragMove(e) {\r\n    const swiper = this;\r\n    const { scrollbar, $wrapperEl } = swiper;\r\n    const { $el, $dragEl } = scrollbar;\r\n\r\n    if (!swiper.scrollbar.isTouched) return;\r\n    if (e.preventDefault) e.preventDefault();\r\n    else e.returnValue = false;\r\n    scrollbar.setDragPosition(e);\r\n    $wrapperEl.transition(0);\r\n    $el.transition(0);\r\n    $dragEl.transition(0);\r\n    swiper.emit('scrollbarDragMove', e);\r\n  },\r\n  onDragEnd(e) {\r\n    const swiper = this;\r\n\r\n    const params = swiper.params.scrollbar;\r\n    const { scrollbar } = swiper;\r\n    const { $el } = scrollbar;\r\n\r\n    if (!swiper.scrollbar.isTouched) return;\r\n    swiper.scrollbar.isTouched = false;\r\n    if (params.hide) {\r\n      clearTimeout(swiper.scrollbar.dragTimeout);\r\n      swiper.scrollbar.dragTimeout = Utils.nextTick(() => {\r\n        $el.css('opacity', 0);\r\n        $el.transition(400);\r\n      }, 1000);\r\n    }\r\n    swiper.emit('scrollbarDragEnd', e);\r\n    if (params.snapOnRelease) {\r\n      swiper.slideToClosest();\r\n    }\r\n  },\r\n  enableDraggable() {\r\n    const swiper = this;\r\n    if (!swiper.params.scrollbar.el) return;\r\n    const {\r\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\r\n    } = swiper;\r\n    const $el = scrollbar.$el;\r\n    const target = $el[0];\r\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\r\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\r\n    if (!Support.touch) {\r\n      target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\r\n      doc$1.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\r\n      doc$1.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\r\n    } else {\r\n      target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\r\n      target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\r\n      target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\r\n    }\r\n  },\r\n  disableDraggable() {\r\n    const swiper = this;\r\n    if (!swiper.params.scrollbar.el) return;\r\n    const {\r\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\r\n    } = swiper;\r\n    const $el = scrollbar.$el;\r\n    const target = $el[0];\r\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\r\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\r\n    if (!Support.touch) {\r\n      target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\r\n      doc$1.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\r\n      doc$1.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\r\n    } else {\r\n      target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\r\n      target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\r\n      target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\r\n    }\r\n  },\r\n  init() {\r\n    const swiper = this;\r\n    if (!swiper.params.scrollbar.el) return;\r\n    const { scrollbar, $el: $swiperEl } = swiper;\r\n    const params = swiper.params.scrollbar;\r\n\r\n    let $el = $(params.el);\r\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\r\n      $el = $swiperEl.find(params.el);\r\n    }\r\n\r\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\r\n    if ($dragEl.length === 0) {\r\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\r\n      $el.append($dragEl);\r\n    }\r\n\r\n    Utils.extend(scrollbar, {\r\n      $el,\r\n      el: $el[0],\r\n      $dragEl,\r\n      dragEl: $dragEl[0],\r\n    });\r\n\r\n    if (params.draggable) {\r\n      scrollbar.enableDraggable();\r\n    }\r\n  },\r\n  destroy() {\r\n    const swiper = this;\r\n    swiper.scrollbar.disableDraggable();\r\n  },\r\n};\r\n\r\nvar scrollbar = {\r\n  name: 'scrollbar',\r\n  params: {\r\n    scrollbar: {\r\n      el: null,\r\n      dragSize: 'auto',\r\n      hide: false,\r\n      draggable: false,\r\n      snapOnRelease: true,\r\n      lockClass: 'swiper-scrollbar-lock',\r\n      dragClass: 'swiper-scrollbar-drag',\r\n    },\r\n  },\r\n  create() {\r\n    const swiper = this;\r\n    Utils.extend(swiper, {\r\n      scrollbar: {\r\n        init: Scrollbar.init.bind(swiper),\r\n        destroy: Scrollbar.destroy.bind(swiper),\r\n        updateSize: Scrollbar.updateSize.bind(swiper),\r\n        setTranslate: Scrollbar.setTranslate.bind(swiper),\r\n        setTransition: Scrollbar.setTransition.bind(swiper),\r\n        enableDraggable: Scrollbar.enableDraggable.bind(swiper),\r\n        disableDraggable: Scrollbar.disableDraggable.bind(swiper),\r\n        setDragPosition: Scrollbar.setDragPosition.bind(swiper),\r\n        getPointerPosition: Scrollbar.getPointerPosition.bind(swiper),\r\n        onDragStart: Scrollbar.onDragStart.bind(swiper),\r\n        onDragMove: Scrollbar.onDragMove.bind(swiper),\r\n        onDragEnd: Scrollbar.onDragEnd.bind(swiper),\r\n        isTouched: false,\r\n        timeout: null,\r\n        dragTimeout: null,\r\n      },\r\n    });\r\n  },\r\n  on: {\r\n    init() {\r\n      const swiper = this;\r\n      swiper.scrollbar.init();\r\n      swiper.scrollbar.updateSize();\r\n      swiper.scrollbar.setTranslate();\r\n    },\r\n    update() {\r\n      const swiper = this;\r\n      swiper.scrollbar.updateSize();\r\n    },\r\n    resize() {\r\n      const swiper = this;\r\n      swiper.scrollbar.updateSize();\r\n    },\r\n    observerUpdate() {\r\n      const swiper = this;\r\n      swiper.scrollbar.updateSize();\r\n    },\r\n    setTranslate() {\r\n      const swiper = this;\r\n      swiper.scrollbar.setTranslate();\r\n    },\r\n    setTransition(duration) {\r\n      const swiper = this;\r\n      swiper.scrollbar.setTransition(duration);\r\n    },\r\n    destroy() {\r\n      const swiper = this;\r\n      swiper.scrollbar.destroy();\r\n    },\r\n  },\r\n};\r\n\r\nconst Zoom = {\r\n  // Calc Scale From Multi-touches\r\n  getDistanceBetweenTouches(e) {\r\n    if (e.targetTouches.length < 2) return 1;\r\n    const x1 = e.targetTouches[0].pageX;\r\n    const y1 = e.targetTouches[0].pageY;\r\n    const x2 = e.targetTouches[1].pageX;\r\n    const y2 = e.targetTouches[1].pageY;\r\n    const distance = Math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2));\r\n    return distance;\r\n  },\r\n  // Events\r\n  onGestureStart(e) {\r\n    const swiper = this;\r\n    const params = swiper.params.zoom;\r\n    const zoom = swiper.zoom;\r\n    const { gesture } = zoom;\r\n    zoom.fakeGestureTouched = false;\r\n    zoom.fakeGestureMoved = false;\r\n    if (!Support.gestures) {\r\n      if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\r\n        return;\r\n      }\r\n      zoom.fakeGestureTouched = true;\r\n      gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\r\n    }\r\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\r\n      gesture.$slideEl = $(e.target).closest('.swiper-slide');\r\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\r\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\r\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\r\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\r\n      if (gesture.$imageWrapEl.length === 0) {\r\n        gesture.$imageEl = undefined;\r\n        return;\r\n      }\r\n    }\r\n    gesture.$imageEl.transition(0);\r\n    swiper.zoom.isScaling = true;\r\n  },\r\n  onGestureChange(e) {\r\n    const swiper = this;\r\n    const params = swiper.params.zoom;\r\n    const zoom = swiper.zoom;\r\n    const { gesture } = zoom;\r\n    if (!Support.gestures) {\r\n      if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\r\n        return;\r\n      }\r\n      zoom.fakeGestureMoved = true;\r\n      gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\r\n    }\r\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\r\n    if (Support.gestures) {\r\n      zoom.scale = e.scale * zoom.currentScale;\r\n    } else {\r\n      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\r\n    }\r\n    if (zoom.scale > gesture.maxRatio) {\r\n      zoom.scale = (gesture.maxRatio - 1) + (((zoom.scale - gesture.maxRatio) + 1) ** 0.5);\r\n    }\r\n    if (zoom.scale < params.minRatio) {\r\n      zoom.scale = (params.minRatio + 1) - (((params.minRatio - zoom.scale) + 1) ** 0.5);\r\n    }\r\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\r\n  },\r\n  onGestureEnd(e) {\r\n    const swiper = this;\r\n    const params = swiper.params.zoom;\r\n    const zoom = swiper.zoom;\r\n    const { gesture } = zoom;\r\n    if (!Support.gestures) {\r\n      if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\r\n        return;\r\n      }\r\n      if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\r\n        return;\r\n      }\r\n      zoom.fakeGestureTouched = false;\r\n      zoom.fakeGestureMoved = false;\r\n    }\r\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\r\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\r\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\r\n    zoom.currentScale = zoom.scale;\r\n    zoom.isScaling = false;\r\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\r\n  },\r\n  onTouchStart(e) {\r\n    const swiper = this;\r\n    const zoom = swiper.zoom;\r\n    const { gesture, image } = zoom;\r\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\r\n    if (image.isTouched) return;\r\n    if (Device.android) e.preventDefault();\r\n    image.isTouched = true;\r\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\r\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\r\n  },\r\n  onTouchMove(e) {\r\n    const swiper = this;\r\n    const zoom = swiper.zoom;\r\n    const { gesture, image, velocity } = zoom;\r\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\r\n    swiper.allowClick = false;\r\n    if (!image.isTouched || !gesture.$slideEl) return;\r\n\r\n    if (!image.isMoved) {\r\n      image.width = gesture.$imageEl[0].offsetWidth;\r\n      image.height = gesture.$imageEl[0].offsetHeight;\r\n      image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\r\n      image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\r\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\r\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\r\n      gesture.$imageWrapEl.transition(0);\r\n      if (swiper.rtl) {\r\n        image.startX = -image.startX;\r\n        image.startY = -image.startY;\r\n      }\r\n    }\r\n    // Define if we need image drag\r\n    const scaledWidth = image.width * zoom.scale;\r\n    const scaledHeight = image.height * zoom.scale;\r\n\r\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\r\n\r\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\r\n    image.maxX = -image.minX;\r\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\r\n    image.maxY = -image.minY;\r\n\r\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\r\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\r\n\r\n    if (!image.isMoved && !zoom.isScaling) {\r\n      if (\r\n        swiper.isHorizontal()\r\n        && (\r\n          (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\r\n          || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\r\n        )\r\n      ) {\r\n        image.isTouched = false;\r\n        return;\r\n      } if (\r\n        !swiper.isHorizontal()\r\n        && (\r\n          (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\r\n          || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\r\n        )\r\n      ) {\r\n        image.isTouched = false;\r\n        return;\r\n      }\r\n    }\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    image.isMoved = true;\r\n    image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\r\n    image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\r\n\r\n    if (image.currentX < image.minX) {\r\n      image.currentX = (image.minX + 1) - (((image.minX - image.currentX) + 1) ** 0.8);\r\n    }\r\n    if (image.currentX > image.maxX) {\r\n      image.currentX = (image.maxX - 1) + (((image.currentX - image.maxX) + 1) ** 0.8);\r\n    }\r\n\r\n    if (image.currentY < image.minY) {\r\n      image.currentY = (image.minY + 1) - (((image.minY - image.currentY) + 1) ** 0.8);\r\n    }\r\n    if (image.currentY > image.maxY) {\r\n      image.currentY = (image.maxY - 1) + (((image.currentY - image.maxY) + 1) ** 0.8);\r\n    }\r\n\r\n    // Velocity\r\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\r\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\r\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\r\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\r\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\r\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\r\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\r\n    velocity.prevPositionX = image.touchesCurrent.x;\r\n    velocity.prevPositionY = image.touchesCurrent.y;\r\n    velocity.prevTime = Date.now();\r\n\r\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\r\n  },\r\n  onTouchEnd() {\r\n    const swiper = this;\r\n    const zoom = swiper.zoom;\r\n    const { gesture, image, velocity } = zoom;\r\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\r\n    if (!image.isTouched || !image.isMoved) {\r\n      image.isTouched = false;\r\n      image.isMoved = false;\r\n      return;\r\n    }\r\n    image.isTouched = false;\r\n    image.isMoved = false;\r\n    let momentumDurationX = 300;\r\n    let momentumDurationY = 300;\r\n    const momentumDistanceX = velocity.x * momentumDurationX;\r\n    const newPositionX = image.currentX + momentumDistanceX;\r\n    const momentumDistanceY = velocity.y * momentumDurationY;\r\n    const newPositionY = image.currentY + momentumDistanceY;\r\n\r\n    // Fix duration\r\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\r\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\r\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\r\n\r\n    image.currentX = newPositionX;\r\n    image.currentY = newPositionY;\r\n\r\n    // Define if we need image drag\r\n    const scaledWidth = image.width * zoom.scale;\r\n    const scaledHeight = image.height * zoom.scale;\r\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\r\n    image.maxX = -image.minX;\r\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\r\n    image.maxY = -image.minY;\r\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\r\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\r\n\r\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\r\n  },\r\n  onTransitionEnd() {\r\n    const swiper = this;\r\n    const zoom = swiper.zoom;\r\n    const { gesture } = zoom;\r\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\r\n      gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\r\n      gesture.$imageWrapEl.transform('translate3d(0,0,0)');\r\n\r\n      zoom.scale = 1;\r\n      zoom.currentScale = 1;\r\n\r\n      gesture.$slideEl = undefined;\r\n      gesture.$imageEl = undefined;\r\n      gesture.$imageWrapEl = undefined;\r\n    }\r\n  },\r\n  // Toggle Zoom\r\n  toggle(e) {\r\n    const swiper = this;\r\n    const zoom = swiper.zoom;\r\n\r\n    if (zoom.scale && zoom.scale !== 1) {\r\n      // Zoom Out\r\n      zoom.out();\r\n    } else {\r\n      // Zoom In\r\n      zoom.in(e);\r\n    }\r\n  },\r\n  in(e) {\r\n    const swiper = this;\r\n\r\n    const zoom = swiper.zoom;\r\n    const params = swiper.params.zoom;\r\n    const { gesture, image } = zoom;\r\n\r\n    if (!gesture.$slideEl) {\r\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\r\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\r\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\r\n    }\r\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\r\n\r\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\r\n\r\n    let touchX;\r\n    let touchY;\r\n    let offsetX;\r\n    let offsetY;\r\n    let diffX;\r\n    let diffY;\r\n    let translateX;\r\n    let translateY;\r\n    let imageWidth;\r\n    let imageHeight;\r\n    let scaledWidth;\r\n    let scaledHeight;\r\n    let translateMinX;\r\n    let translateMinY;\r\n    let translateMaxX;\r\n    let translateMaxY;\r\n    let slideWidth;\r\n    let slideHeight;\r\n\r\n    if (typeof image.touchesStart.x === 'undefined' && e) {\r\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\r\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\r\n    } else {\r\n      touchX = image.touchesStart.x;\r\n      touchY = image.touchesStart.y;\r\n    }\r\n\r\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\r\n    zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\r\n    if (e) {\r\n      slideWidth = gesture.$slideEl[0].offsetWidth;\r\n      slideHeight = gesture.$slideEl[0].offsetHeight;\r\n      offsetX = gesture.$slideEl.offset().left;\r\n      offsetY = gesture.$slideEl.offset().top;\r\n      diffX = (offsetX + (slideWidth / 2)) - touchX;\r\n      diffY = (offsetY + (slideHeight / 2)) - touchY;\r\n\r\n      imageWidth = gesture.$imageEl[0].offsetWidth;\r\n      imageHeight = gesture.$imageEl[0].offsetHeight;\r\n      scaledWidth = imageWidth * zoom.scale;\r\n      scaledHeight = imageHeight * zoom.scale;\r\n\r\n      translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\r\n      translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\r\n      translateMaxX = -translateMinX;\r\n      translateMaxY = -translateMinY;\r\n\r\n      translateX = diffX * zoom.scale;\r\n      translateY = diffY * zoom.scale;\r\n\r\n      if (translateX < translateMinX) {\r\n        translateX = translateMinX;\r\n      }\r\n      if (translateX > translateMaxX) {\r\n        translateX = translateMaxX;\r\n      }\r\n\r\n      if (translateY < translateMinY) {\r\n        translateY = translateMinY;\r\n      }\r\n      if (translateY > translateMaxY) {\r\n        translateY = translateMaxY;\r\n      }\r\n    } else {\r\n      translateX = 0;\r\n      translateY = 0;\r\n    }\r\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\r\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\r\n  },\r\n  out() {\r\n    const swiper = this;\r\n\r\n    const zoom = swiper.zoom;\r\n    const params = swiper.params.zoom;\r\n    const { gesture } = zoom;\r\n\r\n    if (!gesture.$slideEl) {\r\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\r\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\r\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\r\n    }\r\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\r\n\r\n    zoom.scale = 1;\r\n    zoom.currentScale = 1;\r\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\r\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\r\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\r\n    gesture.$slideEl = undefined;\r\n  },\r\n  // Attach/Detach Events\r\n  enable() {\r\n    const swiper = this;\r\n    const zoom = swiper.zoom;\r\n    if (zoom.enabled) return;\r\n    zoom.enabled = true;\r\n\r\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\r\n\r\n    // Scale image\r\n    if (Support.gestures) {\r\n      swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\r\n      swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\r\n      swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\r\n    } else if (swiper.touchEvents.start === 'touchstart') {\r\n      swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\r\n      swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\r\n      swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\r\n    }\r\n\r\n    // Move image\r\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\r\n  },\r\n  disable() {\r\n    const swiper = this;\r\n    const zoom = swiper.zoom;\r\n    if (!zoom.enabled) return;\r\n\r\n    swiper.zoom.enabled = false;\r\n\r\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\r\n\r\n    // Scale image\r\n    if (Support.gestures) {\r\n      swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\r\n      swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\r\n      swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\r\n    } else if (swiper.touchEvents.start === 'touchstart') {\r\n      swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\r\n      swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\r\n      swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\r\n    }\r\n\r\n    // Move image\r\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\r\n  },\r\n};\r\n\r\nvar zoom = {\r\n  name: 'zoom',\r\n  params: {\r\n    zoom: {\r\n      enabled: false,\r\n      maxRatio: 3,\r\n      minRatio: 1,\r\n      toggle: true,\r\n      containerClass: 'swiper-zoom-container',\r\n      zoomedSlideClass: 'swiper-slide-zoomed',\r\n    },\r\n  },\r\n  create() {\r\n    const swiper = this;\r\n    const zoom = {\r\n      enabled: false,\r\n      scale: 1,\r\n      currentScale: 1,\r\n      isScaling: false,\r\n      gesture: {\r\n        $slideEl: undefined,\r\n        slideWidth: undefined,\r\n        slideHeight: undefined,\r\n        $imageEl: undefined,\r\n        $imageWrapEl: undefined,\r\n        maxRatio: 3,\r\n      },\r\n      image: {\r\n        isTouched: undefined,\r\n        isMoved: undefined,\r\n        currentX: undefined,\r\n        currentY: undefined,\r\n        minX: undefined,\r\n        minY: undefined,\r\n        maxX: undefined,\r\n        maxY: undefined,\r\n        width: undefined,\r\n        height: undefined,\r\n        startX: undefined,\r\n        startY: undefined,\r\n        touchesStart: {},\r\n        touchesCurrent: {},\r\n      },\r\n      velocity: {\r\n        x: undefined,\r\n        y: undefined,\r\n        prevPositionX: undefined,\r\n        prevPositionY: undefined,\r\n        prevTime: undefined,\r\n      },\r\n    };\r\n\r\n    ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach((methodName) => {\r\n      zoom[methodName] = Zoom[methodName].bind(swiper);\r\n    });\r\n    Utils.extend(swiper, {\r\n      zoom,\r\n    });\r\n\r\n    let scale = 1;\r\n    Object.defineProperty(swiper.zoom, 'scale', {\r\n      get() {\r\n        return scale;\r\n      },\r\n      set(value) {\r\n        if (scale !== value) {\r\n          const imageEl = swiper.zoom.gesture.$imageEl ? swiper.zoom.gesture.$imageEl[0] : undefined;\r\n          const slideEl = swiper.zoom.gesture.$slideEl ? swiper.zoom.gesture.$slideEl[0] : undefined;\r\n          swiper.emit('zoomChange', value, imageEl, slideEl);\r\n        }\r\n        scale = value;\r\n      },\r\n    });\r\n  },\r\n  on: {\r\n    init() {\r\n      const swiper = this;\r\n      if (swiper.params.zoom.enabled) {\r\n        swiper.zoom.enable();\r\n      }\r\n    },\r\n    destroy() {\r\n      const swiper = this;\r\n      swiper.zoom.disable();\r\n    },\r\n    touchStart(e) {\r\n      const swiper = this;\r\n      if (!swiper.zoom.enabled) return;\r\n      swiper.zoom.onTouchStart(e);\r\n    },\r\n    touchEnd(e) {\r\n      const swiper = this;\r\n      if (!swiper.zoom.enabled) return;\r\n      swiper.zoom.onTouchEnd(e);\r\n    },\r\n    doubleTap(e) {\r\n      const swiper = this;\r\n      if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\r\n        swiper.zoom.toggle(e);\r\n      }\r\n    },\r\n    transitionEnd() {\r\n      const swiper = this;\r\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\r\n        swiper.zoom.onTransitionEnd();\r\n      }\r\n    },\r\n  },\r\n};\r\n\r\n/* eslint no-underscore-dangle: \"off\" */\r\n\r\nconst Autoplay = {\r\n  run() {\r\n    const swiper = this;\r\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\r\n    let delay = swiper.params.autoplay.delay;\r\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\r\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\r\n    }\r\n    clearTimeout(swiper.autoplay.timeout);\r\n    swiper.autoplay.timeout = Utils.nextTick(() => {\r\n      if (swiper.params.autoplay.reverseDirection) {\r\n        if (swiper.params.loop) {\r\n          swiper.loopFix();\r\n          swiper.slidePrev(swiper.params.speed, true, true);\r\n          swiper.emit('autoplay');\r\n        } else if (!swiper.isBeginning) {\r\n          swiper.slidePrev(swiper.params.speed, true, true);\r\n          swiper.emit('autoplay');\r\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\r\n          swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\r\n          swiper.emit('autoplay');\r\n        } else {\r\n          swiper.autoplay.stop();\r\n        }\r\n      } else if (swiper.params.loop) {\r\n        swiper.loopFix();\r\n        swiper.slideNext(swiper.params.speed, true, true);\r\n        swiper.emit('autoplay');\r\n      } else if (!swiper.isEnd) {\r\n        swiper.slideNext(swiper.params.speed, true, true);\r\n        swiper.emit('autoplay');\r\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\r\n        swiper.slideTo(0, swiper.params.speed, true, true);\r\n        swiper.emit('autoplay');\r\n      } else {\r\n        swiper.autoplay.stop();\r\n      }\r\n    }, delay);\r\n  },\r\n  start() {\r\n    const swiper = this;\r\n    if (typeof swiper.autoplay.timeout !== 'undefined') return false;\r\n    if (swiper.autoplay.running) return false;\r\n    swiper.autoplay.running = true;\r\n    swiper.emit('autoplayStart');\r\n    swiper.autoplay.run();\r\n    return true;\r\n  },\r\n  stop() {\r\n    const swiper = this;\r\n    if (!swiper.autoplay.running) return false;\r\n    if (typeof swiper.autoplay.timeout === 'undefined') return false;\r\n\r\n    if (swiper.autoplay.timeout) {\r\n      clearTimeout(swiper.autoplay.timeout);\r\n      swiper.autoplay.timeout = undefined;\r\n    }\r\n    swiper.autoplay.running = false;\r\n    swiper.emit('autoplayStop');\r\n    return true;\r\n  },\r\n  pause(speed) {\r\n    const swiper = this;\r\n    if (!swiper.autoplay.running) return;\r\n    if (swiper.autoplay.paused) return;\r\n    if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\r\n    swiper.autoplay.paused = true;\r\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\r\n      swiper.autoplay.paused = false;\r\n      swiper.autoplay.run();\r\n    } else {\r\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\r\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\r\n    }\r\n  },\r\n};\r\n\r\nvar autoplay = {\r\n  name: 'autoplay',\r\n  params: {\r\n    autoplay: {\r\n      enabled: false,\r\n      delay: 3000,\r\n      waitForTransition: true,\r\n      disableOnInteraction: true,\r\n      stopOnLastSlide: false,\r\n      reverseDirection: false,\r\n    },\r\n  },\r\n  create() {\r\n    const swiper = this;\r\n    Utils.extend(swiper, {\r\n      autoplay: {\r\n        running: false,\r\n        paused: false,\r\n        run: Autoplay.run.bind(swiper),\r\n        start: Autoplay.start.bind(swiper),\r\n        stop: Autoplay.stop.bind(swiper),\r\n        pause: Autoplay.pause.bind(swiper),\r\n        onTransitionEnd(e) {\r\n          if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\r\n          if (e.target !== this) return;\r\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\r\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\r\n          swiper.autoplay.paused = false;\r\n          if (!swiper.autoplay.running) {\r\n            swiper.autoplay.stop();\r\n          } else {\r\n            swiper.autoplay.run();\r\n          }\r\n        },\r\n      },\r\n    });\r\n  },\r\n  on: {\r\n    init() {\r\n      const swiper = this;\r\n      if (swiper.params.autoplay.enabled) {\r\n        swiper.autoplay.start();\r\n      }\r\n    },\r\n    beforeTransitionStart(speed, internal) {\r\n      const swiper = this;\r\n      if (swiper.autoplay.running) {\r\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\r\n          swiper.autoplay.pause(speed);\r\n        } else {\r\n          swiper.autoplay.stop();\r\n        }\r\n      }\r\n    },\r\n    sliderFirstMove() {\r\n      const swiper = this;\r\n      if (swiper.autoplay.running) {\r\n        if (swiper.params.autoplay.disableOnInteraction) {\r\n          swiper.autoplay.stop();\r\n        } else {\r\n          swiper.autoplay.pause();\r\n        }\r\n      }\r\n    },\r\n    destroy() {\r\n      const swiper = this;\r\n      if (swiper.autoplay.running) {\r\n        swiper.autoplay.stop();\r\n      }\r\n    },\r\n  },\r\n};\r\n\r\n// Swiper Class\r\n\r\nconst components = [\r\n  Device$1,\r\n  Support$1,\r\n  Browser$1,\r\n  Resize,\r\n  Observer$1,\r\n  \r\n];\r\n\r\nif (typeof Swiper.use === 'undefined') {\r\n  Swiper.use = Swiper.Class.use;\r\n  Swiper.installModule = Swiper.Class.installModule;\r\n}\r\n\r\nSwiper.use(components);\r\n\r\nSwiper.use([pagination, scrollbar, autoplay, zoom]);\r\n\r\nexport { Swiper };\r\n"],"sourceRoot":""}
=======
{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/swiper.bundle-8bab85e6.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,aAAa;AACzC,yBAAyB,UAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,YAAY;AACZ,mCAAmC,EAAE;AACrC,sCAAsC,EAAE;AACxC;AACA,2BAA2B,EAAE;AAC7B;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,oCAAoC,EAAE;AACtC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,qBAAqB;AACrB,uCAAuC,EAAE;AACzC;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,mCAAmC,EAAE;AACrC,gCAAgC,EAAE;AAClC,yBAAyB,EAAE;AAC3B,2BAA2B,EAAE;AAC7B,KAAK;AACL;AACA;AACA,KAAK;AACL,mCAAmC,EAAE;AACrC,sCAAsC,EAAE;AACxC;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL,wBAAwB,EAAE;AAC1B,uBAAuB,EAAE;AACzB,cAAc;AACd,6BAA6B,EAAE;AAC/B,+BAA+B,EAAE;AACjC;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kCAAkC;AACrD;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,oBAAoB;AACrC,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,oBAAoB;AACrC,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,oBAAoB;AACrC,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8CAA8C,IAAI;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,SAAS,IAAI;AAC/B;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,mBAAmB;AACpC;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,yCAAyC,QAAQ;AACjD;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,mBAAmB;AACpC;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mBAAmB;AAClC;AACA;AACA;AACA;AACA,eAAe,mBAAmB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe,wBAAwB;AACvC;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,eAAe,wBAAwB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,iBAAiB;AAClC;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,uBAAuB,qBAAqB;AAC5C;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA,6CAA6C,QAAQ;AACrD;AACA;AACA,KAAK;AACL,iBAAiB,qBAAqB;AACtC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB,iBAAiB;AAClC,oCAAoC;AACpC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,iBAAiB,iBAAiB;AAClC;;AAEA,mBAAmB,uBAAuB;AAC1C;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA,eAAe,kBAAkB;AACjC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,kDAAkD;AAClD,wDAAwD;AACxD;AACA,4BAA4B;AAC5B;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,wCAAwC;AACxC;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,eAAe;AACf,8CAA8C;AAC9C;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH,aAAa,WAAW;AACxB,CAAC,YAAY;;AAEb;AACA;AACA;AACA;AACA,GAAG;AACH,cAAc;AACd,aAAa;AACb;AACA;AACA,GAAG;AACH,kDAAkD;AAClD,wDAAwD;AACxD;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH,4BAA4B;AAC5B,0BAA0B;AAC1B,YAAY;AACZ,sCAAsC;AACtC,0CAA0C;AAC1C,CAAC,UAAU;;AAEX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,iEAAiE;AACjE;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA,uDAAuD,iBAAiB;AACxE;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,qBAAqB,mBAAmB;AACxC;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;AACL;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,yBAAyB;AACzB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oCAAoC,4CAA4C,GAAG,YAAY;AAC/F;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,yCAAyC,yBAAyB;AAClE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,uBAAuB,gCAAgC;AACvD,mBAAmB,oCAAoC;;AAEvD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,oBAAoB,uCAAuC;AAC3D,oDAAoD,oBAAoB;AACxE;AACA;AACA;AACA;AACA,kDAAkD;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,qCAAqC,UAAU;AAC/C,SAAS;AACT,sCAAsC,UAAU;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,WAAW,yCAAyC,KAAK;AAC7E;AACA;AACA,+CAA+C,WAAW,yCAAyC,KAAK;AACxG,yBAAyB,YAAY,yCAAyC,KAAK;AACnF;;AAEA;AACA;AACA;AACA,+CAA+C,WAAW,yCAAyC,KAAK;AACxG,yBAAyB,YAAY,yCAAyC,KAAK;AACnF;AACA;AACA,qBAAqB,qBAAqB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,gBAAgB,aAAa,KAAK;AAC7D,uBAAuB,iBAAiB,aAAa,KAAK;AAC1D,KAAK,kBAAkB,kBAAkB,aAAa,KAAK;AAC3D;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,eAAe,4CAA4C;AAC3D;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA,aAAa,yBAAyB;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA,oDAAoD,UAAU;AAC9D;;AAEA;AACA;AACA;AACA,iBAAiB,mBAAmB;AACpC;AACA;AACA;;AAEA;AACA;AACA;;AAEA,SAAS,4BAA4B;;AAErC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO,+BAA+B;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA,wBAAwB,wBAAwB,GAAG,sBAAsB,GAAG,sBAAsB,GAAG,iCAAiC,GAAG,+BAA+B,GAAG,+BAA+B;;AAE1M;AACA;AACA,6CAA6C,kBAAkB,4BAA4B,YAAY;AACvG,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,kBAAkB,QAAQ,2BAA2B,6BAA6B,UAAU;AAClH;AACA,KAAK;AACL;AACA,sBAAsB,kBAAkB,GAAG,2BAA2B,4BAA4B,UAAU;AAC5G;AACA;AACA;AACA;AACA,0CAA0C,kBAAkB;AAC5D;AACA;AACA;AACA;AACA;AACA,0CAA0C,kBAAkB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,kBAAkB,QAAQ,2BAA2B,6BAA6B,0CAA0C;AAClJ;AACA,KAAK;AACL;AACA,sBAAsB,kBAAkB,GAAG,2BAA2B,4BAA4B,0CAA0C;AAC5I;AACA;AACA;AACA;AACA,sBAAsB,kBAAkB,QAAQ,2BAA2B,6BAA6B,0CAA0C;AAClJ;AACA,KAAK;AACL;AACA,sBAAsB,kBAAkB,GAAG,2BAA2B,4BAA4B,0CAA0C;AAC5I;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wCAAwC,kBAAkB;AAC1D;AACA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,kEAAkE,EAAE,MAAM,EAAE,MAAM,EAAE;AACpF,2CAA2C,EAAE,MAAM,EAAE;AACrD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS,qCAAqC;AAC9C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS,6BAA6B;AACtC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS,oBAAoB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS,qBAAqB;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,kBAAkB,4BAA4B,UAAU,UAAU,2BAA2B;AACrH;AACA;;AAEA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA,sBAAsB,kBAAkB,4BAA4B,UAAU,UAAU,2BAA2B;AACnH;AACA;;AAEA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS,qBAAqB;AAC9B;AACA,0BAA0B,kBAAkB,GAAG,2BAA2B;;AAE1E,uCAAuC,kBAAkB;;AAEzD;AACA;AACA;AACA,qBAAqB,oBAAoB;AACzC,oEAAoE,kBAAkB,GAAG,uBAAuB;AAChH;AACA;AACA,uCAAuC,kBAAkB;AACzD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,iBAAiB,yBAAyB;AAC1C;AACA;AACA,wCAAwC,QAAQ;AAChD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS,6BAA6B;AACtC,0BAA0B,kBAAkB,GAAG,2BAA2B,IAAI,kBAAkB,GAAG,uBAAuB;AAC1H;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS,qBAAqB;AAC9B;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS,kCAAkC;;AAE3C;AACA;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS,kCAAkC;AAC3C;AACA;AACA;AACA;AACA,4CAA4C,kBAAkB;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B,YAAY;AAC1C;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA,iBAAiB,yBAAyB;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,SAAS,kCAAkC;;AAE3C;AACA;AACA;AACA;AACA,4CAA4C,kBAAkB;AAC9D;AACA;AACA;;AAEA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB,0BAA0B;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4CAA4C,oBAAoB;AAChE,sCAAsC,oBAAoB;AAC1D;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,SAAS,kBAAkB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wGAAwG,sBAAsB;AAC9H;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS,qCAAqC;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,uBAAuB;AACxC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,SAAS,aAAa;;AAEtB;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS,2CAA2C;;AAEpD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,4HAA4H,gCAAgC;AAC5J;AACA,iGAAiG,0BAA0B;AAC3H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,8HAA8H,gCAAgC;AAC9J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA,mBAAmB;;AAEnB;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,iBAAiB;AAC1C;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA,SAAS,kBAAkB;;AAE3B;AACA;;AAEA,eAAe;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,gCAAgC;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,4BAA4B;AAC5B;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE;AACjE;AACA,KAAK;;AAEL;AACA,wCAAwC;AACxC;;AAEA;AACA,mCAAmC;AACnC,2CAA2C;AAC3C,yCAAyC;;AAEzC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,yCAAyC,WAAW,kBAAkB;AACtE;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA,wCAAwC,2BAA2B;;AAEnE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,mCAAmC,mBAAmB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,QAAQ;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,mCAAmC,mBAAmB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,qCAAqC,EAAE,iBAAiB,OAAO,iBAAiB;AACtG,mBAAmB,qCAAqC,EAAE,aAAa;;AAEvE;AACA,6BAA6B,qCAAqC,MAAM,aAAa;AACrF;;AAEA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA,6BAA6B;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,qBAAqB,6BAA6B;AAClD;AACA;AACA;AACA;AACA,2CAA2C,gDAAgD;;AAE3F;AACA,kDAAkD,oBAAoB;AACtE,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;AAC5C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe;AACf;AACA,eAAe;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B;AAC9B;AACA;AACA,OAAO,OAAO;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;;AAEA,6CAA6C;AAC7C;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,+DAA+D;AAC9H;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,yBAAyB,GAAG,yBAAyB,QAAQ,yBAAyB,aAAa,yBAAyB,QAAQ,yBAAyB,aAAa,yBAAyB;AAChO;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,yBAAyB;AAC3D;AACA;AACA;AACA;AACA,6BAA6B,yBAAyB;AACtD;AACA,6BAA6B,yBAAyB;AACtD;AACA;AACA;AACA;AACA,6BAA6B,yBAAyB;AACtD;AACA,6BAA6B,yBAAyB;AACtD;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,kCAAkC,gBAAgB;AAClD,sCAAsC,yBAAyB;AAC/D;AACA;AACA;AACA,yBAAyB,yBAAyB;AAClD;AACA,yBAAyB,yBAAyB;AAClD;AACA;AACA,yBAAyB,yBAAyB;AAClD;AACA,yBAAyB,yBAAyB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,cAAc;AACjF;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,mBAAmB,4BAA4B,0CAA0C,OAAO,WAAW,OAAO;AAClH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB,qBAAqB;AAC1C;AACA;AACA,SAAS;AACT,gCAAgC,qBAAqB,UAAU,mBAAmB,MAAM,qBAAqB;AAC7G;AACA;AACA;AACA,+CAA+C,mBAAmB;AAClE;AACA;AACA;AACA;AACA,OAAO;AACP,yCAAyC,oBAAoB;AAC7D;AACA,0BAA0B,kBAAkB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,yCAAyC,4BAA4B;AACrE;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,sBAAsB,qBAAqB,EAAE,YAAY;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,mBAAmB;AAC7C;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,2BAA2B,mBAAmB;AAC9C;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,WAAW,yCAAyC;AACpD;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,yCAAyC,OAAO;AAChD,OAAO;AACP,wCAAwC,OAAO;AAC/C;AACA,kCAAkC,QAAQ;AAC1C,KAAK;AACL;AACA,8CAA8C,OAAO;AACrD,OAAO;AACP,wCAAwC,OAAO;AAC/C;AACA,mCAAmC,QAAQ;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA,WAAW,YAAY;AACvB,WAAW,eAAe;;AAE1B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,kCAAkC,SAAS;AAC3C,KAAK;AACL,mCAAmC,SAAS;AAC5C;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,WAAW,+BAA+B;AAC1C;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,WAAW,wBAAwB;AACnC,WAAW,eAAe;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,WAAW,wBAAwB;AACnC,WAAW,eAAe;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA,WAAW,YAAY;AACvB,WAAW,MAAM;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,iFAAiF,iCAAiC;AAClH,kFAAkF,gCAAgC;AAClH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,iFAAiF,iCAAiC;AAClH,kFAAkF,gCAAgC;AAClH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,WAAW,4BAA4B;AACvC;;AAEA;AACA;AACA;AACA;;AAEA,+BAA+B,kCAAkC;AACjE;AACA,iCAAiC,kCAAkC;AACnE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,sBAAsB;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,WAAW;AACtE,GAAG;AACH;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2FAA2F,WAAW;AACtG;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,WAAW,iBAAiB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,WAAW,2BAA2B;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kDAAkD,eAAe,MAAM,eAAe;AACtF,GAAG;AACH;AACA;AACA;AACA,WAAW,2BAA2B;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+EAA+E,eAAe,MAAM,eAAe;AACnH,GAAG;AACH;AACA;AACA;AACA,WAAW,UAAU;AACrB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,WAAW,iBAAiB;;AAE5B;AACA;AACA;AACA,yDAAyD,sBAAsB;AAC/E;AACA;;AAEA,iCAAiC,wBAAwB;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,kEAAkE,WAAW,MAAM,WAAW;AAC9F,2EAA2E,WAAW;AACtF,GAAG;AACH;AACA;;AAEA;AACA;AACA,WAAW,UAAU;;AAErB;AACA;AACA;AACA,yDAAyD,sBAAsB;AAC/E;AACA;;AAEA;AACA;AACA;AACA;AACA,oCAAoC,wBAAwB;AAC5D;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA,sIAAsI,gCAAgC;;AAEtK;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,sDAAsD,kCAAkC;AACxF,GAAG;AACH;AACA;AACA;AACA;;AAEA;;AAEA,sIAAsI,gCAAgC;;AAEtK;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,uDAAuD,kCAAkC;AACzF,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,0BAA0B;AAC1B,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEkB","file":"swiper-bundle-8bab85e6-js-es2015.js","sourcesContent":["/**\n * SSR Window 2.0.0\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2020, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: May 12, 2020\n */\n/* eslint-disable no-param-reassign */\nfunction isObject(obj) {\n    return (obj !== null &&\n        typeof obj === 'object' &&\n        'constructor' in obj &&\n        obj.constructor === Object);\n}\nfunction extend(target, src) {\n    if (target === void 0) { target = {}; }\n    if (src === void 0) { src = {}; }\n    Object.keys(src).forEach(function (key) {\n        if (typeof target[key] === 'undefined')\n            target[key] = src[key];\n        else if (isObject(src[key]) &&\n            isObject(target[key]) &&\n            Object.keys(src[key]).length > 0) {\n            extend(target[key], src[key]);\n        }\n    });\n}\n\nvar doc = typeof document !== 'undefined' ? document : {};\nvar ssrDocument = {\n    body: {},\n    addEventListener: function () { },\n    removeEventListener: function () { },\n    activeElement: {\n        blur: function () { },\n        nodeName: '',\n    },\n    querySelector: function () {\n        return null;\n    },\n    querySelectorAll: function () {\n        return [];\n    },\n    getElementById: function () {\n        return null;\n    },\n    createEvent: function () {\n        return {\n            initEvent: function () { },\n        };\n    },\n    createElement: function () {\n        return {\n            children: [],\n            childNodes: [],\n            style: {},\n            setAttribute: function () { },\n            getElementsByTagName: function () {\n                return [];\n            },\n        };\n    },\n    createElementNS: function () {\n        return {};\n    },\n    importNode: function () {\n        return null;\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n};\nextend(doc, ssrDocument);\n\nvar win = typeof window !== 'undefined' ? window : {};\nvar ssrWindow = {\n    document: ssrDocument,\n    navigator: {\n        userAgent: '',\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n    history: {\n        replaceState: function () { },\n        pushState: function () { },\n        go: function () { },\n        back: function () { },\n    },\n    CustomEvent: function CustomEvent() {\n        return this;\n    },\n    addEventListener: function () { },\n    removeEventListener: function () { },\n    getComputedStyle: function () {\n        return {\n            getPropertyValue: function () {\n                return '';\n            },\n        };\n    },\n    Image: function () { },\n    Date: function () { },\n    screen: {},\n    setTimeout: function () { },\n    clearTimeout: function () { },\n    matchMedia: function () {\n        return {};\n    },\n};\nextend(win, ssrWindow);\n\n/**\n * Dom7 2.1.5\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * http://framework7.io/docs/dom.html\n *\n * Copyright 2020, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n *\n * Licensed under MIT\n *\n * Released on: May 15, 2020\n */\n\nclass Dom7 {\n  constructor(arr) {\n    const self = this;\n    // Create array-like object\n    for (let i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  }\n}\n\nfunction $(selector, context) {\n  const arr = [];\n  let i = 0;\n  if (selector && !context) {\n    if (selector instanceof Dom7) {\n      return selector;\n    }\n  }\n  if (selector) {\n      // String\n    if (typeof selector === 'string') {\n      let els;\n      let tempParent;\n      const html = selector.trim();\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n        let toCreate = 'div';\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n        if (html.indexOf('<option') === 0) toCreate = 'select';\n        tempParent = doc.createElement(toCreate);\n        tempParent.innerHTML = html;\n        for (i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n          // Pure ID selector\n          els = [doc.getElementById(selector.trim().split('#')[1])];\n        } else {\n          // Other selectors\n          els = (context || doc).querySelectorAll(selector.trim());\n        }\n        for (i = 0; i < els.length; i += 1) {\n          if (els[i]) arr.push(els[i]);\n        }\n      }\n    } else if (selector.nodeType || selector === win || selector === doc) {\n      // Node/element\n      arr.push(selector);\n    } else if (selector.length > 0 && selector[0].nodeType) {\n      // Array of elements or instance of Dom\n      for (i = 0; i < selector.length; i += 1) {\n        arr.push(selector[i]);\n      }\n    }\n  }\n  return new Dom7(arr);\n}\n\n$.fn = Dom7.prototype;\n$.Class = Dom7;\n$.Dom7 = Dom7;\n\nfunction unique(arr) {\n  const uniqueArray = [];\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n  return uniqueArray;\n}\n\n// Classes and attributes\nfunction addClass(className) {\n  if (typeof className === 'undefined') {\n    return this;\n  }\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.add(classes[i]);\n    }\n  }\n  return this;\n}\nfunction removeClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.remove(classes[i]);\n    }\n  }\n  return this;\n}\nfunction hasClass(className) {\n  if (!this[0]) return false;\n  return this[0].classList.contains(className);\n}\nfunction toggleClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.toggle(classes[i]);\n    }\n  }\n  return this;\n}\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  }\n\n  // Set attrs\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      // eslint-disable-next-line\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n  return this;\n}\nfunction data(key, value) {\n  let el;\n  if (typeof value === 'undefined') {\n    el = this[0];\n    // Get value\n    if (el) {\n      if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n        return el.dom7ElementDataStorage[key];\n      }\n\n      const dataKey = el.getAttribute(`data-${key}`);\n      if (dataKey) {\n        return dataKey;\n      }\n      return undefined;\n    }\n    return undefined;\n  }\n\n  // Set value\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n  return this;\n}\n// Transforms\n// eslint-disable-next-line\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransform = transform;\n    elStyle.transform = transform;\n  }\n  return this;\n}\nfunction transition(duration) {\n  if (typeof duration !== 'string') {\n    duration = `${duration}ms`; // eslint-disable-line\n  }\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransitionDuration = duration;\n    elStyle.transitionDuration = duration;\n  }\n  return this;\n}\n// Events\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);\n    else {\n      const parents = $(target).parents(); // eslint-disable-line\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    listener.apply(this, eventData);\n  }\n  const events = eventType.split(' ');\n  let j;\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7Listeners) el.dom7Listeners = {};\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n        el.dom7Listeners[event].push({\n          listener,\n          proxyListener: handleEvent,\n        });\n        el.addEventListener(event, handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n        el.dom7LiveListeners[event].push({\n          listener,\n          proxyListener: handleLiveEvent,\n        });\n        el.addEventListener(event, handleLiveEvent, capture);\n      }\n    }\n  }\n  return this;\n}\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  const events = eventType.split(' ');\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let handlers;\n      if (!targetSelector && el.dom7Listeners) {\n        handlers = el.dom7Listeners[event];\n      } else if (targetSelector && el.dom7LiveListeners) {\n        handlers = el.dom7LiveListeners[event];\n      }\n      if (handlers && handlers.length) {\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\n          const handler = handlers[k];\n          if (listener && handler.listener === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (!listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          }\n        }\n      }\n    }\n  }\n  return this;\n}\nfunction trigger(...args) {\n  const events = args[0].split(' ');\n  const eventData = args[1];\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let evt;\n      try {\n        evt = new win.CustomEvent(event, {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true,\n        });\n      } catch (e) {\n        evt = doc.createEvent('Event');\n        evt.initEvent(event, true, true);\n        evt.detail = eventData;\n      }\n      // eslint-disable-next-line\n      el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n      el.dispatchEvent(evt);\n      el.dom7EventData = [];\n      delete el.dom7EventData;\n    }\n  }\n  return this;\n}\nfunction transitionEnd(callback) {\n  const events = ['webkitTransitionEnd', 'transitionend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    /* jshint validthis:true */\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n    return this[0].offsetWidth;\n  }\n  return null;\n}\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n    return this[0].offsetHeight;\n  }\n  return null;\n}\nfunction offset() {\n  if (this.length > 0) {\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = doc.body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === win ? win.scrollY : el.scrollTop;\n    const scrollLeft = el === win ? win.scrollX : el.scrollLeft;\n    return {\n      top: (box.top + scrollTop) - clientTop,\n      left: (box.left + scrollLeft) - clientLeft,\n    };\n  }\n\n  return null;\n}\nfunction styles() {\n  if (this[0]) return win.getComputedStyle(this[0], null);\n  return {};\n}\nfunction css(props, value) {\n  let i;\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      if (this[0]) return win.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      for (i = 0; i < this.length; i += 1) {\n        // eslint-disable-next-line\n        for (let prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n      return this;\n    }\n  }\n  if (arguments.length === 2 && typeof props === 'string') {\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n    return this;\n  }\n  return this;\n}\n// Iterate over the collection passing elements to `callback`\nfunction each(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], i, this[i]) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\n// eslint-disable-next-line\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : undefined;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    if (this[0]) {\n      return this[0].textContent.trim();\n    }\n    return null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n  return this;\n}\nfunction is(selector) {\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n\n    compareWith = $(selector);\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  } else if (selector === doc) return el === doc;\n  else if (selector === win) return el === win;\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  }\n  return false;\n}\nfunction index() {\n  let child = this[0];\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\n// eslint-disable-next-line\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n  let returnIndex;\n  if (index > length - 1) {\n    return new Dom7([]);\n  }\n  if (index < 0) {\n    returnIndex = length + index;\n    if (returnIndex < 0) return new Dom7([]);\n    return new Dom7([this[returnIndex]]);\n  }\n  return new Dom7([this[index]]);\n}\nfunction append(...args) {\n  let newChild;\n\n  for (let k = 0; k < args.length; k += 1) {\n    newChild = args[k];\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = doc.createElement('div');\n        tempDiv.innerHTML = newChild;\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\nfunction prepend(newChild) {\n  let i;\n  let j;\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = doc.createElement('div');\n      tempDiv.innerHTML = newChild;\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n  return this;\n}\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return new Dom7([this[0].nextElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return new Dom7(nextEls);\n}\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return new Dom7([el.previousElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (el.previousElementSibling) return new Dom7([el.previousElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return new Dom7(prevEls);\n}\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n  return $(unique(parents));\n}\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n      parent = parent.parentNode;\n    }\n  }\n  return $(unique(parents));\n}\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n  if (typeof selector === 'undefined') {\n    return new Dom7([]);\n  }\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n  return closest;\n}\nfunction find(selector) {\n  const foundElements = [];\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n  return new Dom7(foundElements);\n}\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].childNodes;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector) {\n        if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n      } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n  return new Dom7(unique(children));\n}\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n  return this;\n}\nfunction add(...args) {\n  const dom = this;\n  let i;\n  let j;\n  for (i = 0; i < args.length; i += 1) {\n    const toAdd = $(args[i]);\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom[dom.length] = toAdd[j];\n      dom.length += 1;\n    }\n  }\n  return dom;\n}\n\n/**\n * SSR Window 1.0.1\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2018, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: July 18, 2018\n */\nvar doc$1 = (typeof document === 'undefined') ? {\n  body: {},\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  activeElement: {\n    blur: function blur() {},\n    nodeName: '',\n  },\n  querySelector: function querySelector() {\n    return null;\n  },\n  querySelectorAll: function querySelectorAll() {\n    return [];\n  },\n  getElementById: function getElementById() {\n    return null;\n  },\n  createEvent: function createEvent() {\n    return {\n      initEvent: function initEvent() {},\n    };\n  },\n  createElement: function createElement() {\n    return {\n      children: [],\n      childNodes: [],\n      style: {},\n      setAttribute: function setAttribute() {},\n      getElementsByTagName: function getElementsByTagName() {\n        return [];\n      },\n    };\n  },\n  location: { hash: '' },\n} : document; // eslint-disable-line\n\nvar win$1 = (typeof window === 'undefined') ? {\n  document: doc$1,\n  navigator: {\n    userAgent: '',\n  },\n  location: {},\n  history: {},\n  CustomEvent: function CustomEvent() {\n    return this;\n  },\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  getComputedStyle: function getComputedStyle() {\n    return {\n      getPropertyValue: function getPropertyValue() {\n        return '';\n      },\n    };\n  },\n  Image: function Image() {},\n  Date: function Date() {},\n  screen: {},\n  setTimeout: function setTimeout() {},\n  clearTimeout: function clearTimeout() {},\n} : window; // eslint-disable-line\n\n/**\n * Swiper 4.5.1\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2019 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: September 13, 2019\n */\n\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  data,\n  transform,\n  transition: transition,\n  on,\n  off,\n  trigger,\n  transitionEnd: transitionEnd,\n  outerWidth,\n  outerHeight,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  remove,\n  add,\n  styles,\n};\n\nObject.keys(Methods).forEach((methodName) => {\n  $.fn[methodName] = $.fn[methodName] || Methods[methodName];\n});\n\nconst Utils = {\n  deleteProps(obj) {\n    const object = obj;\n    Object.keys(object).forEach((key) => {\n      try {\n        object[key] = null;\n      } catch (e) {\n        // no getter for object\n      }\n      try {\n        delete object[key];\n      } catch (e) {\n        // something got wrong\n      }\n    });\n  },\n  nextTick(callback, delay = 0) {\n    return setTimeout(callback, delay);\n  },\n  now() {\n    return Date.now();\n  },\n  getTranslate(el, axis = 'x') {\n    let matrix;\n    let curTransform;\n    let transformMatrix;\n\n    const curStyle = win$1.getComputedStyle(el, null);\n\n    if (win$1.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map((a) => a.replace(',', '.')).join(', ');\n      }\n      // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n      transformMatrix = new win$1.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (win$1.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[4]);\n    }\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (win$1.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[5]);\n    }\n    return curTransform || 0;\n  },\n  parseUrlQuery(url) {\n    const query = {};\n    let urlToParse = url || win$1.location.href;\n    let i;\n    let params;\n    let param;\n    let length;\n    if (typeof urlToParse === 'string' && urlToParse.length) {\n      urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n      params = urlToParse.split('&').filter((paramsPart) => paramsPart !== '');\n      length = params.length;\n\n      for (i = 0; i < length; i += 1) {\n        param = params[i].replace(/#\\S+/g, '').split('=');\n        query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n      }\n    }\n    return query;\n  },\n  isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n  },\n  extend(...args) {\n    const to = Object(args[0]);\n    for (let i = 1; i < args.length; i += 1) {\n      const nextSource = args[i];\n      if (nextSource !== undefined && nextSource !== null) {\n        const keysArray = Object.keys(Object(nextSource));\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n          if (desc !== undefined && desc.enumerable) {\n            if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n    return to;\n  },\n};\n\nconst Support = (function Support() {\n  const testDiv = doc$1.createElement('div');\n  return {\n    touch: (win$1.Modernizr && win$1.Modernizr.touch === true) || (function checkTouch() {\n      return !!((win$1.navigator.maxTouchPoints > 0) || ('ontouchstart' in win$1) || (win$1.DocumentTouch && doc$1 instanceof win$1.DocumentTouch));\n    }()),\n\n    pointerEvents: !!(win$1.navigator.pointerEnabled || win$1.PointerEvent || ('maxTouchPoints' in win$1.navigator && win$1.navigator.maxTouchPoints > 0)),\n    prefixedPointerEvents: !!win$1.navigator.msPointerEnabled,\n\n    transition: (function checkTransition() {\n      const style = testDiv.style;\n      return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n    }()),\n    transforms3d: (win$1.Modernizr && win$1.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n      const style = testDiv.style;\n      return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n    }()),\n\n    flexbox: (function checkFlexbox() {\n      const style = testDiv.style;\n      const styles = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n      for (let i = 0; i < styles.length; i += 1) {\n        if (styles[i] in style) return true;\n      }\n      return false;\n    }()),\n\n    observer: (function checkObserver() {\n      return ('MutationObserver' in win$1 || 'WebkitMutationObserver' in win$1);\n    }()),\n\n    passiveListener: (function checkPassiveListener() {\n      let supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          },\n        });\n        win$1.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {\n        // No support\n      }\n      return supportsPassive;\n    }()),\n\n    gestures: (function checkGestures() {\n      return 'ongesturestart' in win$1;\n    }()),\n  };\n}());\n\nconst Browser = (function Browser() {\n  function isSafari() {\n    const ua = win$1.navigator.userAgent.toLowerCase();\n    return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n  }\n  return {\n    isIE: !!win$1.navigator.userAgent.match(/Trident/g) || !!win$1.navigator.userAgent.match(/MSIE/g),\n    isEdge: !!win$1.navigator.userAgent.match(/Edge/g),\n    isSafari: isSafari(),\n    isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(win$1.navigator.userAgent),\n  };\n}());\n\nclass SwiperClass {\n  constructor(params = {}) {\n    const self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach((eventName) => {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  }\n\n  on(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach((event) => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  }\n\n  once(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      handler.apply(self, args);\n      self.off(events, onceHandler);\n      if (onceHandler.f7proxy) {\n        delete onceHandler.f7proxy;\n      }\n    }\n    onceHandler.f7proxy = handler;\n    return self.on(events, onceHandler, priority);\n  }\n\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach((event) => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || (eventHandler.f7proxy && eventHandler.f7proxy === handler)) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  }\n\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach((event) => {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        const handlers = [];\n        self.eventsListeners[event].forEach((eventHandler) => {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach((eventHandler) => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n\n  useModulesParams(instanceParams) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  }\n\n  useModules(modulesParams = {}) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      const moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach((modulePropName) => {\n          const moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach((moduleEventName) => {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  }\n\n  static set components(components) {\n    const Class = this;\n    if (!Class.use) return;\n    Class.use(components);\n  }\n\n  static installModule(module, ...params) {\n    const Class = this;\n    if (!Class.prototype.modules) Class.prototype.modules = {};\n    const name = module.name || (`${Object.keys(Class.prototype.modules).length}_${Utils.now()}`);\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach((key) => {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach((key) => {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  }\n\n  static use(module, ...params) {\n    const Class = this;\n    if (Array.isArray(module)) {\n      module.forEach((m) => Class.installModule(m));\n      return Class;\n    }\n    return Class.installModule(module, ...params);\n  }\n}\n\nfunction updateSize () {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n  if (typeof swiper.params.width !== 'undefined') {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined') {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n  if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n  height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n  Utils.extend(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height,\n  });\n}\n\nfunction updateSlides () {\n  const swiper = this;\n  const params = swiper.params;\n\n  const {\n    $wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.snapGrid.length;\n\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  if (rtl) slides.css({ marginLeft: '', marginTop: '' });\n  else slides.css({ marginRight: '', marginBottom: '' });\n\n  let slidesNumberEvenToRows;\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  }\n\n  // Calc slides\n  let slideSize;\n  const slidesPerColumn = params.slidesPerColumn;\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  const numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      let newSlideOrderIndex;\n      let column;\n      let row;\n      if (\n        (params.slidesPerColumnFill === 'column')\n        || (params.slidesPerColumnFill === 'row' && params.slidesPerGroup > 1)\n      ) {\n        if (params.slidesPerColumnFill === 'column') {\n          column = Math.floor(i / slidesPerColumn);\n          row = i - (column * slidesPerColumn);\n          if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n            row += 1;\n            if (row >= slidesPerColumn) {\n              row = 0;\n              column += 1;\n            }\n          }\n        } else {\n          const groupIndex = Math.floor(i / params.slidesPerGroup);\n          row = Math.floor(i / params.slidesPerView) - groupIndex * params.slidesPerColumn;\n          column = i - row * params.slidesPerView - groupIndex * params.slidesPerView;\n        }\n        newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n        slide\n          .css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex,\n          });\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - (row * slidesPerRow);\n      }\n      slide\n        .css(\n          `margin-${swiper.isHorizontal() ? 'top' : 'left'}`,\n          (row !== 0 && params.spaceBetween) && (`${params.spaceBetween}px`)\n        )\n        .attr('data-swiper-column', column)\n        .attr('data-swiper-row', row);\n    }\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      const slideStyles = win$1.getComputedStyle(slide[0], null);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal()\n          ? slide.outerWidth(true)\n          : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        if (swiper.isHorizontal()) {\n          const width = parseFloat(slideStyles.getPropertyValue('width'));\n          const paddingLeft = parseFloat(slideStyles.getPropertyValue('padding-left'));\n          const paddingRight = parseFloat(slideStyles.getPropertyValue('padding-right'));\n          const marginLeft = parseFloat(slideStyles.getPropertyValue('margin-left'));\n          const marginRight = parseFloat(slideStyles.getPropertyValue('margin-right'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box' && !Browser.isIE) {\n            slideSize = width + marginLeft + marginRight;\n          } else {\n            slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight;\n          }\n        } else {\n          const height = parseFloat(slideStyles.getPropertyValue('height'));\n          const paddingTop = parseFloat(slideStyles.getPropertyValue('padding-top'));\n          const paddingBottom = parseFloat(slideStyles.getPropertyValue('padding-bottom'));\n          const marginTop = parseFloat(slideStyles.getPropertyValue('margin-top'));\n          const marginBottom = parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box' && !Browser.isIE) {\n            slideSize = height + marginTop + marginBottom;\n          } else {\n            slideSize = height + paddingTop + paddingBottom + marginTop + marginBottom;\n          }\n        }\n      }\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        if (swiper.isHorizontal()) {\n          slides[i].style.width = `${slideSize}px`;\n        } else {\n          slides[i].style.height = `${slideSize}px`;\n        }\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n\n    prevSlideSize = slideSize;\n\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  let newSlidesGrid;\n\n  if (\n    rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n  if (!Support.flexbox || params.setWrapperSize) {\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid = newSlidesGrid;\n    }\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    if (swiper.isHorizontal()) {\n      if (rtl) slides.css({ marginLeft: `${spaceBetween}px` });\n      else slides.css({ marginRight: `${spaceBetween}px` });\n    } else slides.css({ marginBottom: `${spaceBetween}px` });\n  }\n\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  Utils.extend(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid,\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}\n\nfunction updateAutoHeight (speed) {\n  const swiper = this;\n  const activeSlides = [];\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n      const index = swiper.activeIndex + i;\n      if (index > swiper.slides.length) break;\n      activeSlides.push(swiper.slides.eq(index)[0]);\n    }\n  } else {\n    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}\n\nfunction updateSlidesOffset () {\n  const swiper = this;\n  const slides = swiper.slides;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n  }\n}\n\nfunction updateSlidesProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const { slides, rtlTranslate: rtl } = swiper;\n\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.removeClass(params.slideVisibleClass);\n\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    const slideProgress = (\n      (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n    ) / (slide.swiperSlideSize + params.spaceBetween);\n    if (params.watchSlidesVisibility) {\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible = (slideBefore >= 0 && slideBefore < swiper.size - 1)\n                || (slideAfter > 1 && slideAfter <= swiper.size)\n                || (slideBefore <= 0 && slideAfter >= swiper.size);\n      if (isVisible) {\n        swiper.visibleSlides.push(slide);\n        swiper.visibleSlidesIndexes.push(i);\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n  }\n  swiper.visibleSlides = $(swiper.visibleSlides);\n}\n\nfunction updateProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let { progress, isBeginning, isEnd } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / (translatesDiff);\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n  Utils.extend(swiper, {\n    progress,\n    isBeginning,\n    isEnd,\n  });\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}\n\nfunction updateSlidesClasses () {\n  const swiper = this;\n\n  const {\n    slides, params, $wrapperEl, activeIndex, realIndex,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n\n  let activeSlide;\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  }\n\n  // Active classes\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    }\n  }\n  // Next Slide\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  }\n  // Prev Slide\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    }\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    }\n  }\n}\n\nfunction updateActiveIndex (newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid, snapGrid, params, activeIndex: previousIndex, realIndex: previousRealIndex, snapIndex: previousSnapIndex,\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    }\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n\n  // Get real index\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n  Utils.extend(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex,\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  if (swiper.initialized || swiper.runCallbacksOnInit) {\n    swiper.emit('slideChange');\n  }\n}\n\nfunction updateClickedSlide (e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e.target).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) slideFound = true;\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = $(slide).index();\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide,\n};\n\nfunction getTranslate (axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n\n  const {\n    params, rtlTranslate: rtl, translate, $wrapperEl,\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n\n  let currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n\n  return currentTranslate || 0;\n}\n\nfunction setTranslate (translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl, params, $wrapperEl, progress,\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (!params.virtualTranslate) {\n    if (Support.transforms3d) $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n    else $wrapperEl.transform(`translate(${x}px, ${y}px)`);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate () {\n  return (-this.snapGrid[0]);\n}\n\nfunction maxTranslate () {\n  return (-this.snapGrid[this.snapGrid.length - 1]);\n}\n\nvar translate = {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n};\n\nfunction setTransition (duration, byController) {\n  const swiper = this;\n\n  swiper.$wrapperEl.transition(duration);\n\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionStart (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, params, previousIndex } = swiper;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionStart');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionStart');\n      return;\n    }\n    swiper.emit('slideChangeTransitionStart');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionStart');\n    } else {\n      swiper.emit('slidePrevTransitionStart');\n    }\n  }\n}\n\nfunction transitionEnd$1 (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, previousIndex } = swiper;\n  swiper.animating = false;\n  swiper.setTransition(0);\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionEnd');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionEnd');\n      return;\n    }\n    swiper.emit('slideChangeTransitionEnd');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionEnd');\n    } else {\n      swiper.emit('slidePrevTransitionEnd');\n    }\n  }\n}\n\nvar transition$1 = {\n  setTransition,\n  transitionStart,\n  transitionEnd: transitionEnd$1,\n};\n\nfunction slideTo (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n\n  const {\n    params, snapGrid, slidesGrid, previousIndex, activeIndex, rtlTranslate: rtl,\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  let snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex];\n\n  // Update progress\n  swiper.updateProgress(translate);\n\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';\n  else if (slideIndex < activeIndex) direction = 'prev';\n  else direction = 'reset';\n\n\n  // Update Index\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n\n  if (speed === 0 || !Support.transition) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n          swiper.onSlideToWrapperTransitionEnd = null;\n          delete swiper.onSlideToWrapperTransitionEnd;\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nfunction slideToLoop (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating } = swiper;\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params, animating, snapGrid, slidesGrid, rtlTranslate,\n  } = swiper;\n\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map((val) => normalize(val));\n  const normalizedSlidesGrid = slidesGrid.map((val) => normalize(val));\n\n  const currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n  const prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  let prevIndex;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const snapIndex = Math.floor(index / swiper.params.slidesPerGroup);\n\n  if (snapIndex < swiper.snapGrid.length - 1) {\n    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n\n    if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {\n      index = swiper.params.slidesPerGroup;\n    }\n  }\n\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (\n        (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n        || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n      ) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n          .eq(0)\n          .index();\n\n        Utils.nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl\n        .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n        .eq(0)\n        .index();\n\n      Utils.nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide,\n};\n\nfunction loopCreate () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n  // Remove duplicated slides\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n\n  let slides = $wrapperEl.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(doc$1.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $wrapperEl.append(blankNode);\n      }\n      slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n\n  swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n  swiper.loopedSlides += params.loopAdditionalSlides;\n  if (swiper.loopedSlides > slides.length) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((index, el) => {\n    const slide = $(el);\n    if (index < swiper.loopedSlides) appendSlides.push(el);\n    if (index < slides.length && index >= slides.length - swiper.loopedSlides) prependSlides.push(el);\n    slide.attr('data-swiper-slide-index', index);\n  });\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}\n\nfunction loopFix () {\n  const swiper = this;\n  const {\n    params, activeIndex, slides, loopedSlides, allowSlidePrev, allowSlideNext, snapGrid, rtlTranslate: rtl,\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate();\n\n\n  // Fix For Negative Oversliding\n  if (activeIndex < loopedSlides) {\n    newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n}\n\nfunction loopDestroy () {\n  const swiper = this;\n  const { $wrapperEl, params, slides } = swiper;\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass},.${params.slideClass}.${params.slideBlankClass}`).remove();\n  slides.removeAttr('data-swiper-slide-index');\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy,\n};\n\nfunction setGrabCursor (moving) {\n  const swiper = this;\n  if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  const el = swiper.el;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}\n\nfunction unsetGrabCursor () {\n  const swiper = this;\n  if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  swiper.el.style.cursor = '';\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor,\n};\n\nfunction appendSlide (slides) {\n  const swiper = this;\n  const { $wrapperEl, params } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n}\n\nfunction prependSlide (slides) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}\n\nfunction addSlide (index, slides) {\n  const swiper = this;\n  const { $wrapperEl, params, activeIndex } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides.eq(i);\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    $wrapperEl.append(slidesBuffer[i]);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeSlide (slidesIndexes) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeAllSlides () {\n  const swiper = this;\n\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}\n\nvar manipulation = {\n  appendSlide,\n  prependSlide,\n  addSlide,\n  removeSlide,\n  removeAllSlides,\n};\n\nconst Device = (function Device() {\n  const ua = win$1.navigator.userAgent;\n\n  const device = {\n    ios: false,\n    android: false,\n    androidChrome: false,\n    desktop: false,\n    windows: false,\n    iphone: false,\n    ipod: false,\n    ipad: false,\n    cordova: win$1.cordova || win$1.phonegap,\n    phonegap: win$1.cordova || win$1.phonegap,\n  };\n\n  const windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n\n\n  // Windows\n  if (windows) {\n    device.os = 'windows';\n    device.osVersion = windows[2];\n    device.windows = true;\n  }\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.osVersion = android[2];\n    device.android = true;\n    device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n  // iOS\n  if (iphone && !ipod) {\n    device.osVersion = iphone[2].replace(/_/g, '.');\n    device.iphone = true;\n  }\n  if (ipad) {\n    device.osVersion = ipad[2].replace(/_/g, '.');\n    device.ipad = true;\n  }\n  if (ipod) {\n    device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n    device.iphone = true;\n  }\n  // iOS 8+ changed UA\n  if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n    if (device.osVersion.split('.')[0] === '10') {\n      device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n    }\n  }\n\n  // Desktop\n  device.desktop = !(device.os || device.android || device.webView);\n\n  // Webview\n  device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n  // Minimal UI\n  if (device.os && device.os === 'ios') {\n    const osVersionArr = device.osVersion.split('.');\n    const metaViewport = doc$1.querySelector('meta[name=\"viewport\"]');\n    device.minimalUi = !device.webView\n      && (ipod || iphone)\n      && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7)\n      && metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n  }\n\n  // Pixel Ratio\n  device.pixelRatio = win$1.devicePixelRatio || 1;\n\n  // Export object\n  return device;\n}());\n\nfunction onTouchStart (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  data.isTouchEvent = e.type === 'touchstart';\n  if (!data.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (!data.isTouchEvent && 'button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n  if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`)[0]) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!$(e).closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (\n    edgeSwipeDetection\n    && ((startX <= edgeSwipeThreshold)\n    || (startX >= win$1.screen.width - edgeSwipeThreshold))\n  ) {\n    return;\n  }\n\n  Utils.extend(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined,\n  });\n\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = Utils.now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n    if ($(e.target).is(data.formElements)) preventDefault = false;\n    if (\n      doc$1.activeElement\n      && $(doc$1.activeElement).is(data.formElements)\n      && doc$1.activeElement !== e.target\n    ) {\n      doc$1.activeElement.blur();\n    }\n\n    const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n    if (params.touchStartForcePreventDefault || shouldPreventDefault) {\n      e.preventDefault();\n    }\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches, rtlTranslate: rtl } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  if (data.isTouchEvent && e.type === 'mousemove') return;\n  const pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    // isMoved = true;\n    swiper.allowClick = false;\n    if (data.isTouched) {\n      Utils.extend(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY,\n      });\n      data.touchStartTime = Utils.now();\n    }\n    return;\n  }\n  if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (\n        (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n        || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n      ) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (\n      (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n      || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n    ) {\n      return;\n    }\n  }\n  if (data.isTouchEvent && doc$1.activeElement) {\n    if (e.target === doc$1.activeElement && $(e.target).is(data.formElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt((diffX ** 2) + (diffY ** 2)) < swiper.params.threshold) return;\n\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if ((diffX * diffX) + (diffY * diffY) >= 25) {\n        touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  e.preventDefault();\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data.isMoved) {\n    if (params.loop) {\n      swiper.loopFix();\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data.currentTranslate = diff + data.startTranslate;\n\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if ((diff > 0 && data.currentTranslate > swiper.minTranslate())) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.minTranslate() - 1) + ((-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio);\n  } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.maxTranslate() + 1) - ((swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio);\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger) return;\n\n  // Update active index in free mode\n  if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode) {\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime,\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: Utils.now(),\n    });\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}\n\nfunction onTouchEnd (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n\n  const {\n    params, touches, rtlTranslate: rtl, $wrapperEl, slidesGrid, snapGrid,\n  } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = Utils.now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap', e);\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) > 300) {\n      if (data.clickTimeout) clearTimeout(data.clickTimeout);\n      data.clickTimeout = Utils.nextTick(() => {\n        if (!swiper || swiper.destroyed) return;\n        swiper.emit('click', e);\n      }, 300);\n    }\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) < 300) {\n      if (data.clickTimeout) clearTimeout(data.clickTimeout);\n      swiper.emit('doubleTap', e);\n    }\n  }\n\n  data.lastClickTime = Utils.now();\n  Utils.nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n\n    if (params.freeModeMomentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeModeMomentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeModeSticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        swiper.once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n\n          swiper.setTransition(params.speed);\n          swiper.setTranslate(afterBouncePosition);\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeModeSticky) {\n      swiper.slideToClosest();\n      return;\n    }\n\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n    if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > (1 - params.longSwipesRatio)) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      swiper.slideTo(stopIndex + params.slidesPerGroup);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize () {\n  const swiper = this;\n\n  const { params, el } = swiper;\n\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const { allowSlideNext, allowSlidePrev, snapGrid } = swiper;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n\n  swiper.updateSize();\n  swiper.updateSlides();\n\n  if (params.freeMode) {\n    const newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n    swiper.setTranslate(newTranslate);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n  } else {\n    swiper.updateSlidesClasses();\n    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n      swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n    swiper.autoplay.run();\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick (e) {\n  const swiper = this;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  {\n    swiper.onTouchStart = onTouchStart.bind(swiper);\n    swiper.onTouchMove = onTouchMove.bind(swiper);\n    swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n      doc$1.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      doc$1.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture } : capture);\n        target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.addEventListener('mousedown', swiper.onTouchStart, false);\n        doc$1.addEventListener('mousemove', swiper.onTouchMove, capture);\n        doc$1.addEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.addEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n}\n\nfunction detachEvents() {\n  const swiper = this;\n\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n      doc$1.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      doc$1.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.removeEventListener('mousedown', swiper.onTouchStart, false);\n        doc$1.removeEventListener('mousemove', swiper.onTouchMove, capture);\n        doc$1.removeEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.removeEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n}\n\nvar events = {\n  attachEvents,\n  detachEvents,\n};\n\nfunction setBreakpoint () {\n  const swiper = this;\n  const {\n    activeIndex, initialized, loopedSlides = 0, params,\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\n\n  // Set breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints);\n\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n    if (breakpointOnlyParams) {\n      ['slidesPerView', 'spaceBetween', 'slidesPerGroup'].forEach((param) => {\n        const paramValue = breakpointOnlyParams[param];\n        if (typeof paramValue === 'undefined') return;\n        if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n          breakpointOnlyParams[param] = 'auto';\n        } else if (param === 'slidesPerView') {\n          breakpointOnlyParams[param] = parseFloat(paramValue);\n        } else {\n          breakpointOnlyParams[param] = parseInt(paramValue, 10);\n        }\n      });\n    }\n\n    const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n    const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n    const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n    if (directionChanged && initialized) {\n      swiper.changeDirection();\n    }\n\n    Utils.extend(swiper.params, breakpointParams);\n\n    Utils.extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n    });\n\n    swiper.currentBreakpoint = breakpoint;\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n    }\n\n    swiper.emit('breakpoint', breakpointParams);\n  }\n}\n\nfunction getBreakpoint (breakpoints) {\n  const swiper = this;\n  // Get breakpoint for window width\n  if (!breakpoints) return undefined;\n  let breakpoint = false;\n  const points = [];\n  Object.keys(breakpoints).forEach((point) => {\n    points.push(point);\n  });\n  points.sort((a, b) => parseInt(a, 10) - parseInt(b, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const point = points[i];\n    if (swiper.params.breakpointsInverse) {\n      if (point <= win$1.innerWidth) {\n        breakpoint = point;\n      }\n    } else if (point >= win$1.innerWidth && !breakpoint) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = { setBreakpoint, getBreakpoint };\n\nfunction addClasses () {\n  const swiper = this;\n  const {\n    classNames, params, rtl, $el,\n  } = swiper;\n  const suffixes = [];\n\n  suffixes.push('initialized');\n  suffixes.push(params.direction);\n\n  if (params.freeMode) {\n    suffixes.push('free-mode');\n  }\n  if (!Support.flexbox) {\n    suffixes.push('no-flexbox');\n  }\n  if (params.autoHeight) {\n    suffixes.push('autoheight');\n  }\n  if (rtl) {\n    suffixes.push('rtl');\n  }\n  if (params.slidesPerColumn > 1) {\n    suffixes.push('multirow');\n  }\n  if (Device.android) {\n    suffixes.push('android');\n  }\n  if (Device.ios) {\n    suffixes.push('ios');\n  }\n  // WP8 Touch Events Fix\n  if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n    suffixes.push(`wp8-${params.direction}`);\n  }\n\n  suffixes.forEach((suffix) => {\n    classNames.push(params.containerModifierClass + suffix);\n  });\n\n  $el.addClass(classNames.join(' '));\n}\n\nfunction removeClasses () {\n  const swiper = this;\n  const { $el, classNames } = swiper;\n\n  $el.removeClass(classNames.join(' '));\n}\n\nvar classes = { addClasses, removeClasses };\n\nfunction loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n  let image;\n  function onReady() {\n    if (callback) callback();\n  }\n  if (!imageEl.complete || !checkForComplete) {\n    if (src) {\n      image = new win$1.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n      if (sizes) {\n        image.sizes = sizes;\n      }\n      if (srcset) {\n        image.srcset = srcset;\n      }\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}\n\nfunction preloadImages () {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(\n      imageEl,\n      imageEl.currentSrc || imageEl.getAttribute('src'),\n      imageEl.srcset || imageEl.getAttribute('srcset'),\n      imageEl.sizes || imageEl.getAttribute('sizes'),\n      true,\n      onReady\n    );\n  }\n}\n\nvar images = {\n  loadImage,\n  preloadImages,\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const wasLocked = swiper.isLocked;\n\n  swiper.isLocked = swiper.snapGrid.length === 1;\n  swiper.allowSlideNext = !swiper.isLocked;\n  swiper.allowSlidePrev = !swiper.isLocked;\n\n  // events\n  if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n    swiper.navigation.update();\n  }\n}\n\nvar checkOverflow$1 = { checkOverflow };\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'container',\n  initialSlide: 0,\n  speed: 300,\n  //\n  preventInteractionOnTransition: false,\n\n  // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n\n  // Free mode\n  freeMode: false,\n  freeModeMomentum: true,\n  freeModeMomentumRatio: 1,\n  freeModeMomentumBounce: true,\n  freeModeMomentumBounceRatio: 1,\n  freeModeMomentumVelocityRatio: 1,\n  freeModeSticky: false,\n  freeModeMinimumVelocity: 0.02,\n\n  // Autoheight\n  autoHeight: false,\n\n  // Set wrapper width\n  setWrapperSize: false,\n\n  // Virtual Translate\n  virtualTranslate: false,\n\n  // Effects\n  effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsInverse: false,\n\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerColumn: 1,\n  slidesPerColumnFill: 'column',\n  slidesPerGroup: 1,\n  centeredSlides: false,\n  slidesOffsetBefore: 0, // in px\n  slidesOffsetAfter: 0, // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: false,\n\n  // Round length\n  roundLengths: false,\n\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: true,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n\n  // Progress\n  watchSlidesProgress: false,\n  watchSlidesVisibility: false,\n\n  // Cursor\n  grabCursor: false,\n\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopFillGroupWithBlank: false,\n\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null, // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n\n  // Passive Listeners\n  passiveListeners: true,\n\n  // NS\n  containerModifierClass: 'swiper-container-', // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n\n  // Callbacks\n  runCallbacksOnInit: true,\n};\n\n/* eslint no-param-reassign: \"off\" */\n\nconst prototypes = {\n  update,\n  translate,\n  transition: transition$1,\n  slide,\n  loop,\n  grabCursor,\n  manipulation,\n  events,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes,\n  images,\n};\n\nconst extendedDefaults = {};\n\nclass Swiper extends SwiperClass {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n\n    params = Utils.extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    super(params);\n\n    Object.keys(prototypes).forEach((prototypeGroup) => {\n      Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\n        if (!Swiper.prototype[protoMethod]) {\n          Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n        }\n      });\n    });\n\n    // Swiper Instance\n    const swiper = this;\n    if (typeof swiper.modules === 'undefined') {\n      swiper.modules = {};\n    }\n    Object.keys(swiper.modules).forEach((moduleName) => {\n      const module = swiper.modules[moduleName];\n      if (module.params) {\n        const moduleParamName = Object.keys(module.params)[0];\n        const moduleParams = module.params[moduleParamName];\n        if (typeof moduleParams !== 'object' || moduleParams === null) return;\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = { enabled: true };\n        }\n        if (\n          typeof params[moduleParamName] === 'object'\n          && !('enabled' in params[moduleParamName])\n        ) {\n          params[moduleParamName].enabled = true;\n        }\n        if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\n      }\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = Utils.extend({}, defaults);\n    swiper.useModulesParams(swiperParams);\n\n    // Extend defaults with passed params\n    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = Utils.extend({}, swiper.params);\n    swiper.passedParams = Utils.extend({}, params);\n\n    // Save Dom lib\n    swiper.$ = $;\n\n    // Find el\n    const $el = $(swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return undefined;\n    }\n\n    if ($el.length > 1) {\n      const swipers = [];\n      $el.each((index, containerEl) => {\n        const newParams = Utils.extend({}, params, { el: containerEl });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    }\n\n    el.swiper = swiper;\n    $el.data('swiper', swiper);\n\n    // Find Wrapper\n    const $wrapperEl = $el.children(`.${swiper.params.wrapperClass}`);\n\n    // Extend Swiper\n    Utils.extend(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n\n      // Classes\n      classNames: [],\n\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // RTL\n      rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n\n      //\n      isBeginning: true,\n      isEnd: false,\n\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n\n      // Touch Events\n      touchEvents: (function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend'];\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\n        if (Support.pointerEvents) {\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        } else if (Support.prefixedPointerEvents) {\n          desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n        }\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2],\n        };\n        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }()),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        formElements: 'input, select, option, textarea, button, video',\n        // Last click time\n        lastClickTime: Utils.now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined,\n      },\n\n      // Clicks\n      allowClick: true,\n\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0,\n      },\n\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0,\n\n    });\n\n    // Install Modules\n    swiper.useModules();\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    return swiper;\n  }\n\n  slidesPerViewDynamic() {\n    const swiper = this;\n    const {\n      params, slides, slidesGrid, size: swiperSize, activeIndex,\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n          spv += 1;\n        }\n      }\n    }\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const { snapGrid, params } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if ((newDirection === currentDirection) || (newDirection !== 'horizontal' && newDirection !== 'vertical')) {\n      return swiper;\n    }\n\n    swiper.$el\n      .removeClass(`${swiper.params.containerModifierClass}${currentDirection} wp8-${currentDirection}`)\n      .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n\n    if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      swiper.$el.addClass(`${swiper.params.containerModifierClass}wp8-${newDirection}`);\n    }\n\n    swiper.params.direction = newDirection;\n\n    swiper.slides.each((slideIndex, slideEl) => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n\n    return swiper;\n  }\n\n  init() {\n    const swiper = this;\n    if (swiper.initialized) return;\n\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n\n    // Init Flag\n    swiper.initialized = true;\n\n    // Emit\n    swiper.emit('init');\n  }\n\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params, $el, $wrapperEl, slides,\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n      if (slides && slides.length) {\n        slides\n          .removeClass([\n            params.slideVisibleClass,\n            params.slideActiveClass,\n            params.slideNextClass,\n            params.slidePrevClass,\n          ].join(' '))\n          .removeAttr('style')\n          .removeAttr('data-swiper-slide-index')\n          .removeAttr('data-swiper-column')\n          .removeAttr('data-swiper-row');\n      }\n    }\n\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      swiper.$el.data('swiper', null);\n      Utils.deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    Utils.extend(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return defaults;\n  }\n\n  static get Class() {\n    return SwiperClass;\n  }\n\n  static get $() {\n    return $;\n  }\n}\n\nvar Device$1 = {\n  name: 'device',\n  proto: {\n    device: Device,\n  },\n  static: {\n    device: Device,\n  },\n};\n\nvar Support$1 = {\n  name: 'support',\n  proto: {\n    support: Support,\n  },\n  static: {\n    support: Support,\n  },\n};\n\nvar Browser$1 = {\n  name: 'browser',\n  proto: {\n    browser: Browser,\n  },\n  static: {\n    browser: Browser,\n  },\n};\n\nvar Resize = {\n  name: 'resize',\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      resize: {\n        resizeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('beforeResize');\n          swiper.emit('resize');\n        },\n        orientationChangeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('orientationchange');\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      // Emit resize\n      win$1.addEventListener('resize', swiper.resize.resizeHandler);\n\n      // Emit orientationchange\n      win$1.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n    destroy() {\n      const swiper = this;\n      win$1.removeEventListener('resize', swiper.resize.resizeHandler);\n      win$1.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n  },\n};\n\nconst Observer = {\n  func: win$1.MutationObserver || win$1.WebkitMutationObserver,\n  attach(target, options = {}) {\n    const swiper = this;\n\n    const ObserverFunc = Observer.func;\n    const observer = new ObserverFunc((mutations) => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        swiper.emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        swiper.emit('observerUpdate', mutations[0]);\n      };\n\n      if (win$1.requestAnimationFrame) {\n        win$1.requestAnimationFrame(observerUpdate);\n      } else {\n        win$1.setTimeout(observerUpdate, 0);\n      }\n    });\n\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n    });\n\n    swiper.observer.observers.push(observer);\n  },\n  init() {\n    const swiper = this;\n    if (!Support.observer || !swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n      for (let i = 0; i < containerParents.length; i += 1) {\n        swiper.observer.attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    swiper.observer.attach(swiper.$el[0], { childList: swiper.params.observeSlideChildren });\n\n    // Observe wrapper\n    swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n  },\n  destroy() {\n    const swiper = this;\n    swiper.observer.observers.forEach((observer) => {\n      observer.disconnect();\n    });\n    swiper.observer.observers = [];\n  },\n};\n\nvar Observer$1 = {\n  name: 'observer',\n  params: {\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false,\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      observer: {\n        init: Observer.init.bind(swiper),\n        attach: Observer.attach.bind(swiper),\n        destroy: Observer.destroy.bind(swiper),\n        observers: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.observer.init();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.observer.destroy();\n    },\n  },\n};\n\nfunction isEventSupported() {\n  const eventName = 'onwheel';\n  let isSupported = eventName in doc$1;\n\n  if (!isSupported) {\n    const element = doc$1.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported\n    && doc$1.implementation\n    && doc$1.implementation.hasFeature\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    && doc$1.implementation.hasFeature('', '') !== true\n  ) {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = doc$1.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\nconst Mousewheel = {\n  lastScrollTime: Utils.now(),\n  event: (function getEvent() {\n    if (win$1.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\n    return isEventSupported() ? 'wheel' : 'mousewheel';\n  }()),\n  normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) { // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else { // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = (pX < 1) ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = (pY < 1) ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY,\n    };\n  },\n  handleMouseEnter() {\n    const swiper = this;\n    swiper.mouseEntered = true;\n  },\n  handleMouseLeave() {\n    const swiper = this;\n    swiper.mouseEntered = false;\n  },\n  handle(event) {\n    let e = event;\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n\n    if (!swiper.mouseEntered && !params.releaseOnEdges) return true;\n\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n    const data = Mousewheel.normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = data.pixelX * rtlFactor;\n        else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = data.pixelY;\n      else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n\n    if (delta === 0) return true;\n\n    if (params.invert) delta = -delta;\n\n    if (!swiper.params.freeMode) {\n      if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n        if (delta < 0) {\n          if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n            swiper.slideNext();\n            swiper.emit('scroll', e);\n          } else if (params.releaseOnEdges) return true;\n        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n          swiper.slidePrev();\n          swiper.emit('scroll', e);\n        } else if (params.releaseOnEdges) return true;\n      }\n      swiper.mousewheel.lastScrollTime = (new win$1.Date()).getTime();\n    } else {\n      // Freemode or scrollContainer:\n      if (swiper.params.loop) {\n        swiper.loopFix();\n      }\n      let position = swiper.getTranslate() + (delta * params.sensitivity);\n      const wasBeginning = swiper.isBeginning;\n      const wasEnd = swiper.isEnd;\n\n      if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n      if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n\n      swiper.setTransition(0);\n      swiper.setTranslate(position);\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n\n      if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n        swiper.updateSlidesClasses();\n      }\n\n      if (swiper.params.freeModeSticky) {\n        clearTimeout(swiper.mousewheel.timeout);\n        swiper.mousewheel.timeout = Utils.nextTick(() => {\n          swiper.slideToClosest();\n        }, 300);\n      }\n      // Emit event\n      swiper.emit('scroll', e);\n\n      // Stop autoplay\n      if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n      // Return page scroll on edge positions\n      if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n    }\n\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    return false;\n  },\n  enable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n    target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n    target.on(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = true;\n    return true;\n  },\n  disable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (!swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.off(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = false;\n    return true;\n  },\n};\n\nconst Pagination = {\n  update() {\n    // Render || Update Pagination bullets/items\n    const swiper = this;\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    // Current/Total\n    let current;\n    const total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n      if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n        current -= (slidesLength - (swiper.loopedSlides * 2));\n      }\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)}px`);\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n          if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n            swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (swiper.pagination.dynamicBulletIndex < 0) {\n            swiper.pagination.dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = current - swiper.pagination.dynamicBulletIndex;\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.removeClass(`${params.bulletActiveClass} ${params.bulletActiveClass}-next ${params.bulletActiveClass}-next-next ${params.bulletActiveClass}-prev ${params.bulletActiveClass}-prev-prev ${params.bulletActiveClass}-main`);\n      if ($el.length > 1) {\n        bullets.each((index, bullet) => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n            if (bulletIndex === firstIndex) {\n              $bullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n            }\n            if (bulletIndex === lastIndex) {\n              $bullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        $bullet.addClass(params.bulletActiveClass);\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n          $firstDisplayedBullet\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev`)\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev-prev`);\n          $lastDisplayedBullet\n            .next()\n            .addClass(`${params.bulletActiveClass}-next`)\n            .next()\n            .addClass(`${params.bulletActiveClass}-next-next`);\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n    if (params.type === 'fraction') {\n      $el.find(`.${params.currentClass}`).text(params.formatFractionCurrent(current + 1));\n      $el.find(`.${params.totalClass}`).text(params.formatFractionTotal(total));\n    }\n    if (params.type === 'progressbar') {\n      let progressbarDirection;\n      if (params.progressbarOpposite) {\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n      } else {\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n      }\n      const scale = (current + 1) / total;\n      let scaleX = 1;\n      let scaleY = 1;\n      if (progressbarDirection === 'horizontal') {\n        scaleX = scale;\n      } else {\n        scaleY = scale;\n      }\n      $el.find(`.${params.progressbarFillClass}`).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n    }\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      swiper.emit('paginationRender', swiper, $el[0]);\n    } else {\n      swiper.emit('paginationUpdate', swiper, $el[0]);\n    }\n    $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n  },\n  render() {\n    // Render Container\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      const numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n      $el.html(paginationHTML);\n      swiper.pagination.bullets = $el.find(`.${params.bulletClass}`);\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>`\n        + ' / '\n        + `<span class=\"${params.totalClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type !== 'custom') {\n      swiper.emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (\n      swiper.params.uniqueNavElements\n      && typeof params.el === 'string'\n      && $el.length > 1\n      && swiper.$el.find(params.el).length === 1\n    ) {\n      $el = swiper.$el.find(params.el);\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      swiper.pagination.dynamicBulletIndex = 0;\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\n      $el.addClass(params.progressbarOppositeClass);\n    }\n\n    if (params.clickable) {\n      $el.on('click', `.${params.bulletClass}`, function onClick(e) {\n        e.preventDefault();\n        let index = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index += swiper.loopedSlides;\n        swiper.slideTo(index);\n      });\n    }\n\n    Utils.extend(swiper.pagination, {\n      $el,\n      el: $el[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const $el = swiper.pagination.$el;\n\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n    if (params.clickable) {\n      $el.off('click', `.${params.bulletClass}`);\n    }\n  },\n};\n\nvar pagination = {\n  name: 'pagination',\n  params: {\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: (number) => number,\n      formatFractionTotal: (number) => number,\n      bulletClass: 'swiper-pagination-bullet',\n      bulletActiveClass: 'swiper-pagination-bullet-active',\n      modifierClass: 'swiper-pagination-', // NEW\n      currentClass: 'swiper-pagination-current',\n      totalClass: 'swiper-pagination-total',\n      hiddenClass: 'swiper-pagination-hidden',\n      progressbarFillClass: 'swiper-pagination-progressbar-fill',\n      progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n      clickableClass: 'swiper-pagination-clickable', // NEW\n      lockClass: 'swiper-pagination-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      pagination: {\n        init: Pagination.init.bind(swiper),\n        render: Pagination.render.bind(swiper),\n        update: Pagination.update.bind(swiper),\n        destroy: Pagination.destroy.bind(swiper),\n        dynamicBulletIndex: 0,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.pagination.init();\n      swiper.pagination.render();\n      swiper.pagination.update();\n    },\n    activeIndexChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.update();\n      } else if (typeof swiper.snapIndex === 'undefined') {\n        swiper.pagination.update();\n      }\n    },\n    snapIndexChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.update();\n      }\n    },\n    slidesLengthChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    snapGridLengthChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.pagination.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      if (\n        swiper.params.pagination.el\n        && swiper.params.pagination.hideOnClick\n        && swiper.pagination.$el.length > 0\n        && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n      ) {\n        const isHidden = swiper.pagination.$el.hasClass(swiper.params.pagination.hiddenClass);\n        if (isHidden === true) {\n          swiper.emit('paginationShow', swiper);\n        } else {\n          swiper.emit('paginationHide', swiper);\n        }\n        swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Scrollbar = {\n  setTranslate() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const { scrollbar, rtlTranslate: rtl, progress } = swiper;\n    const {\n      dragSize, trackSize, $dragEl, $el,\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      } else {\n        $dragEl.transform(`translateX(${newPos}px)`);\n      }\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      } else {\n        $dragEl.transform(`translateY(${newPos}px)`);\n      }\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.timeout);\n      $el[0].style.opacity = 1;\n      swiper.scrollbar.timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  },\n  updateSize() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n\n    const { scrollbar } = swiper;\n    const { $dragEl, $el } = scrollbar;\n\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    const trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n    const divider = swiper.size / swiper.virtualSize;\n    const moveDivider = divider * (trackSize / swiper.size);\n    let dragSize;\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      $el[0].style.opacity = 0;\n    }\n    Utils.extend(scrollbar, {\n      trackSize,\n      divider,\n      moveDivider,\n      dragSize,\n    });\n    scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n  },\n  getPointerPosition(e) {\n    const swiper = this;\n    if (swiper.isHorizontal()) {\n      return ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n    }\n    return ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n  },\n  setDragPosition(e) {\n    const swiper = this;\n    const { scrollbar, rtlTranslate: rtl } = swiper;\n    const {\n      $el,\n      dragSize,\n      trackSize,\n      dragStartPos,\n    } = scrollbar;\n\n    let positionRatio;\n    positionRatio = ((scrollbar.getPointerPosition(e)) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top']\n      - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  },\n  onDragStart(e) {\n    const swiper = this;\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n    swiper.scrollbar.isTouched = true;\n    swiper.scrollbar.dragStartPos = (e.target === $dragEl[0] || e.target === $dragEl)\n      ? scrollbar.getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\n    e.preventDefault();\n    e.stopPropagation();\n\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    scrollbar.setDragPosition(e);\n\n    clearTimeout(swiper.scrollbar.dragTimeout);\n\n    $el.transition(0);\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n    swiper.emit('scrollbarDragStart', e);\n  },\n  onDragMove(e) {\n    const swiper = this;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    scrollbar.setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    swiper.emit('scrollbarDragMove', e);\n  },\n  onDragEnd(e) {\n    const swiper = this;\n\n    const params = swiper.params.scrollbar;\n    const { scrollbar } = swiper;\n    const { $el } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    swiper.scrollbar.isTouched = false;\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      swiper.scrollbar.dragTimeout = Utils.nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n    swiper.emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  },\n  enableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      doc$1.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      doc$1.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  disableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      doc$1.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      doc$1.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const { scrollbar, $el: $swiperEl } = swiper;\n    const params = swiper.params.scrollbar;\n\n    let $el = $(params.el);\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n    if ($dragEl.length === 0) {\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    Utils.extend(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0],\n    });\n\n    if (params.draggable) {\n      scrollbar.enableDraggable();\n    }\n  },\n  destroy() {\n    const swiper = this;\n    swiper.scrollbar.disableDraggable();\n  },\n};\n\nvar scrollbar = {\n  name: 'scrollbar',\n  params: {\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      scrollbar: {\n        init: Scrollbar.init.bind(swiper),\n        destroy: Scrollbar.destroy.bind(swiper),\n        updateSize: Scrollbar.updateSize.bind(swiper),\n        setTranslate: Scrollbar.setTranslate.bind(swiper),\n        setTransition: Scrollbar.setTransition.bind(swiper),\n        enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n        disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n        setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n        getPointerPosition: Scrollbar.getPointerPosition.bind(swiper),\n        onDragStart: Scrollbar.onDragStart.bind(swiper),\n        onDragMove: Scrollbar.onDragMove.bind(swiper),\n        onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n        isTouched: false,\n        timeout: null,\n        dragTimeout: null,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.scrollbar.init();\n      swiper.scrollbar.updateSize();\n      swiper.scrollbar.setTranslate();\n    },\n    update() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    resize() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    observerUpdate() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    setTranslate() {\n      const swiper = this;\n      swiper.scrollbar.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      swiper.scrollbar.setTransition(duration);\n    },\n    destroy() {\n      const swiper = this;\n      swiper.scrollbar.destroy();\n    },\n  },\n};\n\nconst Zoom = {\n  // Calc Scale From Multi-touches\n  getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2));\n    return distance;\n  },\n  // Events\n  onGestureStart(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    zoom.fakeGestureTouched = false;\n    zoom.fakeGestureMoved = false;\n    if (!Support.gestures) {\n      if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureTouched = true;\n      gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest('.swiper-slide');\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n    gesture.$imageEl.transition(0);\n    swiper.zoom.isScaling = true;\n  },\n  onGestureChange(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureMoved = true;\n      gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (Support.gestures) {\n      zoom.scale = e.scale * zoom.currentScale;\n    } else {\n      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n    }\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = (gesture.maxRatio - 1) + (((zoom.scale - gesture.maxRatio) + 1) ** 0.5);\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = (params.minRatio + 1) - (((params.minRatio - zoom.scale) + 1) ** 0.5);\n    }\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  onGestureEnd(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n        return;\n      }\n      if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n        return;\n      }\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    zoom.currentScale = zoom.scale;\n    zoom.isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  },\n  onTouchStart(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (Device.android) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  },\n  onTouchMove(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n      if (swiper.rtl) {\n        image.startX = -image.startX;\n        image.startY = -image.startY;\n      }\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !zoom.isScaling) {\n      if (\n        swiper.isHorizontal()\n        && (\n          (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n          || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      } if (\n        !swiper.isHorizontal()\n        && (\n          (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n          || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    e.preventDefault();\n    e.stopPropagation();\n\n    image.isMoved = true;\n    image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n    image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = (image.minX + 1) - (((image.minX - image.currentX) + 1) ** 0.8);\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = (image.maxX - 1) + (((image.currentX - image.maxX) + 1) ** 0.8);\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = (image.minY + 1) - (((image.minY - image.currentY) + 1) ** 0.8);\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = (image.maxY - 1) + (((image.currentY - image.maxY) + 1) ** 0.8);\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTouchEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTransitionEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n    }\n  },\n  // Toggle Zoom\n  toggle(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoom.out();\n    } else {\n      // Zoom In\n      zoom.in(e);\n    }\n  },\n  in(e) {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture, image } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left;\n      offsetY = gesture.$slideEl.offset().top;\n      diffX = (offsetX + (slideWidth / 2)) - touchX;\n      diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n\n      translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n      translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  out() {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    zoom.scale = 1;\n    zoom.currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  },\n  // Attach/Detach Events\n  enable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n  disable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n\n    swiper.zoom.enabled = false;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n};\n\nvar zoom = {\n  name: 'zoom',\n  params: {\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed',\n    },\n  },\n  create() {\n    const swiper = this;\n    const zoom = {\n      enabled: false,\n      scale: 1,\n      currentScale: 1,\n      isScaling: false,\n      gesture: {\n        $slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        $imageEl: undefined,\n        $imageWrapEl: undefined,\n        maxRatio: 3,\n      },\n      image: {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {},\n      },\n      velocity: {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined,\n      },\n    };\n\n    ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach((methodName) => {\n      zoom[methodName] = Zoom[methodName].bind(swiper);\n    });\n    Utils.extend(swiper, {\n      zoom,\n    });\n\n    let scale = 1;\n    Object.defineProperty(swiper.zoom, 'scale', {\n      get() {\n        return scale;\n      },\n      set(value) {\n        if (scale !== value) {\n          const imageEl = swiper.zoom.gesture.$imageEl ? swiper.zoom.gesture.$imageEl[0] : undefined;\n          const slideEl = swiper.zoom.gesture.$slideEl ? swiper.zoom.gesture.$slideEl[0] : undefined;\n          swiper.emit('zoomChange', value, imageEl, slideEl);\n        }\n        scale = value;\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.zoom.enabled) {\n        swiper.zoom.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.zoom.disable();\n    },\n    touchStart(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchStart(e);\n    },\n    touchEnd(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchEnd(e);\n    },\n    doubleTap(e) {\n      const swiper = this;\n      if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n        swiper.zoom.toggle(e);\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n  },\n};\n\n/* eslint no-underscore-dangle: \"off\" */\n\nconst Autoplay = {\n  run() {\n    const swiper = this;\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n    clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.timeout = Utils.nextTick(() => {\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.isEnd) {\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        swiper.slideTo(0, swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else {\n        swiper.autoplay.stop();\n      }\n    }, delay);\n  },\n  start() {\n    const swiper = this;\n    if (typeof swiper.autoplay.timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    swiper.emit('autoplayStart');\n    swiper.autoplay.run();\n    return true;\n  },\n  stop() {\n    const swiper = this;\n    if (!swiper.autoplay.running) return false;\n    if (typeof swiper.autoplay.timeout === 'undefined') return false;\n\n    if (swiper.autoplay.timeout) {\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = undefined;\n    }\n    swiper.autoplay.running = false;\n    swiper.emit('autoplayStop');\n    return true;\n  },\n  pause(speed) {\n    const swiper = this;\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.paused = true;\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      swiper.autoplay.run();\n    } else {\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n    }\n  },\n};\n\nvar autoplay = {\n  name: 'autoplay',\n  params: {\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      autoplay: {\n        running: false,\n        paused: false,\n        run: Autoplay.run.bind(swiper),\n        start: Autoplay.start.bind(swiper),\n        stop: Autoplay.stop.bind(swiper),\n        pause: Autoplay.pause.bind(swiper),\n        onTransitionEnd(e) {\n          if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n          swiper.autoplay.paused = false;\n          if (!swiper.autoplay.running) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.run();\n          }\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.autoplay.enabled) {\n        swiper.autoplay.start();\n      }\n    },\n    beforeTransitionStart(speed, internal) {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.pause(speed);\n        } else {\n          swiper.autoplay.stop();\n        }\n      }\n    },\n    sliderFirstMove() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.stop();\n        } else {\n          swiper.autoplay.pause();\n        }\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        swiper.autoplay.stop();\n      }\n    },\n  },\n};\n\n// Swiper Class\n\nconst components = [\n  Device$1,\n  Support$1,\n  Browser$1,\n  Resize,\n  Observer$1,\n  \n];\n\nif (typeof Swiper.use === 'undefined') {\n  Swiper.use = Swiper.Class.use;\n  Swiper.installModule = Swiper.Class.installModule;\n}\n\nSwiper.use(components);\n\nSwiper.use([pagination, scrollbar, autoplay, zoom]);\n\nexport { Swiper };\n"],"sourceRoot":""}
>>>>>>> Stashed changes
